{"version":3,"sources":["Jenkins.js","AsOf.js","Summarize.js","ComputerDisplay.js","QueueDisplay.js","BuildHistoryDisplay.js","groups/index.js","GitHubStatusDisplay.js","Spin.js","utils.js","pr/TestReportRenderer.js","pr/logs.js","pr/FailureReport.js","pr/CircleCICard.js","PrDisplay.js","JobCorrelationHeatmap.js","GitHubActionsDisplay.js","GitHubOverview.js","AuthorizeGitHub.js","SevReporter.js","Links.js","App.js","index.js","groups/tvm.js"],"names":["jenkins","s","url","options","a","undefined","axios","get","params","then","response","r","catch","error","data","urls","requests","map","err","all","result","this","v","AsOf","props","updateStatus","currentTime","updateTime","interval","connectedIn","timeString","Date","toLocaleTimeString","className","summarize_job","job","replace","summarize_date","timestamp","date","toLocaleDateString","toLocaleString","hour","minute","hour12","month","day","weekday","summarize_ago","today","seconds","hours","Math","floor","minutes","time","String","seconds2time","summarize_url","m","RegExp","exec","centsPerHour","osx","master","packet","rocm","centsToDollars","x","style","currency","ComputerDisplay","state","computer","update","setInterval","bind","clearInterval","setState","tree","Map","forEach","c","k","n","node","displayName","test","assignedLabels","some","l","name","classify_node","busy","total","offline","idle","set","totalCost","perCost","rows","entries","sort","kv","cost","busy_nodes","filter","executors","length","currentExecutable","b","running_rows","executable","href","running_map","task","cumulative_time","delta_ago","colSpan","Component","QueueDisplay","items","queue","why_map","q","why","summarize_why","why_rows","why_v","textAlign","paddingRight","task_map","task_rows","slice","task_v","width","textOverflow","maxWidth","overflow","size","jobs_on_pr","binary_and_smoke_tests_on_pr","is_success","is_failure","getJobName","subBuild","baseJobName","jobName","BuildHistoryDisplay","initialState","prefs_str","localStorage","getItem","prefs","JSON","parse","builds","known_jobs","showStale","username","showNotifications","Notification","permission","requestPermission","prevProps","setItem","stringify","get_github_commit_statuses","collect_known_jobs_set","compareFun","y","sx","e","startsWith","sy","topBuild","subBuilds","go","build","_class","known_jobs_set","add","add_jobs","jobs","index","commitId","job_name","github_commit_statuses","hasOwnProperty","duration","status","build_url","commit","i","changeSet","push","batch_get","request","depth","allBuilds","Set","props_mode","mode","Object","keys","endsWith","includes","found","values","sb_map","collect_jobs_from_github_status","still_unknown_set","consecutive_failure_count","sb","has","count","delete","key","body","known_jobs_head","durationScale","d3","rangeRound","domain","seen_prs","unknownCost","inProgressCost","status_cols","j","cell","dur","parse_duration","this_cost","ceil","perf_report","cellHref","link","target","rel","alt","role","color","aria-label","is_aborted","is_pending","overlay","mouseLeaveDelay","placement","destroyTooltipOnHide","fontFamily","padding","renderPullRequestNumber","comment","match","renderCauses","defaultCause","actions","action","causes","cause","shortDescription","pull_link","pull_id","isRebuild","isPullRequest","upstreamProject","author","desc","stale","find","parameters","param","value","getPullParams","title","number","getPushedBy","reverse","msg","whenString","height","type","checked","onChange","htmlFor","backgroundColor","position","zIndex","tvm","isMobile","navigator","userAgent","array_move","arr","old_index","new_index","splice","is_skipped","is_infra_failure","computeConsecutiveFailureCount","failure_window","getJenkinsJobName","NameFilterForm","jobNameFilter","defaultValue","onSubmit","_","preventDefault","id","marginLeft","fetchedBuilds","fetchError","lastUpdateDate","showGroups","groupJobs","window","branch","jenkins_data","commitIdxMap","idx","buildCommitId","buildIdx","fromEntries","user","repo","jsonUrl","commits","build_map","message","headline","pr_number","pr","pr_title","sha","addJenkinsResults","headers","regex","Boolean","nameMatches","isDockerJob","isGCJob","isCIFlowShouldRunJob","isGenerateTestMatrixJob","groups","console","group","obj","assign","getGroups","jobNames","findGroup","groupIsExpanded","groupIsFailing","result_icon","visibleJobs","shouldShowJob","groupedVisibleJobsMap","groupedVisibleJobs","groupName","groupBaseIndex","findIndex","jobIndex","toggleGroup","pop","shownGroup","visibleJobsHeaders","header","icon","headerClass","onClick","onAuxClick","cursor","decoratedBuildUrl","ghaRegex","item","toLowerCase","allOk","aggregateStatus","fontWeight","keepParent","split","paddingLeft","loadingInfo","margin","lastUpdate","fontSize","Spin","display","marginRight","text","formatBytes","MB","toFixed","GB","parseXml","xml","arrayTags","dom","DOMParser","Error","parseNode","xmlNode","nodeName","jsonNode","existing","Array","isArray","indexOf","attributes","attribute","nodeValue","textContent","childNodes","trim","parseFromString","asyncAll","functions","invoked","f","Promise","github_graphql_raw","query","pat","fetch","method","Authorization","json","errors","Accept","github","graphql","graphql_raw","raw","setQueryParam","currentUrlParams","URLSearchParams","location","search","history","pushState","pathname","toString","s3","prefix","bucket","delimiter","TestSuite","highlight","nodeRef","highlightElement","current","children","language","React","createRef","tcase","testcase","failure","content","join","fileinfo","file","line","Card","marginTop","Body","classname","ref","TestSummary","showDetail","suiteDetail","info","filename","classes","stats","passed","totals","skipped","classStats","Title","marginBottom","cases","files","prev","TestReportRenderer","updateFailure","testReportZip","arrayBuffer","innerFilename","buf","reports","Uint8Array","inner","unzipSync","strFromU8","suites","testsuite","testsuites","suite","failures","testInfo","numErrors","numFailures","getStatus","onLoaded","results","summary","noSummary","filterLog","log","negativeRegexes","lines","newLog","include","registerLogLanguage","monaco","groupRanges","languages","register","setMonarchTokensProvider","tokenizer","root","editor","defineTheme","base","inherit","rules","token","foreground","fontStyle","registerFoldingRangeProvider","provideFoldingRanges","model","context","help","LogViewer","transform","totalLines","defaultLanguage","theme","beforeMount","scrollBeyondLastLine","lineNumbersMinChars","folding","onMount","getAction","run","parseInt","from","matchAll","substring","posToLine","guessRelevantLine","revealLine","loading","FailureReport","shown","failedSteps","checkRuns","nodes","conclusion","workflow","workflowRun","details","step","incorrectReport","artifactUrl","databaseId","toggle","boxShadow","border","CircleCICard","buildMatch","targetUrl","showSteps","buildId","errorMessage","prevState","hasError","steps","output_url","replaceAll","circle_yml","logLevel","toUpperCase","SUCCESS","FAILURE","FAILED","TIMEDOUT","NEUTRAL","CANCELLED","logText","existingEditor","setValue","ButtonGroup","radio","ToggleButton","variant","stepsElement","statusIcon","renderStatusIcon","iconStyle","renderLogViewer","PREVIEW_BASE_URL","getCommitsForPrQuery","getCommitQuery","hash","PrDisplay","selectedCommit","error_message","runs","check","prompt","isPr","commitResponse","prResult","prCommits","repository","pullRequest","allCommits","oid","messageHeadline","object","commit_hash","workflow_runs","checkSuites","artifacts","mergeStatuses","statuses","contexts","loadingNewCommit","promises","s3_artifacts","prefixes","extractItem","ListBucketResult","prefixItem","Prefix","contents","python","cpp","runIsPassing","paddingBottom","subject","commitUrl","comments","diff","login","messageBody","findDiffInComments","maxHeight","starts","ends","lineNumber","ranges","min","start","end","kind","FoldingRangeKind","Imports","isShowing","getGroupRanges","checkName","s3Artifacts","checks","testResultArtifacts","artifactsByName","artifact","Key","renderResultsButton","artifactDetails","artifactName","getArtifactName","Size","showReport","render","element","detailsUrl","args","expired","size_in_bytes","extra","renderArtifact","counts","cards","show","isExpanded","card","borderRadius","Triage","run_index","renderChecks","checksData","concat","renderGitHubArtifacts","renderS3Artifacts","artifactsElement","checksElement","renderGroups","displayRuns","used","report","renderTitle","renderDiff","renderBody","renderDocPreviewButton","renderCommitSelector","JobCorrelationHeatmap","all_jobs","passes","seen_names","correlationMatrix","addFailure","failure1","failure2","job_names","fullMatrix","name1","row","name2","cache","job_index","allSettled","correlations","correlateJobs","defaultTooltipTemplate","background","label","el","document","getElementById","innerHTML","usageStatistics","xAxis","formatter","yAxis","tooltip","template","tooltipTemplate","categories","series","Chart","heatmapChart","GitHubActionsDisplay","actions_statuses","dates","last_updated","data_series","lineChart","COLORS","BranchDisplay","repos","canvas","ctx","getContext","beginPath","colors","success","neutral","cancelled","pending","queued","unknown","fill","fillStyle","fillRect","resp","byName","jobsByName","commitStatuses","gridTemplateRows","GitHubOverview","CommonPrefixes","folders","Contents","s3ListBucket","users","flat","branches","repoName","branchMatch","branchName","flexWrap","AuthorizeGitHub","loggedin","URL","code","searchParams","errorMsg","alert","lastRedirect","removeItem","sevs","issue","existingSevs","renderedSevs","sev","renderSev","Links","showMore","more","to","Status","AuthorizeGithubRoute","LogoutGitHub","Build","Build1","RouteNotFound","BuildRoute","exact","path","component","Build1Route","App","basename","segment","ReactDOM","module","exports"],"mappings":"oPA2EeA,EADC,IAnEhB,mFACE,SAAIC,GACF,MAAO,kCAAoCA,EAAI,cAFnD,kBAIE,SAAKA,GACH,MAAO,kCAAoCA,IAL/C,wDAQE,WAAUC,EAAKC,GAAf,eAAAC,EAAA,kEACkBC,IAAZF,IAAuBA,EAAU,IADvC,SAGQG,IACHC,IAAIL,EAAK,CAAEM,OAAQL,IACnBM,MAAK,SAACC,GACLC,EAAID,KAELE,OAAM,SAACC,OARZ,UAWmB,qBAANF,EAXb,yCAYWA,EAAEG,MAZb,gCAcW,MAdX,2CARF,uHA0BE,WAAgBC,EAAMZ,GAAtB,iBAAAC,EAAA,kEACkBC,IAAZF,IAAuBA,EAAU,IAEjCa,EAAWD,EAAKE,KAAI,SAACf,GACvB,OAAOI,IAAMC,IAAIL,EAAK,CAAEM,OAAQL,IAAWM,MACzC,SAACC,GAAD,MAAe,CAAEA,eACjB,SAACQ,GAAD,MAAU,CAAEA,aANlB,SAUQZ,IACHa,IAAIH,GACJP,MAAK,SAACC,GACLC,EAAID,KAELE,OAAM,SAACC,OAfZ,UAkBmB,qBAANF,EAlBb,yCAmBWA,EAAEM,KAAI,SAACG,GACZ,OAAIA,EAAOV,SACFU,EAAOV,SAASI,KAElB,SAvBb,gCA0BW,MA1BX,2CA1BF,sHAwDE,WAAeX,GAAf,SAAAC,EAAA,+EACSiB,KAAKd,IAAIc,KAAKnB,IAAI,YAAaC,IADxC,gDAxDF,iHA2DE,WAAYA,GAAZ,SAAAC,EAAA,+EACSiB,KAAKd,IAAIc,KAAKnB,IAAI,SAAUC,IADrC,gDA3DF,+GA8DE,WAAUmB,EAAGnB,GAAb,SAAAC,EAAA,+EACSiB,KAAKd,IAAIc,KAAKnB,IAAI,OAASoB,GAAInB,IADxC,gDA9DF,iE,OCAe,SAASoB,EAAKC,GAC3B,IAAMC,EACJD,EAAME,YAAcF,EAAMG,WAAaH,EAAMI,SAC3C,eAEA,eAAC,WAAD,2BAAwBJ,EAAMK,YAA9B,QAEEC,EACJN,EAAMG,WAAa,IAAII,KAAK,KAAO,EACjC,cAAC,WAAD,sBAEA,eAAC,WAAD,oBACSP,EAAMG,WAAWK,qBAD1B,KACkDP,KAGtD,OAAO,uBAAMQ,UAAWR,EAAjB,cAAiCK,EAAjC,OCjBF,SAASI,EAAcC,GAC5B,OAAOA,EACJC,QAAQ,YAAa,IACrBA,QAAQ,YAAa,IACrBA,QAAQ,aAAc,IACtBA,QAAQ,mBAAoB,IAC5BA,QAAQ,kBAAmB,IAC3BA,QAAQ,OAAQ,IAGd,SAASC,EAAeC,GAC7B,IAAMC,EAAO,IAAIR,KAAKO,GAEtB,OADc,IAAIP,MACRS,uBAAyBD,EAAKC,qBAC/BD,EAAKE,eAAe,QAAS,CAClCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGHL,EAAKE,eAAe,QAAS,CAClCI,MAAO,QACPC,IAAK,UACLC,QAAS,UA2BR,SAASC,EAAcV,GAC5B,IAAMC,EAAO,IAAIR,KAAKO,GAChBW,EAAQ,IAAIlB,KAClB,OAxBK,SAAsBmB,GAC3B,IAAIC,EAAQC,KAAKC,MAAMH,EAAU,MAC7BI,EAAUF,KAAKC,OAAOH,EAAkB,KAARC,GAAgB,IACpDD,EAAUA,EAAkB,KAARC,EAAyB,GAAVG,EACnC,IAAIC,EAAO,GAcX,OAZc,IAAVJ,IACFI,EAAOJ,EAAQ,KAED,IAAZG,GAA0B,KAATC,IAEnBA,IADAD,EAAUA,EAAU,IAAe,KAATC,EAAc,IAAMD,EAAUE,OAAOF,IAC7C,KAEP,KAATC,EACFA,EAAOL,EAAU,IAEjBK,GAAQL,EAAU,GAAK,IAAMA,EAAUM,OAAON,GAEzCK,EAMAE,CAAaL,KAAKC,OAAOJ,EAAQV,GAAQ,MAO3C,SAASmB,EAAcxD,GAC5B,IAAIyD,EACJ,OAGmB,QAFhBA,EAAIC,OACH,gEACAC,KAAK3D,IAEkByD,EAAE,GAVdvB,QAAQ,WAAY,IAUA,IAAMF,EAAcyB,EAAE,IAKhD,QAFNA,EAAIC,OAAO,mDAAmDC,KAC7D3D,IAGKyD,EAAE,GAEJzD,EAIF,IAAM4D,EAAe,CAC1B,YAAa,GACb,eAAgB,GAChB,YAAa,IACb,eAAgB,IAChB,iBAAkB,IAClB,mBAAoB,GACpB,UAAW,GACX,UAAW,IACXC,IAAK,MAAQ,GAAK,GAClBC,OAAQ,GACRC,OAAQ,GACRC,KAAM,EACN,SAAU,KAGL,SAASC,EAAeC,GAC7B,YAAU/D,IAAN+D,EAAwB,KAGpBA,EAAI,KAAK3B,eAAe,QAAS,CACvC4B,MAAO,WACPC,SAAU,Q,IC5FOC,E,kDACnB,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXC,SAAU,GACV/C,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrBF,YAAa,GANE,E,qDASnB,WACER,KAAKqD,SACLrD,KAAKO,SAAW+C,YAAYtD,KAAKqD,OAAOE,KAAKvD,MAAOA,KAAKG,MAAMI,Y,kCAEjE,WACEiD,cAAcxD,KAAKO,Y,2DAErB,8BAAAxB,EAAA,6DACQsB,EAAc,IAAIK,KACxBV,KAAKyD,SAAS,CAAEpD,YAAaA,IAF/B,SAGqB1B,EAAQyE,SAAS,CAClCM,KAAM,sZAcK3C,QAAQ,OAAQ,MAlB/B,QAGQtB,EAHR,QAoBOa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,EACrCL,KAAKyD,SAAShE,GAtBhB,gD,0EAwBA,WA8CE,IAAMG,EAAM,IAAI+D,IAChB3D,KAAKmD,MAAMC,SAASQ,SAAQ,SAACC,GAC3B,IAAMC,EA/CR,SAAuBC,GACrB,IAAMC,EAAOD,EAAEE,YACf,MAAI,mBAAmBC,KAAKF,GACnB,YAEL,oBAAoBE,KAAKF,GACpB,eAEL,oBAAoBE,KAAKF,GACvBD,EAAEI,eAAeC,MAAK,SAACC,GAAD,MAAkB,WAAXA,EAAEC,QAC1B,eAEA,YAGP,qBAAqBJ,KAAKF,GACrB,iBAEL,wBAAwBE,KAAKF,GACxB,mBAEL,gCAAgCE,KAAKF,GAChC,MAEL,+BAA+BE,KAAKF,GAC/B,UAEL,+BAA+BE,KAAKF,GAC/B,UAEL,iCAAiCE,KAAKF,GACjC,MAEL,4BAA4BE,KAAKF,GAC5B,SAEL,2BAA2BE,KAAKF,GAC3B,OAEL,yBAAyBE,KAAKF,GACzB,SAEFA,EAKGO,CAAcV,GACpB5D,EAAIL,EAAIV,IAAI4E,QACN9E,IAANiB,IAAiBA,EAAI,CAAEuE,KAAM,EAAGC,MAAO,IACtCZ,EAAEa,UACLzE,EAAEwE,QACGZ,EAAEc,MAAM1E,EAAEuE,QAEjB5E,EAAIgF,IAAId,EAAG7D,MAGb,IAAI4E,EAAY,EAChBjF,EAAIgE,SAAQ,SAAC3D,EAAG6D,GACd,IAAMgB,EAAUrC,EAAaqB,QACb9E,IAAZ8F,IACF7E,EAAE4E,UAAYC,EAAU7E,EAAEwE,MAC1BI,GAAa5E,EAAE4E,cAInB,IAAME,EAAO,YAAInF,EAAIoF,WAAWC,OAAOrF,KAAI,SAACsF,GAC1C,IAAMC,EAAOrC,EAAeoC,EAAG,GAAGL,WAClC,OACE,+BACE,6BAAKK,EAAG,KACR,+BACGA,EAAG,GAAGV,KADT,MACkBU,EAAG,GAAGT,SAExB,qBAAI7D,UAAU,SAAd,UAAwBuE,EAAxB,WALOD,EAAG,OAUVE,EAAapF,KAAKmD,MAAMC,SAASiC,QACrC,SAACxB,GAAD,OACGA,EAAEc,MACe,WAAlBd,EAAEI,aACFJ,EAAEyB,UAAUC,OAAS,GACrB1B,EAAEyB,UAAU,GAAGE,qBAEnBJ,EAAWH,MACT,SAAClG,EAAG0G,GAAJ,OACE1G,EAAEuG,UAAU,GAAGE,kBAAkBvE,UACjCwE,EAAEH,UAAU,GAAGE,kBAAkBvE,aAErC,IAAMyE,EAAeN,EAAWxF,KAAI,SAACiE,GACnC,IAAM8B,EAAa9B,EAAEyB,UAAU,GAAGE,kBAClC,OACE,+BACE,oBAAI5E,UAAU,YAAd,SAA2Be,EAAcgE,EAAW1E,aACpD,6BACE,mBAAG2E,KAAMD,EAAW9G,IAApB,SAA0BwD,EAAcsD,EAAW9G,WAH9CgF,EAAEI,gBAST4B,EAAc,IAAIlC,IAiCxB,OAhCAyB,EAAWxB,SAAQ,SAACC,GAClB,IAAM8B,EAAa9B,EAAEyB,UAAU,GAAGE,kBAC5BM,EAAOzD,EAAcsD,EAAW9G,KAClCoB,EAAI4F,EAAY3G,IAAI4G,QACd9G,IAANiB,IACFA,EAAI,CAAEwE,MAAO,EAAGsB,gBAAiB,GACjCF,EAAYjB,IAAIkB,EAAM7F,IAExBA,EAAEwE,QAOFxE,EAAE8F,iBALF,SAAmB9E,GACjB,IAAMC,EAAO,IAAIR,KAAKO,GAEtB,OADc,IAAIP,KACFQ,GAAQ,IAEL8E,CAAUL,EAAW1E,cAkB1C,gCACE,2CACY,IACV,cAACf,EAAD,CACEK,SAAUP,KAAKG,MAAMI,SACrBF,YAAaL,KAAKmD,MAAM9C,YACxBC,WAAYN,KAAKmD,MAAM7C,WACvBE,YAAaR,KAAKmD,MAAM3C,iBAG5B,gCACE,gCACE,+BACE,6BACE,kCACE,gCAAQuE,IACR,gCACE,+BACE,uBACA,qBAAInE,UAAU,SAASqF,QAAQ,IAA/B,UACGnD,EAA2B,GAAZ+B,EAAiB,IADnC,mBAOR,oBAAIjE,UAAU,aAAd,SACE,gCACE,gCAAQ8E,sB,GA/MmBQ,aCLxBC,E,kDACnB,WAAYhG,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXiD,MAAO,GACP/F,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrBF,YAAa,GANE,E,qDASnB,WACER,KAAKqD,SACLrD,KAAKO,SAAW+C,YAAYtD,KAAKqD,OAAOE,KAAKvD,MAAOA,KAAKG,MAAMI,Y,kCAEjE,WACEiD,cAAcxD,KAAKO,Y,2DAErB,8BAAAxB,EAAA,6DACQsB,EAAc,IAAIK,KACxBV,KAAKyD,SAAS,CAAEpD,YAAaA,IAF/B,SAGqB1B,EAAQ0H,QAH7B,QAGQ5G,EAHR,QAIOa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,EACrCL,KAAKyD,SAAShE,GANhB,gD,0EAQA,WAkBE,IAAM6G,EAAU,IAAI3C,IACpB3D,KAAKmD,MAAMiD,MAAMxC,SAAQ,SAAC2C,GACxB,IAAMC,EAnBR,SAAuBA,GACrB,OAAOA,EACJzF,QAAQ,0CAA2C,SACnDA,QAAQ,sBAAuB,oBAC/BA,QAAQ,oBAAqB,oBAC7BA,QAAQ,uBAAwB,aAChCA,QAAQ,cAAe,iBACvBA,QAAQ,cAAe,aACvBA,QAAQ,iBAAkB,gBAC1BA,QAAQ,eAAgB,eACxBA,QAAQ,eAAgB,eACxBA,QAAQ,qBAAsB,aAC9BA,QAAQ,sBAAuB,kBAC/BA,QAAQ,gCAAiC,eACzCA,QAAQ,gCAAiC,eAKhC0F,CAAcF,EAAEC,KACxBvG,EAAIqG,EAAQpH,IAAIsH,QACVxH,IAANiB,IACFA,EAAI,CAAEwE,MAAO,GACb6B,EAAQ1B,IAAI4B,EAAKvG,IAEnBA,EAAEwE,WAGJ,IAAMiC,EAAW,YAAIJ,EAAQtB,WAAWC,OAAOrF,KAAI,SAAC+G,GAClD,IAAMH,EAAMG,EAAM,GACZ1G,EAAI0G,EAAM,GAChB,OACE,+BACE,oBAAI3D,MAAO,CAAE4D,UAAW,QAASC,aAAc,IAA/C,SAAsD5G,EAAEwE,QACxD,6BAAK+B,MAFEA,MAOPM,EAAW,IAAInD,IACrB3D,KAAKmD,MAAMiD,MAAMxC,SAAQ,SAAC2C,GACxB,IAAMT,EAAOzD,EAAckE,EAAET,KAAKjH,KAC9BoB,EAAI6G,EAAS5H,IAAI4G,QACX9G,IAANiB,IACFA,EAAI,CAAEwE,MAAO,GACbqC,EAASlC,IAAIkB,EAAM7F,IAErBA,EAAEwE,WAGJ,IACMsC,EAAY,YAAID,EAAS9B,WAC5BC,MAAK,SAAClG,EAAG0G,GAAJ,OAAUA,EAAE,GAAGhB,MAAQ1F,EAAE,GAAG0F,SACjCuC,MAAM,EAHY,IAIlBpH,KAAI,SAACqH,GACJ,IAAMnB,EAAOmB,EAAO,GACdhH,EAAIgH,EAAO,GACjB,OACE,+BACE,oBAAIjE,MAAO,CAAE4D,UAAW,QAASC,aAAc,IAA/C,SAAsD5G,EAAEwE,QACxD,6BAAKqB,MAFEA,MAOf,OACE,gCACE,uCACQ,IACN,cAAC5F,EAAD,CACEK,SAAUP,KAAKG,MAAMI,SACrBC,YAAaR,KAAKmD,MAAM3C,YACxBH,YAAaL,KAAKmD,MAAM9C,YACxBC,WAAYN,KAAKmD,MAAM7C,gBAG3B,gCACE,gCACE,+BACE,oBACE4G,MAAO,IACPlE,MAAO,CACLmE,aAAc,OACdC,SAAU,IACVC,SAAU,UALd,SAQE,gCACE,gCAAQX,QAGZ,oBAAI9F,UAAU,aAAasG,MAAO,IAAlC,SACE,gCACE,kCACGH,EACD,+BACE,uBACA,6BAAKD,EAASQ,KA/CX,GA+CiC,MAAQ,6B,GA3HxBpB,a,yCCQtCqB,EAAa,CACf,IACA,QACA,oCACA,2CACA,mCACA,8BAEA,+BACA,wCACA,uCACA,oCACA,iDAEA,6BACA,2CACA,mCACA,4CACA,4CACA,4CACA,gCACA,0CACA,kDAEA,+CACA,6CACA,kDACA,gCAEA,iCACA,+BACA,0BACA,yCACA,gEACA,uEACA,kCACA,iCAEA,kDAEA,wCAEA,0BACA,wBAGEC,EAA+B,CACjC,qDACA,sDACA,+CACA,mCACA,mCACA,sCACA,oDACA,qDACA,8CACA,oEACA,mEACA,yEACA,yEAKF,SAASC,EAAW1H,GAClB,MAAkB,YAAXA,GAAmC,YAAXA,EAGjC,SAAS2H,EAAW3H,GAElB,MACa,YAAXA,GACW,YAAXA,GACW,UAAXA,GACW,cAAXA,EAYJ,SAAS4H,EAAWC,GAClB,IAAMC,EAAcD,EAASE,QAC7B,MAAI,gBAAgB5D,KAAK0D,EAAS/I,KACzB,UAAYgJ,EAEZA,E,IAgDUE,E,kDACnB,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,EAAK6E,eAFD,E,gDAInB,WACE,IAAMC,EAAYC,aAAaC,QAAQ,SACnCC,EAAQ,GAOZ,OANIH,IACFG,EAAQC,KAAKC,MAAML,IAEf,cAAeG,IAAQA,EAAK,WAAgB,GAC5C,aAAcA,IAAQA,EAAK,SAAe,IAC1C,sBAAuBA,IAAQA,EAAK,mBAAwB,GAC3D,CACLG,OAAQ,GACRC,WAAY,GACZnI,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrB+H,UAAWL,EAAMK,UACjBC,SAAUN,EAAMM,SAChBC,kBAAmBP,EAAMO,qB,+BAG7B,WACE3I,KAAKqD,SACLrD,KAAKO,SAAW+C,YAAYtD,KAAKqD,OAAOE,KAAKvD,MAAOA,KAAKG,MAAMI,UAC3DP,KAAKmD,MAAMwF,mBAAiD,YAA5BC,aAAaC,YAC/CD,aAAaE,sB,gCAGjB,SAAmBC,GACjBb,aAAac,QACX,QACAX,KAAKY,UAAU,CACbN,kBAAmB3I,KAAKmD,MAAMwF,kBAC9BF,UAAWzI,KAAKmD,MAAMsF,UACtBC,SAAU1I,KAAKmD,MAAMuF,YAGrB1I,KAAKG,MAAMW,MAAQiI,EAAUjI,MAC/Bd,KAAKyD,SAASzD,KAAKgI,gBACnBhI,KAAKqD,Y,2DAGT,qBAkDiB6F,EAlDjB,IA8FWC,EA9FX,EAmJWC,EAnJX,gBAAArK,EAAA,6DAmJWqK,EAnJX,SAmJsBrG,EAAGsG,GACrB,IAAMC,EAAK/B,EAAWnD,MAAK,SAACmF,GAAD,OAAO1I,EAAckC,GAAGyG,WAAWD,MACxDE,EAAKlC,EAAWnD,MAAK,SAACmF,GAAD,OAAO1I,EAAcwI,GAAGG,WAAWD,MAC9D,OAAID,EAAKG,EAAW,EACXH,EAAKG,GACL1G,EAAIsG,GADa,EAEjBtG,EAAIsG,EAAU,EACX,GA5DLF,EA9FX,SA8FkCO,GAY9BA,EAASC,UAAU/F,SAXnB,SAASgG,EAAGhC,GAERA,EAASiC,OAEP,qDADFjC,EAASiC,MAAMC,OAGflC,EAASiC,MAAMF,UAAU/F,QAAQgG,GAEjCG,EAAeC,IAAIrC,EAAWC,QAvGtC,oCAAA7I,EAAA,MAkDE,qBAIWkL,EAJX,mBAAAlL,EAAA,sDAIWkL,EAJX,SAIoBC,EAAMC,GACtB,IAAIC,EAAWzK,EAASwK,GAAOC,SAC/B,GAAIF,EACF,IAAK,IAAIG,KAAYH,EAAM,CACzB,IAAIpJ,EAAMoJ,EAAKG,GACVC,EAAuBF,GAAUG,eAAeF,KACnDC,EAAuBF,GAAUC,GAAY,CAC3CG,SAAU,IACVzK,OAAQe,EAAI2J,OACZ5L,IAAKiC,EAAI4J,cAZfJ,EAAyB,GACzB3K,EAAW,GAFjB,cAoBuBF,EAAK8I,QApB5B,IAoBE,2BACE,IADSoC,EAAuB,QACvBC,EAAI,EAAGA,EAAID,EAAOE,UAAUzE,MAAMb,OAAQqF,IAC7CR,EAAWO,EAAOE,UAAUzE,MAAMwE,GAAGR,SACpCE,EAAuBC,eAAeH,KACzCE,EAAuBF,GAAY,IAErCzK,EAASmL,KAAK,CACZjM,IACE,sDACAuL,EACA,QACFA,aA/BR,8CAmCsBzL,EAAQoM,UAC1BpL,EAASC,KAAI,SAACoL,GAAD,OAAaA,EAAQnM,QApCtC,qBAsCU+E,QAAQqG,GAtClB,kBAuCSK,GAvCT,6CAlDF,uBAkDiBpB,EAlDjB,2CACQ7I,EAAc,IAAIK,KACxBV,KAAKyD,SAAS,CAAEpD,YAAaA,IAF/B,SAaiB1B,EAAQmC,IAAId,KAAKG,MAAMW,IAAK,CACvC4C,KAAM,usBAoBI3C,QAAQ,OAAQ,MAlChC,OAaItB,EAbJ,sCAwCkB,EAxClB,UAyCiBd,EAAQmC,IAAId,KAAKG,MAAMW,IAAK,CAAEmK,MAD7B,IAxClB,QAyCIxL,EAzCJ,sBA2CEA,EAAKa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,OACdrB,IAAnBS,EAAKyL,YACPzL,EAAK8I,OAAS9I,EAAKyL,WA9CvB,UA2FsChC,IA3FtC,QA2FEzJ,EAAK6K,uBA3FP,OA6FQP,EAAiB,IAAIoB,IAgBR,YADbC,EAAapL,KAAKG,MAAMkL,OAE5B5L,EAAK8I,OAAO3E,QAAQuF,GAGlB1J,EAAK6K,wBACPgB,OAAOC,KAAK9L,EAAK6K,wBAAwB1G,SAAQ,SAAU+G,GACzD,IAAIT,EAAOzK,EAAK6K,uBAAuBK,GACvCW,OAAOC,KAAKrB,GAAMtG,SAAQ,SAAUyG,GAClC,GAAmB,WAAfe,EAAyB,CAE3B,IAAK,IAAIR,EAAI,EAAGA,EAAIpD,EAA6BjC,OAAQqF,IACvD,GAAIP,EAASmB,SAAShE,EAA6BoD,IAAK,CACtDb,EAAeC,IAAI,IAAMK,GACzB,MAIAA,EAASoB,SAAS,YAAcpB,EAASoB,SAAS,WAGpD1B,EAAeC,IAAI,IAAMK,QAG3B,GAAIA,EAASoB,SAAS,YAAcpB,EAASoB,SAAS,UAAW,CAE/D,IADA,IAAIC,GAAQ,EACHd,EAAI,EAAGA,EAAIpD,EAA6BjC,OAAQqF,IACvD,GAAIP,EAASmB,SAAShE,EAA6BoD,IAAK,CACtDc,GAAQ,EACR,MAGCA,GAAO3B,EAAeC,IAAI,IAAMK,UAgB/C5K,EAAK+I,WAAa,YAAIuB,EAAe4B,UAAU1G,KAAKmE,GAEpD3J,EAAK8I,OAAO3E,SAAQ,SAACiG,GACnB,IAAM+B,EAAS,IAAIjI,IADU,4CAqB7B,WAA+CkG,GAA/C,iBAAA9K,EAAA,sDACE,GAAI8K,EAAMgB,UAAUzE,MAAMb,OAAS,EACjC,IADqC,EAAD,WAElC,IAAI6E,EAAWP,EAAMgB,UAAUzE,MAAMwE,GAAGR,SACpC3K,EAAK6K,wBACPgB,OAAOC,KAAK9L,EAAK6K,uBAAuBF,IAAWxG,SACjD,SAAUyG,GACR,IAAIvJ,EAAMrB,EAAK6K,uBAAuBF,GAAUC,GAChDuB,EAAOhH,IAAI,IAAMyF,EAAU,CACzBG,SAAU1J,EAAI0J,SACdzK,OAAQe,EAAIf,OACZlB,IAAKiC,EAAIjC,UATV+L,EAAI,EAAGA,EAAIf,EAAMgB,UAAUzE,MAAMb,OAAQqF,IAAM,IAF5D,4CArB6B,sBAkBhBf,EAFFF,UAAU/F,SAXnB,SAASgG,EAAGhC,GAERA,EAASiC,OAEP,qDADFjC,EAASiC,MAAMC,OAGflC,EAASiC,MAAMF,UAAU/F,QAAQgG,GAEjCgC,EAAOhH,IAAI+C,EAAWC,GAAWA,MAbV,oCAwC7BiE,CAAgChC,GAChCA,EAAM+B,OAASA,KAaM,GACnB5L,KAAKG,MAAMW,IAAI2K,SAAS,WAAY,WACtC,IAAMK,EAAoB,IAAIX,IACxBY,EAA4B,IAAIpI,IACtClE,EAAK+I,WAAW5E,SAAQ,SAAC9C,GACX,qBAARA,GACQ,YAARA,IACAA,EAAI2K,SAAS,cACjBK,EAAkB9B,IAAIlJ,OAExB,IAAK,IAAI8J,EAAI,EAAGA,EAAInL,EAAK8I,OAAOhD,UAG1BqF,EAbe,KAcdkB,EAAkBxE,KAJesD,IAAK,CAK7BnL,EAAK8I,OAAOqC,GACLgB,OACdhI,SAAQ,SAACoI,EAAIlE,GAClB,GAAKgE,EAAkBG,IAAInE,GAEpB,GAAIJ,EAAWsE,EAAGjM,QAAS,CAChC,IAAImM,EAAQH,EAA0B7M,IAAI4I,IAAY,EACtDoE,IACAH,EAA0BnH,IAAIkD,EAASoE,QAC9BzE,EAAWuE,EAAGjM,SACvB+L,EAAkBK,OAAOrE,YAM/BiE,EAA0BnI,SAAQ,SAAC3D,EAAG6D,GAEhC7D,GAAK,GACP8L,EAA0BI,OAAOrI,MAIrCrE,EAAKsM,0BAA4BA,EAK7B,EAAK5I,MAAM4I,2BACb,EAAK5I,MAAM4I,0BAA0BnI,SAAQ,SAAC3D,EAAGmM,GAC1CL,EAA0BE,IAAIG,IAEjC,IAAIxD,aAAa,UAAO,EAAKzI,MAAMW,IAAK,CACtCuL,KAAMxL,EAAcuL,QAK5BL,EAA0BnI,SAAQ,SAAC3D,EAAGmM,GAGlC,EAAKjJ,MAAM4I,4BACV,EAAK5I,MAAM4I,0BAA0BE,IAAIG,IAG1C,IAAIxD,aAAa,UAAO,EAAKzI,MAAMW,IAAK,CACtCuL,KAAMxL,EAAcuL,QA5DY,GAmExCpM,KAAKyD,SAAShE,GAxRhB,iD,0EA2RA,WAAU,IAAD,OAiDP,IAAI8I,EAASvI,KAAKmD,MAAMoF,OACpBwD,EAA4B/L,KAAKmD,MAAM4I,0BAErCvD,EAAaxI,KAAKmD,MAAMqF,WACxB8D,EAAkB9D,EAAW5I,KAAI,SAACkI,GAAD,OACrC,oBAAIlH,UAAU,SAAd,SACE,sBACEA,WACG2G,EAAWnD,MAAK,SAACmF,GAAD,OAAO1I,EAAciH,GAAS0B,WAAWD,MACtD,YACA,sBACJ,KACCwC,EAA0BE,IAAInE,GAAW,iBAAmB,IANjE,UASGP,EAAWnD,MAAK,SAACmF,GAAD,OAAO1I,EAAciH,GAAS0B,WAAWD,MACtD,GACA,UACH1I,EAAciH,OAbSA,MAuBxByE,EAAgBC,gBAAiBC,WAAW,CAAC,EAF7B,MAGtBF,EAAcG,OAAO,CAAC,EAAGF,MAAOjE,GAAQ,SAAC9C,GAAD,OAAOA,EAAE+E,cAEjD,IAAMmC,EAAW,IAAIxB,IAEfpG,EAAOwD,EAAO3I,KAAI,SAACiK,GACvB,IAAM+B,EAAS/B,EAAM+B,OAkBrB,IAAIzG,EAAO,EACPyH,GAAc,EACdC,GAAiB,EACjBnB,GAAQ,EAENoB,EAActE,EAAW5I,KAAI,SAACkI,GAClC,IA1GiB/H,EArXKgN,EA+dhBf,EAAKJ,EAAO1M,IAAI4I,GAClBkF,EAAO,cAAC,WAAD,IACX,QAAWhO,IAAPgN,EAAkB,CACpBN,GAAQ,EACR,IAAMuB,EAAMC,IAAelB,EAAGxB,UAExBxG,EApeJ,yBADkB+I,EAqecpF,EAAWqE,IAne5C,YACQ,aAANe,EACF,YACE,OAAO7I,KAAK6I,GACjB,QAAQ7I,KAAK6I,IAAM,QAAQ7I,KAAK6I,GAC3B,UAEA,UAEA,SAAS7I,KAAK6I,GAChB,MAEP,SAAS7I,KAAK6I,IACd,UAAU7I,KAAK6I,IACf,UAAU7I,KAAK6I,IACf,UAAU7I,KAAK6I,GAEX,OAAO7I,KAAK6I,GACV,iBAAiB7I,KAAK6I,GACjB,iBACE,QAAQ7I,KAAK6I,GACf,YAEA,YAEA,QAAQ7I,KAAK6I,GAClB,QAAQ7I,KAAK6I,GACR,OAEA,eAGF,YAGJ,UAicKI,EAAY,EAQhB,GAPa,YAATnJ,EACF4I,GAAc,EAEdO,EAAYpL,KAAKqL,KAAM3K,EAAauB,GAAQiJ,EAAO,IAAO,GAAK,IAEjE9H,GAAQgI,EACHnB,EAAGjM,SAAQ8M,GAAiB,GACT,SAApB,EAAK1M,MAAMkL,KACb2B,EAtCN,SAAqBhB,EAAIjM,GACvB,OACE,eAAC,WAAD,WACE,sBACEa,UACE6G,EAAW1H,GAAU,cAAgB,mBAFzC,SAKGmN,IAAelB,EAAGxB,UAAY,MANnC,cAoCS6C,CAAYrB,EAAIA,EAAGjM,aACrB,GAAwB,SAApB,EAAKI,MAAMkL,KACpB2B,EACE,eAAC,WAAD,WACY,YAAThJ,EAAqB,IAAMmJ,EAD9B,kBAIG,CACL,IAAIG,EAAWtB,EAAGnN,IACd,eAAeqF,KAAKoJ,GAClBA,EAAS7B,SAAS,aACpB6B,GAAsB,YAGxBA,EAAW3O,EAAQ4O,KAAKD,EAAW,YAErCN,EACE,mBACEpH,KAAM0H,EACN1M,UAAU,OACV4M,OAAO,SACPC,IAAI,aACJC,IAAK/F,EAAWqE,GALlB,UA3IWjM,EAkJIiM,EAAGjM,OAjJtB0H,EAAW1H,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,SAAWC,aAAW,SAAvD,eAIAnG,EAAW3H,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,OAASC,aAAW,SAArD,eA/YV,SAAoB9N,GAClB,MAAkB,YAAXA,GAAmC,cAAXA,EAkZvB+N,CAAW/N,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,QAAUC,aAAW,YAAtD,eAjZV,SAAoB9N,GAClB,OAAQA,GAAqB,YAAXA,EAoZVgO,CAAWhO,GAEX,sBACEa,UAAU,kBACV+M,KAAK,MACL3K,MAAO,CAAE4K,MAAO,aAChBC,aAAW,cAJb,eASG9N,MAyHL,OACE,cAAC,IAAD,CAEEiO,QAASlG,EACTmG,gBAAiB,EACjBC,UAAU,WACVC,sBAAsB,EALxB,SAOE,oBAEEvN,UAAU,YACVoC,MAAO,CACL4D,UAAW,QACXwH,WAAY,aACZC,QAAS,GANb,SASGrB,GARIlF,IAPFA,MAyBX,SAASwG,EAAwBC,GAC/B,IAAIjM,EAAIiM,EAAQC,MAAM,cACtB,OAAIlM,EAEA,cAAC,WAAD,UACE,oBACEsD,KAAM,2CAA6CtD,EAAE,GACrDkL,OAAO,SACPC,IAAI,aAHN,cAKInL,EAAE,QAKL,cAAC,WAAD,IAuBT,SAASmM,EAAa5D,GACpB,IAAM6D,EAAe,6DACrB,YAA0B1P,IAAtB6L,EAAU8D,QAA8BD,EACrC7D,EAAU8D,QACdtJ,QAAO,SAACuJ,GAAD,YAA8B5P,IAAlB4P,EAAOC,UAC1BjP,KAAI,SAACgP,EAAQhE,GAAT,OACHgE,EAAOC,OAAOjP,KAAI,SAACkP,EAAOlE,GAAR,OAChB,+BAAakE,EAAMC,iBAAnB,OAASnE,SA0CjB,IAoBIoE,EACAC,EArBEC,EAAYrF,EAAM8E,QAAQvK,MAC9B,SAACwK,GAAD,YACoB5P,IAAlB4P,EAAOC,QACPD,EAAOC,OAAOzK,MACZ,SAAC0K,GAAD,MAA4B,0CAAjBA,EAAMhF,aAGjBqF,EAAgBtF,EAAM8E,QAAQvK,MAClC,SAACwK,GAAD,YACoB5P,IAAlB4P,EAAOC,QACPD,EAAOC,OAAOzK,MACZ,SAAC0K,GAAD,MACmB,2CAAjBA,EAAMhF,QACY,qCAAjBgF,EAAMhF,QACL,iBAAiB5F,KAAK4K,EAAMM,uBAIlCC,EAAS,GACTC,EAAO,GAMPC,GAAQ,EACZ,GAAIL,EACFI,EAAOb,EAAa5E,QACf,GAAIsF,EAAe,CACxB,IAAMhQ,EAlDR,SAAuB0K,GACrB,IAAI+E,EAAS/E,EAAM8E,QAAQa,MACzB,SAACZ,GAAD,MAEE,sDADAA,EAAO9E,UAUX,YAPe9K,IAAX4P,IACFA,EAAS/E,EAAM8E,QAAQa,MACrB,SAACZ,GAAD,MAEE,gEADAA,EAAO9E,gBAIE9K,IAAX4P,EACK,IAAIjL,IAEN,IAAIA,IACTiL,EAAOa,WAAW7P,KAAI,SAAC8P,GAAD,MAAW,CAACA,EAAMpL,KAAMoL,EAAMC,WAiCvCC,CAAc/F,GACvBgG,EAAQ1Q,EAAOD,IAAI,kBAKzB,GAJA8P,EAAY7P,EAAOD,IAAI,iBACvB+P,EAAU9P,EAAOD,IAAI,eACrBmQ,EAASlQ,EAAOD,IAAI,wBACpBoQ,EAAOO,EACHlD,EAASV,IAAIgD,GAAU,CAEzB,IAAK,EAAK9L,MAAMsF,UAAW,OAAO,cAAC,WAAD,GAAeoB,EAAMiG,QACvDP,GAAQ,EAEV,GAA4B,KAAxB,EAAKpM,MAAMuF,UAAmB,EAAKvF,MAAMuF,WAAa2G,EACxD,OAAO,cAAC,WAAD,GAAexF,EAAMiG,QAE9BnD,EAAS3C,IAAIiF,OACR,CACL,IAAMpE,EAAYhB,EAAMgB,UAGxBwE,EArFF,SAAqBxF,GACnB,IAAM+E,EAAS/E,EAAM8E,QAAQa,MAC3B,SAACZ,GAAD,MAA8B,6BAAlBA,EAAO9E,UAErB,QAAe9K,IAAX4P,EAAsB,MAAO,YACjC,IAAME,EAAQF,EAAOC,OAAOW,MAC1B,SAACV,GAAD,MAA4B,0CAAjBA,EAAMhF,UAEnB,QAAc9K,IAAV8P,EAAqB,MAAO,GAChC,IAAMN,EAAQM,EAAMC,iBAAiBP,MACnC,kCAEF,OAAc,OAAVA,EAAuBM,EAAMC,iBAC1BP,EAAM,GAwEJuB,CAAYlG,GAEnByF,EAD6B,IAA3BzE,EAAUzE,MAAMb,OACXkJ,EAAa5E,GAEbgB,EAAUzE,MAAMY,QAAQgJ,UAAUpQ,KAzH7C,SAAsB+K,GACpB,OACE,gCACG2D,EAAwB3D,EAAO4D,SAAU,KAzBxB0B,EA0BFtF,EAAOsF,IAzBpBA,EAAIlP,QAAQ,cAAe,KAyBD,IAC7B,+BACE,mBACE6E,KACE,6CAA+C+E,EAAOP,SAExDoD,OAAO,SACPC,IAAI,aALN,SAOG9C,EAAOP,SAASpD,MAAM,EAAG,SAXtB2D,EAAOP,UAxBrB,IAAwB6F,KAmJxB,IAAMC,EAAalP,EAAe6I,EAAM5I,WAExC,OAAKyK,EAKH,qBAAuB9K,UAAW2O,EAAQ,QAAU,GAApD,UACE,oBAAI3O,UAAU,YAAd,SACE,mBAAGgF,KAAMiE,EAAMhL,IAAK2O,OAAO,SAASC,IAAI,aAAxC,SACG5D,EAAMiG,WAGX,oBAAIlP,UAAU,YAAd,SACE,mBAAGgF,KAAMoJ,EAAWxB,OAAO,SAASC,IAAI,aAAxC,SACGwB,EAAU,IAAMA,EAAU,OAG/B,oBAAIrO,UAAU,YAAd,SAA2BsP,IAC1BpD,EACD,oBAAIlM,UAAU,wBAAd,SACGmB,KAAKC,MAAM6H,EAAMW,SAAW,IAAO,MAEtC,6BACE,qBAAKtD,MA/QS,IA+QaiJ,OA9QZ,GA8Qf,SACE,sBACEvP,UAAU,MACVmC,EAAE,IACFsG,EAAE,IACFnC,MAAOqF,EAAc1C,EAAMW,UAC3B2F,OApRW,SAwRjB,qBAAIvP,UAAU,aAAaoC,MAAO,CAAE4D,UAAW,SAA/C,UACGiG,EAAiB,UAAO,GACxB/J,EAAeqC,GACfyH,EAAc,IAAM,MAEvB,oBAAIhM,UAAU,aAAd,SAA4ByO,IAC5B,oBAAIzO,UAAU,aAAd,SAA4B0O,MAjCrBzF,EAAMiG,QAJR,cAAC,WAAD,OA0CX,OACE,gCACE,+BACE,mBACElK,KAAMjH,EAAQ4O,KAAK,OAASvN,KAAKG,MAAMW,KACvC0M,OAAO,SACPC,IAAI,aAHN,SAKGzN,KAAKG,MAAMW,MACT,IAPP,UAQU,IACR,cAACZ,EAAD,CACEK,SAAUP,KAAKG,MAAMI,SACrBC,YAAaR,KAAKmD,MAAM3C,YACxBH,YAAaL,KAAKmD,MAAM9C,YACxBC,WAAYN,KAAKmD,MAAM7C,gBAG3B,qBAAK0C,MAAO,CAAE4K,MAAO,QAArB,6DAGA,8BACE,qBAAIhN,UAAU,OAAd,UACE,+BACE,uBACEwP,KAAK,WACL9L,KAAK,aACL+L,QAASrQ,KAAKmD,MAAMsF,UACpB6H,SAAU,SAAC/G,GACT,EAAK9F,SAAS,CAAEgF,UAAWc,EAAEiE,OAAO6C,aAGxC,uBAAOE,QAAQ,aAAf,yCAEF,+BACE,uBACEH,KAAK,OACL9L,KAAK,WACLqL,MAAO3P,KAAKmD,MAAMuF,SAClB4H,SAAU,SAAC/G,GACT,EAAK9F,SAAS,CAAEiF,SAAUa,EAAEiE,OAAOmC,WAGvC,uBACEY,QAAQ,WACRvN,MAAO,CACLwN,gBAAiB,QACjBC,SAAU,WACVC,OAAQ,GALZ,gDAWF,+BACE,uBACEN,KAAK,WACL9L,KAAK,qBACL+L,QAASrQ,KAAKmD,MAAMwF,kBACpB2H,SAAU,SAAC/G,GAAD,OACR,EAAK9F,SAAS,CAAEkF,kBAAmBY,EAAEiE,OAAO6C,aAGhD,wBAAOE,QAAQ,qBAAf,iDAE+B,WAA5B3H,aAAaC,WACZ,eAAC,WAAD,WACG,IACD,sFAKF,cAMV,wBAAOjI,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,YAAd,gBACA,oBAAIA,UAAU,YAAd,iBACA,oBAAIA,UAAU,YAAd,kBACC0L,EACD,oBAAI1L,UAAU,aAAaqF,QAAQ,IAAnC,2BAGA,oBAAIrF,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,8BAGJ,gCAAQmE,c,GArxB+BmB,aC3J3CtG,EAAM,CACV+Q,I,MAAKA,Q,4BCaP,SAASC,IACP,MAAO,iEAAiE1M,KACtE2M,UAAUC,WAId,SAASC,EAAWC,EAAKC,EAAWC,GAClC,KAAOD,EAAY,GACjBA,GAAaD,EAAIzL,OAEnB,KAAO2L,EAAY,GACjBA,GAAaF,EAAIzL,OAEnB,GAAI2L,GAAaF,EAAIzL,OAEnB,IADA,IAAIzB,EAAIoN,EAAYF,EAAIzL,OAAS,EAC1BzB,KACLkN,EAAIlG,UAAK9L,GAGbgS,EAAIG,OAAOD,EAAW,EAAGF,EAAIG,OAAOF,EAAW,GAAG,IAGpD,SAASxJ,EAAW1H,GAClB,MAAkB,YAAXA,GAAmC,YAAXA,EAGjC,SAAS2H,EAAW3H,GAElB,MACa,YAAXA,GACW,YAAXA,GACW,UAAXA,GACW,cAAXA,EAIJ,SAAS+N,EAAW/N,GAClB,MAAkB,YAAXA,GAAmC,cAAXA,EAGjC,SAASgO,EAAWhO,GAClB,OAAQA,GAAqB,YAAXA,EAGpB,SAASqR,EAAWrR,GAClB,MAAkB,YAAXA,EAGT,SAASsR,EAAiBtR,GACxB,MAAkB,wBAAXA,EAGT,SAASuR,EAA+B7R,GAA4B,IAAtB8R,EAAqB,uDAAJ,GACvDzF,EAAoB,IAAIX,IACxBY,EAA4B,IAAIpI,IACtClE,EAAK+I,WAAW5E,SAAQ,SAAC9C,GACX,qBAARA,GACQ,YAARA,IACAA,EAAI2K,SAAS,cACjBK,EAAkB9B,IAAIlJ,OAExB,IAAK,IAAI8J,EAAI,EAAGA,EAAInL,EAAK8I,OAAOhD,UAG1BqF,EAAI2G,IACHzF,EAAkBxE,KAJesD,IAAK,CAK3C,IAAMf,EAAQpK,EAAK8I,OAAOqC,GACpBgB,EAAS/B,EAAM+B,OACrBA,EAAOhI,SAAQ,SAACoI,EAAIlE,GAClB,GAAKgE,EAAkBG,IAAInE,GAEpB,GAAIJ,EAAWsE,EAAGvB,QAAS,CAChC,IAAIyB,EAAQH,EAA0B7M,IAAI4I,IAAY,EACtDoE,IACAH,EAA0BnH,IAAIkD,EAASoE,QAC9BzE,EAAWuE,EAAGvB,SACvBqB,EAAkBK,OAAOrE,YAY/B,OANAiE,EAA0BnI,SAAQ,SAAC3D,EAAG6D,GAEhC7D,GAAK,GACP8L,EAA0BI,OAAOrI,MAG9BiI,EAGT,SAASyF,EAAkB5J,GACzB,IAAMC,EAAcD,EAASE,QAC7B,MAAI,gBAAgB5D,KAAK0D,EAAS/I,KACzB,mBAAqBgJ,EAErB,YAAcA,E,IAInB4J,E,kDACJ,WAAYtR,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXuO,cAAevR,EAAMwR,cAAgB,GACrCC,SAAUzR,EAAMyR,UAAa,SAACC,MAJf,E,0CAOnB,WAAU,IAAD,OACP,OACE,uBACED,SAAU,SAACrI,GACTA,EAAEuI,iBACF,EAAK3O,MAAMyO,SAAS,EAAKzO,MAAMuO,gBAHnC,UAME,uBAAOnB,QAAQ,kBAAf,8BACA,uBACEH,KAAK,QACL9L,KAAK,kBACLyN,GAAG,kBACHpC,MAAO3P,KAAKmD,MAAMuO,cAClBpB,SAAU,SAAC/G,GACT,EAAK9F,SAAS,CAAEiO,cAAenI,EAAEiE,OAAOmC,WAG5C,uBAAO3M,MAAO,CAAEgP,WAAY,OAAS5B,KAAK,SAAST,MAAM,c,GA1BpCzJ,aAgCR6B,G,kDACnB,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,EAAK6E,eAFD,E,gDAInB,WACE,IAAMC,EAAYC,aAAaC,QAAQ,UACnCC,EAAQ,GACRH,IACFG,EAAQC,KAAKC,MAAML,IAEf,sBAAuBG,IAC3BA,EAAK,mBAAyBwI,KAC1B,cAAexI,IAAQA,EAAK,WAAgB,GAClD,IAAIsJ,EAAgB1R,KAAKG,MAAMuR,eAAiB,GAChD,MAAO,CACLO,eAAe,EACfC,YAAY,EACZ3J,OAAQ,GACR4J,eAAgB,KAChB3J,WAAY,GACZ4J,WAAY,GACZ/R,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrBiI,kBAAmBP,EAAMO,kBACzB0J,UAAoC,IAAzBX,EAAcnM,QAAe6C,EAAMiK,UAC9CX,cAAeA,K,+BAGnB,WACE1R,KAAKqD,SACLrD,KAAKO,SAAW+C,YAAYtD,KAAKqD,OAAOE,KAAKvD,MAAOA,KAAKG,MAAMI,WAE5DqQ,KACD0B,OAAO1J,cACP5I,KAAKmD,MAAMwF,mBACwB,YAAnC2J,OAAO1J,aAAaC,YAEpByJ,OAAO1J,aAAaE,sB,gCAGxB,SAAmBC,GACjBb,aAAac,QACX,SACAX,KAAKY,UAAU,CACbN,kBAAmB3I,KAAKmD,MAAMwF,kBAC9B0J,UAAWrS,KAAKmD,MAAMkP,aAGtBrS,KAAKG,MAAMoS,SAAWxJ,EAAUwJ,SAClCvS,KAAKyD,SAASzD,KAAKgI,gBACnBhI,KAAKqD,Y,sEAGT,WAAwBkF,GAAxB,iBAAAxJ,EAAA,sEAU2BJ,EAAQmC,IAAR,kBAAuBd,KAAKG,MAAMoS,QAAU,CACnE7O,KAAM,+pBAoBI3C,QAAQ,OAAQ,MA/B9B,OAUMyR,EAVN,OAmCQC,EAAe,IAAI9O,IACzB4E,EAAO3E,SAAQ,SAACiG,EAAO6I,GACrBD,EAAa5I,EAAMkI,IAAMW,KAIvBF,GACFA,EAAajK,OAAO3E,SAAQ,SAAC8F,GAC3B,GAAwC,IAApCA,EAASmB,UAAUzE,MAAMb,OAA7B,CAGA,IAAMoN,EAAgBjJ,EAASmB,UAAUzE,MAAM,GAAGgE,SAClD,GAAMuI,KAAiBF,EAAvB,CAGA,IAAMG,EAAWH,EAAaE,GAkB9BjJ,EAASC,UAAU/F,SAjBnB,SAASgG,EAAGhC,GAERA,EAASiC,OAEP,qDADFjC,EAASiC,MAAMC,OAGflC,EAASiC,MAAMF,UAAU/F,QAAQgG,GAEjCrB,EAAOqK,GAAUhH,OAAOhH,IACtB4M,EAAkB5J,GAClB0D,OAAOuH,YAAY,CACjB,CAAC,SAAUjL,EAAS7H,QACpB,CAAC,YAAapB,EAAQ4O,KAAK3F,EAAS/I,IAAM,wBA/DxD,gD,kHAwEA,mEAAAE,EAAA,6DACQsB,EAAc,IAAIK,KACxBV,KAAKyD,SAAS,CAAEpD,YAAaA,IAEvBkS,EAASvS,KAAKG,MAAMoS,OACpBO,EAAO9S,KAAKG,MAAM2S,KAClBC,EAAO/S,KAAKG,MAAM4S,KAIlBC,EAVR,kFAU6FF,EAV7F,YAUqGC,EAVrG,YAU6GR,EAAOxR,QAChH,IACA,KAZJ,SAcMkS,EAAU,KAdhB,mBAgBoBhU,IAAMC,IAAI8T,GAhB9B,QAgBIC,EAhBJ,gEAkBIjT,KAAKyD,SAAS,CAAEyO,YAAY,IAlBhC,2BAuBQ3J,EAAS,GAvBjB,cAwBuB0K,EAAQxT,MAxB/B,IAwBE,2BAAmC,CAAxBkL,EAAwB,QAC3BuI,EAAY,IAAIvP,IADW,cAEfgH,EAAOT,MAFQ,IAEjC,2BAAWpJ,EAAoB,QAEd,aADX2J,EAAS3J,EAAI2J,UAEfA,EAAS,WAEI,WAAXA,IACFA,EAAS,WAEXyI,EAAUtO,IAAI9D,EAAIwD,KAAM,CACtBoG,UAAW5J,EAAIjC,IACf4L,OAAQA,IAZqB,8BAejClC,EAAOuC,KAAK,CACVuE,OAAQ,CACN3G,SAAUiC,EAAO0E,QAEnB8D,QAASxI,EAAOyI,SAAW,KAAOzI,EAAO0B,KACzCgH,UAAW1I,EAAO2I,GAClBC,SAAU5I,EAAO4I,SACjB3H,OAAQsH,EACRnB,GAAIpH,EAAO6I,IACXvS,UAAW0J,EAAOzJ,KAClBrC,IAAI,sBAAD,OAAwBmB,KAAKG,MAAM2S,KAAnC,YAA2C9S,KAAKG,MAAM4S,KAAtD,mBAAqEpI,EAAO6I,QAjDrF,iCAqD0B,YAApBxT,KAAKG,MAAM4S,MAAiC,WAAXR,EArDvC,kCAsDUvS,KAAKyT,kBAAkBlL,GAtDjC,SAyDQ9I,EAAO,IAERa,WAAa,IAAII,KACtBjB,EAAK0S,eAAiB,IAAIzR,KAAKuS,EAAQS,QAAQ,kBAC/CjU,EAAKwS,eAAgB,EACrBxS,EAAKe,YAAcf,EAAKa,WAAaD,EAE/B0J,EAAiB,IAAIoB,IAC3B5C,EAAO3E,SAAQ,SAACiG,GACdA,EAAM+B,OAAOhI,SAAQ,SAACoI,EAAI3B,GACxBN,EAAeC,IAAIK,SAIvB5K,EAAK+I,WAAa,YAAIuB,EAAe4B,UAAU1G,OAC/CxF,EAAK8I,OAASA,EAYU,YAApBvI,KAAKG,MAAM4S,OACbtT,EAAKsM,0BAA4BuF,EAA+B7R,GAK3DmR,MACC5Q,KAAKmD,MAAM4I,2BACb/L,KAAKmD,MAAM4I,0BAA0BnI,SAAQ,SAAC3D,EAAGmM,GAC1C3M,EAAKsM,0BAA0BE,IAAIG,IAEtC,IAAIkG,OAAO1J,aAAa,UAAO,EAAKzI,MAAMW,IAAK,CAC7CuL,KAAMxL,EAAcuL,QAK5B3M,EAAKsM,0BAA0BnI,SAAQ,SAAC3D,EAAGmM,GAGvC,EAAKjJ,MAAM4I,4BACV,EAAK5I,MAAM4I,0BAA0BE,IAAIG,IAG1C,IAAIkG,OAAO1J,aAAa,UAAO,EAAKzI,MAAMW,IAAK,CAC7CuL,KAAMxL,EAAcuL,UAO9BpM,KAAKyD,SAAShE,GApHhB,0D,+EAuHA,SAAY6E,EAAMe,GAChB,GAAIf,EAAKmH,SAASpG,GAChB,OAAO,EAKT,IACE,IAAMsO,EAAQ,IAAIpR,OAAO8C,GACzB,OAAOuO,QAAQtP,EAAKkK,MAAMmF,IAC1B,SACA,OAAO,K,2BAIX,SAAcrP,GACZ,IAAMoN,EAAgB1R,KAAKmD,MAAMuO,cACjC,GAAIA,EAAcnM,OAAS,IAAMvF,KAAK6T,YAAYvP,EAAMoN,GACtD,OAAO,EAET,IAAMoC,EAAcxP,EAAKkF,WAAW,uBAC9BuK,EAAUzP,EAAKkF,WAAW,uBAC1BwK,EAAuB1P,EAAKkH,SAAS,qBACrCyI,EAA0B3P,EAAKkH,SAAS,wBAC9C,QACEsI,GACS,YAATxP,GACAyP,GACAC,GACAC,K,oBAIJ,WAAU,IAAD,SAEHC,EDtaO,SAAmBnB,GAChC,IAAMhT,EAAS,GACf,IAAKH,EAAImT,GAEP,OADAoB,QAAQ3U,MAAR,6BAAoCuT,IAC7B,GAJ6B,oBAOlBnT,EAAImT,IAPc,IAOtC,2BAA+B,CAAC,IAArBqB,EAAoB,QACzBC,EAAM,GACV/I,OAAOgJ,OAAOD,EAAKD,GACnBrU,EAAO+K,KAAKuJ,IAVwB,8BAatC,OAAOtU,ECyZQwU,CAAUvU,KAAKG,MAAM4S,MAF3B,cAIamB,GAJb,IAIP,2BAA4B,SACpBM,SAAW,IALZ,gCAQFxU,KAAKmD,MAAMkP,YACd6B,EAAS,IAGX,IAAMO,EAAY,SAAC3M,GAAa,IAAD,gBACToM,GADS,IAC7B,2BAA4B,CAAC,IAAlBE,EAAiB,QAC1B,GAAItM,EAAQ0G,MAAM4F,EAAMT,OACtB,OAAOS,GAHkB,gCAM7B,OAAO,MAGHM,EAAkB,SAACN,GAAW,IAAD,gBACR,EAAKjR,MAAMiP,YADH,IACjC,2BAAgD,CAC9C,GAD8C,QAC/B9N,OAAS8P,EAAM9P,KAC5B,OAAO,GAHsB,gCAMjC,OAAO,GAGHqQ,EAAiB,SAACP,GAAW,IAAD,gBACVA,EAAMI,UADI,IAChC,2BAAsC,CAAC,IAA5B1M,EAA2B,QACpC,GACE,EAAK3E,MAAM4I,2BACX,EAAK5I,MAAM4I,0BAA0BE,IAAInE,GAEzC,OAAO,GANqB,gCAUhC,OAAO,GAGT,SAAS8M,EAAY7U,GACnB,OAAI0H,EAAW1H,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,SAAWC,aAAW,SAAvD,eAIAuD,EAAWrR,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,QAAUC,aAAW,UAAtD,eAIAnG,EAAW3H,GAEX,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,OAASC,aAAW,SAArD,eAIAC,EAAW/N,GAEX,sBACE4N,KAAK,MACL3K,MAAO,CAAEgP,WAAY,OAAQpE,MAAO,QACpCC,aAAW,YAHb,SAKE,cAAC,IAAD,MAGFE,EAAWhO,GAEX,sBACEa,UAAU,kBACV+M,KAAK,MACL3K,MAAO,CAAE4K,MAAO,aAChBC,aAAW,cAJb,eASAwD,EAAiBtR,GAEjB,sBAAM4N,KAAK,MAAM3K,MAAO,CAAE4K,MAAO,QAAUC,aAAW,SAAtD,eAIG9N,EAGT,IA5FO,EA4FHwI,EAASvI,KAAKmD,MAAMoF,OACpBwD,EAA4B/L,KAAKmD,MAAM4I,0BAErC8I,EAAc7U,KAAKmD,MAAMqF,WAAWnD,QAAO,SAACf,GAAD,OAC/C,EAAKwQ,cAAcxQ,MAIfyQ,EAAwB,GApGvB,cAqGeF,GArGf,IAqGP,2BAAmC,CAAC,IAAzB/M,EAAwB,QAC7BsM,EAAQK,EAAU3M,IAEjBsM,GAASM,EAAgBN,GAE5BA,EAAQ,CACN9P,KAAMwD,EACN0M,SAAU,CAAC1M,IAGbsM,EAAMI,SAAS1J,KAAKhD,GAEtBiN,EAAsBX,EAAM9P,MAAQ8P,GAjH/B,gCAqHP,IAAIY,EAAqB,GACzB,IAAK,IAAMC,KAAaF,EACtBC,EAAmBlK,KAAK,CACtBxG,KAAM2Q,EACNb,MAAOW,EAAsBE,KAzH1B,oBA6HajV,KAAKmD,MAAMiP,YA7HxB,IA6HP,2BAA2C,CAAC,IAAjCgC,EAAgC,QAEzCY,EAAmBlK,KAAK,CACtBxG,KAAM8P,EAAM9P,KACZ8P,MAAOA,KAjIJ,gCAsIPY,EAAmB/P,MAAK,SAAClG,EAAG0G,GAC1B,OAAI1G,EAAEuF,KAAOmB,EAAEnB,MACL,EAENvF,EAAEuF,KAAOmB,EAAEnB,KACN,EAEF,KA7IF,oBAkJatE,KAAKmD,MAAMiP,YAlJxB,yBAkJIgC,EAlJJ,QAmJDc,EAAiBF,EAAmBG,WACtC,SAACrU,GAAD,OAASA,EAAIwD,OAAS8P,EAAM9P,QAE9B,GAAuB,OAAnB4Q,EAEF,OADAf,QAAQ3U,MAAR,+BAAsC4U,EAAM9P,OAC5C,WAxJG,oBA2JiB8P,EAAMI,UA3JvB,yBA2JM1M,EA3JN,QA4JCsN,EAAWJ,EAAmBG,WAChC,SAACrU,GAAD,OAASA,EAAIwD,OAASwD,KAExB,GAAiB,OAAbsN,EAEF,OADAjB,QAAQ3U,MAAR,wBAA+BsI,EAA/B,qBAAmDsM,EAAM9P,OACzD,WAGAyM,EAAWiE,EAAoBI,EAD7BA,EAAWF,EAC4BA,EAEAA,EAAiB,IAX9D,2BAAsC,IA3JjC,kCAkJP,2BAA2C,IAlJpC,gCA0LP,IAfA,IAAMG,EAAc,SAACjB,GACnB,IAAIhC,EAAa,EAAKjP,MAAMiP,WAExBsC,EAAgBN,GAElBhC,EAAWkD,IACTlD,EAAW+C,WAAU,SAACI,GAAD,OAAgBA,EAAWjR,OAAS8P,EAAM9P,SAGjE8N,EAAWtH,KAAKsJ,GAElB,EAAK3Q,SAAS,CAAE2O,WAAYA,KAGxBoD,EAAqB,GAC3B,MAAmBR,EAAnB,eAAuC,CAAlC,IAAMvV,EAAI,KACTqI,EAAUrI,EAAK6E,KACgB,IAA/B7E,EAAK2U,MAAMI,SAASjP,SACtBuC,EAAUrI,EAAK2U,MAAMI,SAAS,IAEhC,IAAIiB,EACF,oBAAI7U,UAAU,SAAd,SACE,qBACEA,UACEmL,GACAA,EAA0BE,IAAInE,GAC1B,iBACA,GALR,SAQGjH,EAAciH,MATSA,GAc1BrI,EAAK2U,MAAMI,SAASjP,OAAS,GAAI,WACnC,IAAM6O,EAAQ3U,EAAK2U,MACfsB,EAAO,cAAC,IAAD,IAEPhB,EAAgBN,KAClBsB,EAAO,cAAC,IAAD,KAGT,IAAIC,EAAc,GACdhB,EAAeP,KACjBuB,EAAc,gBAGhBF,EACE,oBAAI7U,UAAU,SAAd,SACE,sBACEgV,QAAS,WACPP,EAAYjB,IAEdyB,WAAY,WACVR,EAAYjB,IAEdpR,MAAO,CAAE8S,OAAQ,WAPnB,UASE,sBAAM9S,MAAO,CAAE4K,MAAO,WAAtB,oBACA,sBAAMhN,UAAW+U,EAAjB,SAA+BvB,EAAM9P,OAVvC,IAUqDoR,MAX3B5N,GAdK,GA8BrC0N,EAAmB1K,KAAK2K,GAgD1B,IAAMM,EAAoB,SAAClX,GAEzB,IAAMmX,EAAW,IAAIzT,OACnB,uBACE,EAAKpC,MAAM2S,KACX,IACA,EAAK3S,MAAM4S,KACX,eAEJ,OAAIlU,EAAI2P,MAAMwH,GACLnX,EAAM,0BAERA,GAET0J,EAAO3E,SAAQ,SAACiG,GACdA,EAAM+B,OAAOhI,SAAQ,SAACqS,GAChBA,EAAKxL,SACPwL,EAAKxL,OAASwL,EAAKxL,OAAOyL,qBAIhC,IAAMnR,EAAOwD,EAAO3I,KAAI,SAACiK,GACvB,IAAM+B,EAAS/B,EAAM+B,OAEfkB,EAAckI,EAAmBpV,KAAI,SAACH,GAC1C,IAAIuN,EAAO,cAAC,WAAD,IACPlF,EAAUrI,EAAK6E,KAEnB,GAAI7E,EAAK2U,MAAMI,SAASjP,OAAS,EAAG,CAElCuC,EAAO,iBAAarI,EAAK2U,MAAM9P,MAC/B,IAGMmG,EA/EZ,SAAyBP,GASvB,GAAoB,KADpBA,EAAOA,EAAK7E,QAAO,SAACtC,GAAD,YAAa/D,IAAN+D,MACjBwC,OAEP,OAAO,KAXoB,oBAcX2E,GAdW,IAc7B,2BAAwB,CAAC,IAAdpJ,EAAa,QACtB,GAAI4G,EAAW5G,EAAI2J,SAAW4G,EAAiBvQ,EAAI2J,QACjD,MAAO,WAhBkB,oDAoBXP,GApBW,IAoB7B,2BACE,GAAI6D,EADkB,QACHtD,QACjB,MAAO,UAtBkB,gCA0B7B,IA1B6B,EA0BzB0L,GAAQ,EA1BiB,cA2BXjM,GA3BW,IA2B7B,2BAAwB,CAAC,IAAdpJ,EAAa,QAGlB2G,EAAW3G,EAAI2J,SACf2G,EAAWtQ,EAAI2J,SACfqD,EAAWhN,EAAI2J,UAGjB0L,GAAQ,IAnCiB,gCAsC7B,OAAIA,EACK,UAGF,UAqCYC,CAHF3W,EAAK2U,MAAMI,SAAS5U,KAAI,SAACkI,GAAD,OACnC8D,EAAO1M,IAAI4I,OAGT2C,IACFuC,EACE,qBACEpM,UAAU,eACVoC,MAAO,CACLqT,WAAY,QAEdT,QAAS,WACPP,EAAY5V,EAAK2U,QAEnByB,WAAY,WACVR,EAAY5V,EAAK2U,QATrB,SAYGQ,EAAYnK,UAId,CAE8B,IAA/BhL,EAAK2U,MAAMI,SAASjP,SACtBuC,EAAUrI,EAAK2U,MAAMI,SAAS,IAEhC,IAAMxI,EAAKJ,EAAO1M,IAAI4I,QACX9I,IAAPgN,IACFgB,EACE,qBAAKpM,UAAU,eAAf,SACE,mBACEgF,KAAMmQ,EAAkB/J,EAAGtB,WAC3B9J,UAAU,OACV4M,OAAO,SACPE,IAAK5F,EACL2F,IAAI,aALN,SAOGmH,EAAY5I,EAAGvB,aAO1B,OACE,cAAC,IAAD,CAEEuD,QAASlG,EACTmG,gBAAiB,EACjBC,UAAU,WACVC,qBAAsB,CAAEmI,YAAY,GALtC,SAOE,oBAAkB1V,UAAU,YAA5B,SACGoM,GADMlF,IANJA,MAiBX,IAJwBmI,EAwCpBZ,EAASxF,EAAMwF,OAAO3G,SAEpB4G,EACJ,gCACE,oBACEtM,MAAO,CAAE4K,MAAO,WAChBhI,KAAI,0BAAqB,EAAKzF,MAAM2S,KAAhC,YAAwC,EAAK3S,MAAM4S,KAAnD,YAA2DlJ,EAAMkI,IAFvE,WA5CoB9B,EAgDFpG,EAAMsJ,QA/CnBlD,EAAIlP,QAAQ,cAAe,KA+CCwV,MAAM,MAAM,GAAI,OAEjD,+BACE,mBACE3Q,KAAI,6BAAwB,EAAKzF,MAAM2S,KAAnC,YAA2C,EAAK3S,MAAM4S,KAAtD,mBAAqElJ,EAAMkI,IAC/EvE,OAAO,SACPC,IAAI,aAHN,SAKG5D,EAAMkI,GAAG/K,MAAM,EAAG,SAbf6C,EAAMkI,IAwBZ7B,EAAalP,EAAe6I,EAAM5I,WAMpCoS,EAAY,KACZE,EAAW,KAyBf,OAvBI1J,EAAMwJ,YACRA,EACE,6BACE,mBACEzN,KAAI,6BAAwB,EAAKzF,MAAM2S,KAAnC,YAA2C,EAAK3S,MAAM4S,KAAtD,iBAAmElJ,EAAMwJ,WAD/E,SAGGxJ,EAAMwJ,eAKXxJ,EAAM0J,WACRA,EACE,6BACE,mBACE3N,KAAI,sBAAiB,EAAKzF,MAAM2S,KAA5B,YAAoC,EAAK3S,MAAM4S,KAA/C,YAAuDlJ,EAAMwJ,WADnE,SAGGxJ,EAAM0J,cAOb,qBAAmB3S,UAA6B,GAAhD,UACE,oBAAIA,UAAU,YAAYiP,MAAOhG,EAAM5I,UAAvC,SACGiP,IAEFpD,EACD,oBACElM,UAAU,aACVoC,MAAO,CACLoE,SAAU,MACVD,aAAc,WACdE,SAAU,UALd,SAQGgI,IAEFgE,EACAE,EACAA,EAAW,KACV,oBACE3S,UAAU,aACVoC,MAAO,CAAEwT,YAAa,IAAK3P,aAAc,OAF3C,SAlH0B,SAAC0H,GAC/B,IAAIjM,EAAIiM,EAAQC,MAAM,cACtB,OAAIlM,IAcJA,EAAIiM,EAAQC,MACV,wDAbE,cAAC,WAAD,UACE,oBACE5I,KAAI,sBAAiB,EAAKzF,MAAM2S,KAA5B,YAAoC,EAAK3S,MAAM4S,KAA/C,YAAuDzQ,EAAE,IAE7DkL,OAAO,SACPC,IAAI,aAJN,cAMInL,EAAE,QAsBL,cAAC,WAAD,IAqFAgM,CAAwBzE,EAAMsJ,WAGnC,6BAAK7D,MAzBEzF,EAAMkI,OA8Bf0E,EAAc,KACdzW,KAAKmD,MAAM+O,WACbuE,EACE,kHAEiB,IAFjB,wBAQOzW,KAAKmD,MAAM8O,eAAiC,IAAhBlN,EAAKQ,OAC1CkR,EAAc,+DACJzW,KAAKmD,MAAM8O,gBACrBwE,EACE,qBAAKzT,MAAO,CAAE0T,OAAQ,QAAtB,SACE,cAAC,IAAD,CAAY9V,UAAU,iBAK5B,IAAIyS,EAAY,KACZE,EAAW,KAGXhL,EAAOhD,OAAS,GAAKgD,EAAO,GAAGgL,WACjCF,EAAY,oBAAIzS,UAAU,aAAd,kBACZ2S,EAAW,oBAAI3S,UAAU,aAAd,uBAGb,IAAI+V,GAAa,KAwBjB,OAvBI3W,KAAKmD,MAAMgP,iBACbwE,GACE,sBAAK3T,MAAO,CAAE4T,SAAU,SAAxB,UACE,8CACgB5W,KAAKmD,MAAMgP,eAAe/Q,iBAAkB,OAO5D,4BACGmS,EACC,6HAIE,WAOV,gCACE,+BACE,oBACE3N,KAAI,6BAAwB5F,KAAKG,MAAM2S,KAAnC,YAA2C9S,KAAKG,MAAM4S,KAAtD,oBAAsE/S,KAAKG,MAAMoS,QADvF,UAGGvS,KAAKG,MAAM2S,KAHd,IAGqB9S,KAAKG,MAAM4S,KAHhC,IAGuC/S,KAAKG,MAAMoS,UAC7C,IALP,aAMa,OAEZoE,GACD,8BACE,qBAAI/V,UAAU,OAAd,UA6BE,+BACE,uBACEwP,KAAK,WACL9L,KAAK,aACL+L,QAASrQ,KAAKmD,MAAMkP,UACpB/B,SAAU,SAAC/G,GAAD,OAAO,EAAK9F,SAAS,CAAE4O,UAAW9I,EAAEiE,OAAO6C,aAEvD,uBAAOE,QAAQ,aAAf,mCAEF,6BACE,cAAC,EAAD,CACEqB,SAAU,SAACvM,GACT,EAAK5B,SAAS,CAAEiO,cAAerM,KAEjCsM,aAAc3R,KAAKG,MAAMuR,uBAKhC3M,EAAKQ,OAAS,EACb,wBAAO3E,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,YAAd,kBACC4U,EACD,oBAAI5U,UAAU,aAAd,kBACCyS,EACAE,EACAA,EAAW,KAAO,oBAAI3S,UAAU,aAAd,iBAClB2S,EACC,oBAAI3S,UAAU,aAAd,+BAEA,oBAAIA,UAAU,aAAd,8BAIN,gCAAQmE,OAER,KAEH0R,S,GAt5BwCvQ,a,+DChJ5B2Q,G,4JACnB,WACE,OACE,sBAAK7T,MAAO,CAAE8T,QAAS,gBAAvB,UACE,cAAC,IAAD,CACE9T,MAAO,CAAE4T,SAAU,MAAOG,YAAa,OACvCnW,UAAU,cAEZ,+BAAOZ,KAAKG,MAAM6W,c,GARQ9Q,aCH3B,SAAS+Q,GAAY3P,GAC1B,IAAKA,EACH,MAAO,IAGT,GAAIA,EADO,KAET,OAAOA,EAAO,MAEhB,IAAM4P,EAAK,IACX,GAAI5P,EAAO4P,EACT,OAAQ5P,EANC,MAMU6P,QAAQ,GAAK,MAElC,IAAMC,EAAK,IACX,OAAI9P,EAAO8P,GACD9P,EAAO4P,GAAIC,QAAQ,GAAK,OAE1B7P,EAAO8P,GAAID,QAAQ,GAAK,MAI3B,SAASE,GAASC,EAAKC,GAC5B,IAAIC,EAAM,KACV,IAAIlF,OAAOmF,UAET,MAAM,IAAIC,MAAM,4BAGlB,SAASC,EAAUC,EAAS7X,GAC1B,GAAyB,UAArB6X,EAAQC,SAAZ,CAMA,IAAIC,EAAW,GACbC,EAAWhY,EAAO6X,EAAQC,UAW5B,GAVIE,EACGC,MAAMC,QAAQF,GAEdhY,EAAO6X,EAAQC,UAAU/M,KAAKgN,GADjC/X,EAAO6X,EAAQC,UAAY,CAACE,EAAUD,GAGpCP,IAAsD,IAAzCA,EAAUW,QAAQN,EAAQC,UACzC9X,EAAO6X,EAAQC,UAAY,CAACC,GACzB/X,EAAO6X,EAAQC,UAAYC,EAG9BF,EAAQO,WAAY,CAAC,IAAD,gBACAP,EAAQO,YADR,IACtB,2BAA0C,CAAC,IAAlCC,EAAiC,QACxCN,EAASM,EAAUP,UAAYO,EAAUC,WAFrB,+BAMxBP,EAASQ,YAAcV,EAAQU,YAzBG,oBA2BjBV,EAAQW,YA3BS,IA2BlC,4BAAqCZ,EAArC,QAAqDG,IA3BnB,mCAClC,CACE,IAAI7X,EAAI2X,EAAQS,UACZpY,EAAEuY,SAAQzY,EAAO,SAAWE,IARduX,GAAM,IAAIC,WAAYgB,gBAAgBnB,EAAK,YAmCjE,IArCuC,EAqCnCvX,EAAS,GArC0B,cAsCtByX,EAAIe,YAtCkB,IAsCvC,4BAAiCZ,EAAjC,QAAiD5X,IAtCV,8BAwCvC,OAAOA,EAGF,SAAe2Y,GAAtB,mC,8CAAO,WAAwBC,GAAxB,eAAA5Z,EAAA,6DAED6Z,EAAUD,EAAU/Y,KAAI,SAACiZ,GAAD,OAAOA,OAF9B,SAGQC,QAAQhZ,IAAI8Y,GAHpB,oF,+BAMQG,G,iFAAf,WAAkCC,GAAlC,mBAAAja,EAAA,6DAEQka,EAAM/Q,aAAaC,QAAQ,UAFnC,SAGuB+Q,MAAM,iCAAkC,CAC3DC,OAAQ,OACRzF,QAAS,CACP0F,cAAe,SAAWH,GAE5B5M,KAAMhE,KAAKY,UAAU,CAAE+P,MAAOA,MARlC,UAUwB,OAPhBjZ,EAHR,QAUa0K,OAVb,6BAWciN,MAXd,kDAW8D3X,EAAOiX,OAXrE,kGAcqBjX,EAAOsZ,OAd5B,aAcQ5Z,EAdR,QAeW6Z,OAfX,uBAgBU,IAAI5B,MAAJ,qCAC0BrP,KAAKY,UAAUxJ,EAAK6Z,UAjBxD,iCAoBS7Z,GApBT,6C,oEAuBA,WAA8BuZ,GAA9B,SAAAja,EAAA,sEACgBga,GAAmBC,GADnC,uCAC2CvZ,MAD3C,4C,oEAIO,WAA2BZ,GAA3B,iBAAAE,EAAA,6DAECka,EAAM/Q,aAAaC,QAAQ,UAF5B,SAGgB+Q,MAAM,0BAA4Bra,EAAK,CAC1D6U,QAAS,CACP6F,OAAQ,iCACRH,cAAe,SAAWH,KANzB,cAGClZ,EAHD,gBASQA,EAAOsZ,OATf,oF,oEAYA,WAA0Bxa,GAA1B,iBAAAE,EAAA,6DAECka,EAAM/Q,aAAaC,QAAQ,UAF5B,SAGgB+Q,MAAM,0BAA4Bra,EAAK,CAC1D6U,QAAS,CACP6F,OAAQ,iCACRH,cAAe,SAAWH,KANzB,cAGClZ,EAHD,yBAUEA,GAVF,4C,sBAaA,IAAIyZ,GAAS,CAClBC,Q,6CACAC,YAAaX,GACbM,KA5BK,SAAP,oCA6BEM,IAjBK,SAAP,qCAoBO,SAASC,GAAcxN,EAAKuD,GACjC,IAAIkK,EAAmB,IAAIC,gBAAgBxH,OAAOyH,SAASC,QAC3DH,EAAiBjV,IAAIwH,EAAKuD,GAC1B2C,OAAO2H,QAAQC,UACb,GACA,GACA5H,OAAOyH,SAASI,SAAW,IAAMN,EAAiBO,YAS/C,SAAeC,GAAtB,qC,8CAAO,WAAkBC,EAAQC,GAA1B,SAAAxb,EAAA,sEAEQma,MACX,kBAAWqB,EAAX,uBACE,IAAIT,gBAAgB,CAClB,YAAa,EACbU,UAAW,IACXF,OAAQA,EACR,WAAY,MAGflb,MAAK,SAACL,GAAD,OAAOA,EAAEiY,UACd5X,MAAK,SAACL,GAAD,OAAOsY,GAAStY,MAZnB,oF,0BClID0b,G,kDACJ,WAAYta,GAAQ,IAAD,8BACjB,cAAMA,IAQRua,UAAY,WACN,EAAKC,SACPC,4BAAiB,EAAKD,QAAQE,QAAQC,SAAS,GAAI,CACjDC,SAAU,YAVd,EAAKJ,QAAUK,IAAMC,YAFJ,E,qDAKnB,WACEjb,KAAK0a,c,oBAWP,WACE,IAAMQ,EAAQlb,KAAKG,MAAMgb,SACrBC,EAAUF,EAAME,SAAWF,EAAM1b,MASjC6b,GANArD,MAAMC,QAAQmD,GACLA,EAEA,CAACA,IAGSxb,KAAI,SAACiZ,GAAD,OAAOA,EAAEP,YAAYE,UAAQ8C,KAAK,QAEzDC,EAAW,KAQf,OAPIL,EAAMM,MAAQN,EAAMO,OACtBF,EACE,uBAAMvY,MAAO,CAAE4K,MAAO,QAAtB,UACGsN,EAAMM,KADT,IACgBN,EAAMO,KADtB,QAMF,cAACC,GAAA,EAAD,CACE1Y,MAAO,CACLoL,WAAY,sBACZuN,UAAW,MACXnL,gBAAiB,WAJrB,SAOE,cAACkL,GAAA,EAAKE,KAAN,UACE,gCACE,8BACGL,EACAL,EAAMW,UAFT,IAEqBX,EAAM5W,QAE3B,qBAAKwX,IAAK9b,KAAK2a,QAAf,SACE,sBAAM/Z,UAAU,kBAAhB,SAAmCya,iB,GAtDzBnV,aA+DlB6V,G,kDACJ,WAAY5b,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACX6Y,YAAY,GAHG,E,0CAOnB,WAQE,IARQ,IAAD,OAKHC,EAAc,KAEdxc,EAAO,GACX,MAAkC6L,OAAOtG,QAAQhF,KAAKG,MAAM+b,MAA5D,eACE,IADG,2BAAOC,EAAP,KAAiBC,EAAjB,KACH,MAAiC9Q,OAAOtG,QAAQoX,GAAhD,eAA0D,CAArD,2BAAOP,EAAP,KAAkBQ,EAAlB,KACHA,EAAMF,SAAWA,EACjBE,EAAMR,UAAYA,EAClBpc,EAAKqL,KAAKuR,GAGd5c,EAAOA,EAAKwF,MAAK,SAAClG,EAAG0G,GAGnB,OAFA1G,EAAIA,EAAEud,OAASvd,EAAES,OACjBiG,EAAIA,EAAE6W,OAAS7W,EAAEjG,OACNT,KAEb,IApBO,EAoBHwd,EAAS,CACXD,OAAQ,EACR9c,MAAO,EACPgd,QAAS,GAvBJ,cAyBY/c,GAzBZ,IAyBP,2BAAyB,CAAC,IAAfwW,EAAc,QACvBsG,EAAOD,QAAUrG,EAAKqG,OACtBC,EAAO/c,OAASyW,EAAKzW,MACrB+c,EAAOC,SAAWvG,EAAKuG,SA5BlB,8BA8BP,GAAIxc,KAAKmD,MAAM6Y,WAAY,CACzB,IADyB,EACrBjX,EAAO,GADc,cAEAtF,GAFA,IAEzB,2BAA+B,CAAC,IAArBgd,EAAoB,QACzBN,EAAWM,EAAWN,SAAS5F,MAAM,KAAKvP,OAAO,GAAG,GACpD1C,EAAI,UAAM6X,EAAN,YAAkBM,EAAWZ,WACrC9W,EAAK+F,KACH,qBACE9H,MAAO,CACL4T,SAAU,OACVpG,gBAAiBiM,EAAWjd,MAAQ,EAAI,UAAY,SAHxD,UAOE,qBAAIwD,MAAO,CAAEoL,WAAY,uBAAzB,UACE,uBAAMpL,MAAO,CAAE4K,MAAO,QAAtB,UAAiCuO,EAAjC,OACA,+BAAOM,EAAWZ,eAEpB,oBAAIjb,UAAU,SAAd,SAAwB6b,EAAWH,SACnC,oBAAI1b,UAAU,SAAd,SAAwB6b,EAAWjd,QACnC,oBAAIoB,UAAU,SAAd,SAAwB6b,EAAWD,YAR9BlY,KAXc,8BAuBzB2X,EACE,wBAAOjZ,MAAO,CAAE2Y,UAAW,OAAS/a,UAAU,QAA9C,UACE,gCACE,+BACE,oBAAIA,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,oBACA,oBAAIA,UAAU,SAAd,oBACA,oBAAIA,UAAU,SAAd,0BAGJ,gCAAQmE,OAId,OACE,cAAC2W,GAAA,EAAD,CACE1Y,MAAO,CACL2Y,UAAW,OAFf,SAKE,eAACD,GAAA,EAAKE,KAAN,WACE,cAACF,GAAA,EAAKgB,MAAN,CAAY1Z,MAAO,CAAE2Z,aAAc,GAAnC,0BACA,gCACE,oBAAG3Z,MAAO,CAAE2Z,aAAc,GAA1B,iBACO3c,KAAKG,MAAMoc,OAAOK,MADzB,iBAC8C,IAC3C5c,KAAKG,MAAMoc,OAAOH,QAFrB,iBAE4Cpc,KAAKG,MAAMoc,OAAOM,MAAO,IAFrE,WAKA,oBAAG7Z,MAAO,CAAE2Z,aAAc,GAA1B,UACGJ,EAAOD,OADV,kBACiCC,EAAO/c,MADxC,iBAC6D,IAC1D+c,EAAOC,QAFV,iBAGE,yBACExZ,MAAO,CAAEgP,WAAY,OAAQ4E,SAAU,SACvChW,UAAU,oBACVgV,QAtFG,WACb,IAAMkH,EAAO,EAAK3Z,MAAM6Y,WACxB,EAAKvY,SAAS,CAAEuY,YAAac,KAiFrB,UAKG9c,KAAKmD,MAAM6Y,WAAa,OAAS,OALpC,iBAQDC,c,GApGa/V,aA8GL6W,G,kDACnB,WAAY5c,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,GAFI,E,qDAInB,WAAqB,IAAD,OAClBnD,KAAKqD,SAAS9D,OAAM,SAACC,GACnB2U,QAAQ3U,MAAMA,GACd,EAAKiE,SAAS,CAAEuZ,cAAexd,EAAM4a,kB,2DAIzC,kFAAArb,EAAA,sEAEkBma,MAAMlZ,KAAKG,MAAM8c,eAAe7d,MAAK,SAACE,GAAD,OACnDA,EAAE4d,iBAHN,OASE,IAAWC,KAPPC,EAFN,OAKMC,EAAU,GAER7B,EAAO,IAAI8B,WAAWF,GACxBG,EAAQC,aAAUhC,GAEhBpP,EAAM+Q,EACPpc,QAAQ,qBAAsB,IAC9BA,QAAQ,OAAQ,IACnBsc,EAAQjR,GAAOiL,GAASoG,aAAUF,EAAMJ,KAI1C,IAAWhB,KADPuB,EAAS,GACUL,EAErB,IADI5d,EAAO4d,EAAQlB,IACVwB,UACPD,EAAO5S,KAAKrL,EAAKke,gBACZ,GAAIle,EAAKme,WACd,GAAI5F,MAAMC,QAAQxY,EAAKme,WAAWD,WAAY,CAAC,EAAD,YACxBle,EAAKme,WAAWD,WADQ,IAC5C,2BAAWE,EAAoC,QAC7CH,EAAO5S,KAAK+S,GAF8B,oCAInCpe,EAAKme,WAAWD,WACzBD,EAAO5S,KAAKrL,EAAKme,WAAWD,gBAG9BxJ,QAAQ3U,MAAM,sBAAuBC,GAYzC,IARIqe,EAAW,GACXC,EAAW,GACTxB,EAAS,CACbH,QAAS,EACTQ,MAAO,EACPC,MAAO,EACP3a,KAAM,GAER,MAAoBwb,EAApB,eAA4B,CAO1B,GAPSG,EAAiB,KACtBG,GAAaH,EAAMvE,OACnB2E,GAAeJ,EAAMC,SACrBlB,EAAQiB,EAAM1C,SACbnD,MAAMC,QAAQ2E,KACjBA,EAAQ,CAACA,IAEPoB,EAAYC,EAAc,EAAG,CAAC,EAAD,YACRrB,GADQ,IAC/B,6BAAWzB,EAAmB,SACfC,SAAWD,EAAS3b,QAC/Bse,EAAShT,KAAKqQ,GAHa,+BAQ3B+C,EAAY,SAAC/C,GACjB,OAAIA,EAASqB,QACJ,UAELrB,EAAS3b,OAAS2b,EAASC,QACtB,QAEF,UAtBiB,cAwBHwB,GAxBG,IAwB1B,2BAAWzB,EAAmB,QAC5BoB,EAAOK,OAAS,EACXmB,EAAS5C,EAASK,QACrBuC,EAAS5C,EAASK,MAAQ,GAC1Be,EAAOM,OAAS,GAEbkB,EAAS5C,EAASK,MAAML,EAASU,aACpCU,EAAOH,SAAW,EAClB2B,EAAS5C,EAASK,MAAML,EAASU,WAAa,CAC5CS,OAAQ,EACR9c,MAAO,EACPgd,QAAS,EACTta,KAAM,EACN0a,MAAO,IAGXL,EAAOra,OAASiZ,EAASjZ,KACzB6b,EAAS5C,EAASK,MAAML,EAASU,WAAWqC,EAAU/C,KAAc,EACpE4C,EAAS5C,EAASK,MAAML,EAASU,WAAWe,OAAS,EACrDmB,EAAS5C,EAASK,MAAML,EAASU,WAAW3Z,OAASiZ,EAASjZ,KA3CtC,+BA8CxBlC,KAAKG,MAAMge,UACbne,KAAKG,MAAMge,SAASL,EAAUvB,EAAQwB,GAGxC/d,KAAKyD,SAAS,CACZqa,SAAUA,EACVvB,OAAQA,EACRwB,SAAUA,IA/Fd,iD,iFAmGA,c,oBAEA,WACE,IAAK/d,KAAKmD,MAAM2a,SACd,OAAI9d,KAAKmD,MAAM6Z,cAEX,oBAAGha,MAAO,CAAE4K,MAAO,OAAnB,qCAC2B5N,KAAKmD,MAAM6Z,iBAInC,cAAC,GAAD,CAAMhG,KAAK,yBAGpB,IAAIoH,EAAU,GAERC,EACJ,cAAC,GAAD,CAAanC,KAAMlc,KAAKmD,MAAM4a,SAAUxB,OAAQvc,KAAKmD,MAAMoZ,SAG7D,GAAmC,IAA/Bvc,KAAKmD,MAAM2a,SAASvY,OACtB,OACE,gCACGvF,KAAKG,MAAMme,UAAY,KAAOD,EAC/B,cAAC3C,GAAA,EAAD,CACE1Y,MAAO,CACL2Y,UAAW,MACXnL,gBAAiB,WAHrB,SAME,cAACkL,GAAA,EAAKE,KAAN,UACE,eAACF,GAAA,EAAKgB,MAAN,CAAY1Z,MAAO,CAAE2Z,aAAc,GAAnC,UACE,cAAC,KAAD,CAAS3Z,MAAO,CAAE4K,MAAO,aAAgB,IACzC,8DAQZ,IAvCO,EAuCHhD,EAAI,EAvCD,cAwCc5K,KAAKmD,MAAM2a,UAxCzB,IAwCP,2BAA0C,CAAC,IAAlC3C,EAAiC,QACxCiD,EAAQtT,KAAK,cAAC,GAAD,CAAqBqQ,SAAUA,GAAfvQ,OAzCxB,8BA4CP,OACE,gCACG5K,KAAKG,MAAMme,UAAY,KAAOD,EAC9BD,S,GAhKuClY,a,SC3LzC,SAASqY,GAAUC,GACxB,IAD6B,EACzBC,EAAkB,CACpB,0BACA,+CACA,oBACA,qBACA,0BACA,gBACA,kBACA,mBACA,oBACA,YACA,aACA,cACA,0BACA,oCACA,uBACA,sBACA,iCACA,oBACA,8BACA,0BACA,mCACA,qCACA,oCACA,gCACA,+BACA,2BACA,yBACA,iCAGIC,EAAQF,EAAIjI,MAAM,MACpBoI,EAAS,GAjCgB,cAmCVD,GAnCU,IAmC7B,2BAA0B,CAAC,IAAD,EAAfjD,EAAe,QACpBmD,GAAU,EADU,cAEJH,GAFI,IAExB,2BAAqC,CAAC,IAA3B9K,EAA0B,QACnC,GAAI8H,EAAKjN,MAAMmF,GAAQ,CACrBiL,GAAU,EACV,QALoB,8BAQpBA,IACFD,GAAUlD,EAAO,OA5CQ,8BA+C7B,OAAOkD,EAGF,SAASE,GAAoBC,EAAQC,GAE1CD,EAAOE,UAAUC,SAAS,CAAElN,GAAI,YAGhC+M,EAAOE,UAAUE,yBAAyB,UAAW,CACnDC,UAAW,CACTC,KAAM,CACJ,CAAC,iBAAkB,SACnB,CAAC,iBAAkB,OACnB,CAAC,iBAAkB,SACnB,CAAC,iBAAkB,UACnB,CAAC,iBAAkB,QACnB,CAAC,iBAAkB,WACnB,CAAC,iBAAkB,QACnB,CAAC,iBAAkB,SAEnB,CAAC,eAAgB,SACjB,CAAC,eAAgB,OACjB,CAAC,eAAgB,SACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,QACjB,CAAC,eAAgB,WACjB,CAAC,eAAgB,QACjB,CAAC,eAAgB,SAEjB,CAAC,mBAAoB,SACrB,CAAC,mBAAoB,OACrB,CAAC,mBAAoB,SACrB,CAAC,mBAAoB,UACrB,CAAC,mBAAoB,QACrB,CAAC,mBAAoB,WACrB,CAAC,mBAAoB,QACrB,CAAC,mBAAoB,SAErB,CAAC,cAAe,QAChB,CAAC,8CAA+C,cAMtDN,EAAOO,OAAOC,YAAY,WAAY,CACpCC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CAAEC,MAAO,QAASC,WAAY,SAAUC,UAAW,QACnD,CAAEF,MAAO,MAAOC,WAAY,SAAUC,UAAW,QACjD,CAAEF,MAAO,QAASC,WAAY,SAAUC,UAAW,QACnD,CAAEF,MAAO,SAAUC,WAAY,SAAUC,UAAW,QACpD,CAAEF,MAAO,OAAQC,WAAY,SAAUC,UAAW,QAClD,CAAEF,MAAO,UAAWC,WAAY,SAAUC,UAAW,QACrD,CAAEF,MAAO,OAAQC,WAAY,SAAUC,UAAW,QAClD,CAAEF,MAAO,QAASC,WAAY,SAAUC,UAAW,QACnD,CAAEF,MAAO,SAAUC,WAAY,aAInCb,EAAOE,UAAUa,6BAA6B,UAAW,CACvDC,qBAAsB,SAAUC,EAAOC,EAASN,GAC9C,OAAOX,KChGb,SAASkB,GAAKjJ,GACZ,OACE,cAAC,IAAD,CAEEhJ,QAASgJ,EACT/I,gBAAiB,EACjBC,UAAU,WACVC,qBAAsB,CAAEmI,YAAY,GALtC,SAOE,sBAAMtT,MAAO,CAAE4T,SAAU,OAAQhJ,MAAO,UAAWkI,OAAQ,WAA3D,SACE,cAAC,IAAD,OAPE,Q,IAyBJoK,G,kDACJ,WAAY/f,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,GAFI,E,qDAKnB,WACEnD,KAAKqD,W,2DAGP,gCAAAtE,EAAA,sEACuBya,GAAOG,IAAI3Z,KAAKG,MAAMtB,KAD7C,cACMQ,EADN,gBAEmBA,EAAS2X,OAF5B,OAEMA,EAFN,OAGMhX,KAAKG,MAAMggB,YACbnJ,EAAOhX,KAAKA,KAAKG,MAAMggB,UAAUnJ,IAE7BoJ,GAAcpJ,EAAKxI,MAAM,QAAU,IAAIjJ,OAAS,EACtDvF,KAAKyD,SAAS,CAAEuT,OAAMoJ,eAPxB,gD,0EAUA,WAAU,IAAD,OACP,IAAKpgB,KAAKmD,MAAM6T,KACd,OAAO,cAAC,GAAD,CAAMA,KAAM,qBAIrB,OACE,cAAC,KAAD,CACE7G,OAAM,UAHG,GAGH,MACNkQ,gBAAgB,UAChB1O,aAAc3R,KAAKmD,MAAM6T,KACzBsJ,MAAM,WACNC,YAAa,SAACzB,GAEZD,GAAoBC,EADA,KAGtBhgB,QAAS,CACP0hB,sBAAsB,EACtBC,oBAAqBzgB,KAAKmD,MAAMid,WAAWhG,WAAW7U,OAAS,EAC/Dmb,SAAS,GAEXC,QAAS,SAACtB,EAAQP,GACCO,EAAOuB,UAAU,kBACvBC,MAAMzhB,MAAK,WACpB,IAAIqc,EAAOqF,SApDvB,SAA2B9J,EAAMoJ,GAC/B,IAAM1N,EAAMsF,MAAM+I,KAAK/J,EAAKgK,SAAS,mCAAmCha,OACrE,GACD,GAAGmD,MAEL,OATF,SAAmB6M,EAAMtE,GACvB,OAAQsE,EAAKiK,UAAU,EAAGvO,GAAKlE,MAAM,QAAU,IAAIjJ,OAOtC2b,CAAUlK,EAAMtE,GAiDjByO,CAAkB,EAAKhe,MAAM6T,KAAM,EAAK7T,MAAMid,YAC5CjQ,KAEJkP,EAAO+B,WAAW3F,OAGtB4F,QAAS,cAAC,GAAD,CAAMrK,KAAM,yB,GAnDL9Q,aAyDHob,G,kDACnB,WAAYnhB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,GACb,EAAKA,MAAMoe,OAAQ,EAHF,E,qDAMnB,WACEvhB,KAAKqD,W,2DAGP,sBAAAtE,EAAA,0F,0EAEA,WAAU,IAAD,SACHqH,EAAQ,GADL,cAEepG,KAAKG,MAAM2d,UAF1B,IAEP,2BAA2C,CAAC,IAAjC1C,EAAgC,QACrCoG,EAAc,GAClB,QAA2BxiB,IAAvBoc,EAAQ3b,KAAK0D,MAAjB,CAIEqe,EAAcpG,EAAQ3b,KAAKgiB,UAAUC,MAAMrc,QACzC,SAACtC,GAAD,MAAwB,YAAjBA,EAAE4e,cAGb,IAVyC,EAUnCC,EAAWxG,EAAQ3b,KAAKoiB,YAAYD,SAAStd,KAC/Cwd,EAAU,KAX2B,cAYtBN,GAZsB,yBAY9BO,EAZ8B,QAsBnCD,EATAC,EAAKzd,KAAKkF,WAAW,YAAcuY,EAAKC,gBACrCD,EAAKE,YASN,cAAC,GAAD,CACEhF,cAAe8E,EAAKE,YACpB3D,WAAW,EACXH,SAAU,SAACL,EAAUvB,EAAQwB,GACH,IAApBD,EAASvY,SACXwc,EAAKC,iBAAkB,EACvB,EAAKve,SAAS,EAAKN,WAbzB,8BACE,cAAC,GAAD,CAAM6T,KAAM,0BAqBhB,cAAC,GAAD,CACEnY,IAAG,gBAAW,EAAKsB,MAAM2S,KAAtB,YAA8B,EAAK3S,MAAM4S,KAAzC,yBAA8DgP,EAAKG,WAAnE,WAKT9b,EAAM0E,KACJ,sBACE9H,MAAO,CAAE2Z,aAAc,QADzB,UAIE,uBAAM3Z,MAAO,CAAEqT,WAAY,QAA3B,UACGuL,EADH,MACgBG,EAAKzd,KAAM,IACxByd,EAAKC,gBACF/B,GACE,+IAEF,QAEL6B,IAZH,aAEaF,EAFb,YAEyBG,EAAKzd,SAnClC,2BAAiC,IAZQ,iCAFpC,8BAiEP,IAAM6d,EAAS,WACb,EAAK1e,SAAS,CAAE8d,OAAQ,EAAKpe,MAAMoe,SAGjC7L,EACF,cAAC,IAAD,CAAsB1S,MAAO,CAAE8S,OAAQ,WAAaF,QAASuM,IAO/D,OALIniB,KAAKmD,MAAMoe,QACb7L,EACE,cAAC,IAAD,CAAqB1S,MAAO,CAAE8S,OAAQ,WAAaF,QAASuM,KAG3C,IAAjB/b,EAAMb,OACD,KAGP,cAACmW,GAAA,EAAD,CACE1Y,MAAO,CACL2Z,aAAc,OACdyF,UAAW,oCACXC,OAAQ,qBAJZ,SAOE,eAAC3G,GAAA,EAAKE,KAAN,WACE,eAACF,GAAA,EAAKgB,MAAN,gCACqB,IAClBuD,GAAK,+CAFR,IAEyDvK,KAExD1V,KAAKmD,MAAMoe,MAAQnb,EAAQ,c,GA1GKF,a,SCxFtBoc,G,kDACnB,WAAYniB,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIoiB,EAAapiB,EAAMsK,OAAO+X,UAAUhU,MAAM,2BAK9C,GAJA,EAAKrL,MAAQ,CACXsf,UAAW,IAGTF,EAAY,CACd,IAAIG,EAAUH,EAAW,GACzB,EAAKpf,MAAMtE,IAAX,mEAA6E6jB,GAT9D,S,4CAanB,WACE,YAAmC1jB,IAA5BgB,KAAKmD,MAAMwf,e,uEAGpB,WAAyB5Z,EAAW6Z,GAApC,0BAAA7jB,EAAA,0DACMiB,KAAK6iB,WADX,oDAIO7iB,KAAKmD,MAAM1D,KAJlB,+DAOqBO,KAAKmD,MAAM1D,KAAKqjB,OAPrC,0BAOaf,EAPb,QAQI,IAAKA,EAAKvD,IAAI+C,YAA2BviB,IAAlB+iB,EAAKvD,IAAIxH,KAC9B,iBAGFkC,MAAM6I,EAAKpT,QAAQ,GAAGoU,YACnB3jB,MAAK,SAACof,GAAD,OAASA,EAAIxH,UAClB5X,MAAK,SAACof,GACLuD,EAAKvD,IAAIxH,KAAOwH,EAAIwE,WAAW,MAAO,MAAMA,WAAW,MAAO,IAC9D,EAAKvf,SAAS,EAAKN,WAhB3B,2T,wFAqBA,WACEnD,KAAKqD,W,2DAGP,kCAAAtE,EAAA,sEACuBma,MAAMlZ,KAAKmD,MAAMtE,KADxC,cACMQ,EADN,gBAEmBA,EAASga,OAF5B,cAEM5Z,EAFN,QAGcwjB,WAHd,cAKqBxjB,EAAKqjB,OAL1B,IAKE,2BAA+B,QACxBtE,IAAM,CACTxH,UAAMhY,EACNuiB,OAAO,EACP2B,SAAU,WAThB,8BAaEljB,KAAKyD,SAAS,CAAEhE,KAAMA,IAbxB,iD,oFAgBA,SAAiBgL,GAYf,OAXAA,EAASA,EAAO0Y,cAEC,CACfC,QAAS,cAAC,KAAD,CAASpgB,MAAO,CAAE4K,MAAO,aAClCyV,QAAS,cAAC,KAAD,CAAKrgB,MAAO,CAAE4K,MAAO,aAC9B0V,OAAQ,cAAC,KAAD,CAAKtgB,MAAO,CAAE4K,MAAO,aAC7B2V,SAAU,cAAC,KAAD,CAAKvgB,MAAO,CAAE4K,MAAO,aAC/B4V,QAAS,cAAC,KAAD,CAAexgB,MAAO,CAAE4K,MAAO,aACxC6V,UAAW,cAAC,KAAD,CAAezgB,MAAO,CAAE4K,MAAO,qBAG5BnD,IAAW,cAAC,KAAD,CAAgBzH,MAAO,CAAE4K,MAAO,e,6BAG7D,SAAgBmU,GAAO,IAAD,OAChBvD,EAAM,KAEV,GAAIuD,EAAKvD,IAAI+C,MACX,GAAIQ,EAAKvD,IAAIxH,KAAM,CACjB,IAAI0M,EAAU,KAORtD,IALJsD,EADwB,QAAtB3B,EAAKvD,IAAI0E,SACDnB,EAAKvD,IAAIxH,KAETuH,GAAUwD,EAAKvD,IAAIxH,OAGHxI,MAAM,QAAU,IAAIjJ,OAAS,EACrDwc,EAAKvD,IAAImF,iBACX5B,EAAKvD,IAAImF,eAAeC,SAASF,GACjC3B,EAAKvD,IAAImF,eAAevC,WAAWhB,IAErC5B,EACE,sBACExb,MAAO,CACL2Z,aAAc,QAFlB,UAKE,sBAAK/b,UAAU,YAAf,UACE,+CACA,qBAAKoC,MAAO,CAAE8T,QAAS,UAAvB,SACE,cAAC+M,GAAA,EAAD,UAxBG,CAAC,UAAW,OAyBLjkB,KAAI,SAACkkB,EAAOpR,GAAR,OACV,cAACqR,GAAA,EAAD,CAEEhS,GAAE,gBAAWW,GACbtC,KAAK,QACL4T,QAAQ,eACR1f,KAAK,QACLqL,MAAOmU,EACPzT,QAAS0R,EAAKvD,IAAI0E,WAAaY,EAC/BxT,SAAU,SAAC/G,GACTwY,EAAKvD,IAAI0E,SAAWY,EACpB,EAAKrgB,SAAS,EAAKN,QAVvB,SAaG2gB,GAZIpR,aAkBf,cAAC,KAAD,CACEvC,OAAO,OACPkQ,gBAAgB,UAChB1O,aAAc+R,EACdpD,MAAM,WACNC,YAAa,SAACzB,GAEZD,GAAoBC,EADA,KAGtBhgB,QAAS,CACP0hB,sBAAsB,EACtBC,oBAAqBL,EAAWhG,WAAW7U,OAAS,EACpDmb,SAAS,GAEXC,QAAS,SAACtB,EAAQP,GAChBiD,EAAKvD,IAAImF,eAAiBtE,EACTA,EAAOuB,UAAU,kBACvBC,MAAMzhB,MAAK,WACpBigB,EAAO+B,WAAWhB,OAGtBiB,QAAS,4DAKf7C,EAAM,iDAGV,OAAOA,I,oBAGT,WAAU,IAAD,OACD/T,EAASzK,KAAKG,MAAMsK,OAEtBwZ,EAAe,KAGnB,GAAIjkB,KAAKmD,MAAM1D,KAAM,CACnB,IADmB,EACfqjB,EAAQ,GADO,cAEK9iB,KAAKmD,MAAM1D,KAAKqjB,MAAM9d,WAF3B,mDAEP4F,EAFO,KAEJmX,EAFI,KAGXzd,EAAOyd,EAAKzd,KAEd4f,EAAa,EAAKC,iBAAiBpC,EAAKpT,QAAQ,GAAGlE,QACjD2Z,EAAY,CAAEtO,OAAQ,WAEtBqM,EAAS,WACbJ,EAAKvD,IAAI+C,OAASQ,EAAKvD,IAAI+C,MAC3B,EAAK9d,SAAS,EAAKN,QAEjBuS,EAAO,cAAC,IAAD,CAAsB1S,MAAOohB,EAAWxO,QAASuM,IACxDJ,EAAKvD,IAAI+C,QACX7L,EAAO,cAAC,IAAD,CAAqB1S,MAAOohB,EAAWxO,QAASuM,KAGzDW,EAAMhY,KACJ,sBACE9H,MAAO,CAAE2Z,aAAc,OADzB,UAIGuH,EAJH,IAIe,+BAAO5f,IAJtB,IAIoCoR,EAJpC,IAI2C,EAAK2O,gBAAgBtC,KAJhE,iBAEiBtX,EAAOuV,QAFxB,YAEmC1b,EAFnC,YAE2CsG,MAlB/C,2BAA0D,IAFvC,8BA8BnBqZ,EAAe,qBAAKjhB,MAAO,CAAEqL,QAAS,OAAvB,SAAiCyU,IAGlD,OACE,cAACpH,GAAA,EAAD,UACE,eAACA,GAAA,EAAKE,KAAN,CACE5Y,MAAO,CACLwN,gBACmB,YAAjB/F,EAAOtH,MAAsB,mBAAqB,MAHxD,UAME,cAACuY,GAAA,EAAKgB,MAAN,UACE,mBAAG9W,KAAM6E,EAAO+X,UAAhB,SAA4B/X,EAAOuV,YAErC,gCACGiE,EA/Cc,YAoCV,QAAUxZ,EAAOuV,a,GAjMQ9Z,aCkBpCoe,GAAmB,mCAUzB,SAASC,GAAqBzR,EAAMC,EAAMjD,GACxC,MAAM,oCAAN,OAEwBiD,EAFxB,sBAE0CD,EAF1C,6CAG4BhD,EAH5B,sNAoFF,SAAS0U,GAAe1R,EAAMC,EAAM0R,GAClC,MAAM,oCAAN,OAEwB1R,EAFxB,sBAE0CD,EAF1C,qCAGoB2R,EAHpB,4yC,IAuDmBC,G,kDACnB,WAAYvkB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXiP,WAAY,IAHG,E,qDAOnB,WAAqB,ILjDIhG,EKiDL,OAClBpM,KAAKqD,OAAO,CACVshB,gBLnDqBvY,EKmDM,WLlDR,IAAI0N,gBAAgBxH,OAAOyH,SAASC,QACnC9a,IAAIkN,MKkDvB7M,OAAM,SAACC,GACR2U,QAAQ3U,MAAMA,GACd,EAAKiE,SAAS,CAAEmhB,cAAeplB,EAAM4a,kB,kBAIzC,WACE,YAAgCpb,IAAzBgB,KAAKG,MAAMkT,Y,sBAEpB,WACE,YAAoCrU,IAA7BgB,KAAKmD,MAAMyhB,gB,yBAGpB,SAAY7kB,EAAQqM,GAGlB,OAAKrM,EAAOqM,GAIR4L,MAAMC,QAAQlY,EAAOqM,IAChBrM,EAAOqM,GAET,CAACrM,EAAOqM,IANN,O,uEASX,WAAyBrD,EAAW6Z,GAApC,gCAAA7jB,EAAA,0DACMiB,KAAK6iB,WADX,+DAIoB7iB,KAAKmD,MAAM0hB,MAJ/B,yDAIahE,EAJb,sBAKwBA,EAAIY,UAAUC,OALtC,0BAKeoD,EALf,QAMM,IAAKA,EAAMtG,IAAI+C,OAA4B,OAAnBuD,EAAMtG,IAAIxH,KAChC,iBAGFwC,GACGG,IADH,gBAEa,EAAKxZ,MAAM2S,KAFxB,YAEgC,EAAK3S,MAAM4S,KAF3C,yBAEgE+R,EAAM5C,WAFtE,UAIG9iB,MAAK,SAACof,GAAD,OAASA,EAAIxH,UAClB5X,MAAK,SAACof,GACLsG,EAAMtG,IAAIxH,KAAOwH,EACjB,EAAK/a,SAAS,EAAKN,WAjB7B,id,oHAuBA,WAAahE,GAAb,oDAAAJ,EAAA,yDAGEmJ,aAAac,QAAQ,gBAAiBsJ,OAAOyH,SAASnU,OAjNtD0M,OAAOyH,SAASnU,KAAK4D,WAAW,qBAChC8I,OAAOyH,SAASnU,KAAK4D,WAAW,6BAoNzBtB,aAAaC,QAAQ,YAClBuX,EAAQqF,OACZ,+JAGA7c,aAAac,QAAQ,SAAU0W,KAKjC1f,KAAK6iB,WAjBX,oDAqBO3a,aAAaC,QAAQ,UArB5B,uBAsBInI,KAAKyD,SAAS,CAAEmhB,cAAe,yCAtBnC,6BAyBMtR,OAAKtU,EACL2L,OAAS3L,GACTgB,KAAKglB,OA3BX,oBA6BQC,EAAiB,MACjB9lB,IAAUA,EAAOwlB,eA9BzB,wBA+BYA,EAAiBxlB,EAAOwlB,eA/BpC,UAgC6BnL,GAAOC,QAC5B+K,GAAexkB,KAAKG,MAAM2S,KAAM9S,KAAKG,MAAM4S,KAAM4R,IAjCzD,QAgCMM,EAhCN,gCAoCsCnM,QAAQhZ,IAAI,CAC5C0Z,GAAOC,SA3NK3G,EA4NC9S,KAAKG,MAAM2S,KA5NNC,EA4NY/S,KAAKG,MAAM4S,KA5NjBjD,EA4NuB9P,KAAKG,MAAMkT,UA3N1D,oCAAN,OAEwBN,EAFxB,sBAE0CD,EAF1C,6CAG4BhD,EAH5B,o9CA6NM0J,GAAOC,QACL8K,GACEvkB,KAAKG,MAAM2S,KACX9S,KAAKG,MAAM4S,KACX/S,KAAKG,MAAMkT,cA5CrB,wCAoCS6R,EApCT,KAoCmBC,EApCnB,MAgDI7R,EAAK4R,EAASE,WAAWC,aACtBC,WAAaH,EAAUC,WAAWC,YAAYpS,QAAQyO,MACtD9hB,KAAI,SAACmE,GAAD,MAAO,CAACA,EAAE4G,OAAO4a,IAAKxhB,EAAE4G,OAAO6a,oBACnCxV,UACQ,OAAPsD,QAAsBtU,IAAPsU,EApDvB,wBAqDMtT,KAAKmD,MAAMyhB,cAAgB,sBAAwB5kB,KAAKG,MAAMkT,UAC9DrT,KAAKyD,SAASzD,KAAKmD,OAtDzB,2BAyDQ8hB,IACF3R,EAAGL,QAAQyO,MAAQ,CACjB,CAAE/W,OAAQsa,EAAeG,WAAWK,OAAOxL,QAAQyH,MAAM,MAG7D/W,EAAS2I,EAAGL,QAAQyO,MAAM,GAAG/W,OA9DjC,yCAgE+B6O,GAAOC,QAChC+K,GAAexkB,KAAKG,MAAM2S,KAAM9S,KAAKG,MAAM4S,KAAM/S,KAAKG,MAAMulB,cAjElE,WAmE4C,OAHpCT,EAhER,QAmEuBG,WAAWK,OAnElC,wBAoEMzlB,KAAKyD,SAAS,CACZmhB,cAAc,mBAAD,OAAqB5kB,KAAKG,MAAMulB,eArErD,2BAyEI/a,EAASsa,EAAeG,WAAWK,OAAOxL,QAAQyH,MAAM,GAzE5D,eAgFEiE,GADIA,EAAgBhb,EAAOib,YAAYlE,OACTrc,QAAO,SAACtC,GAAD,OAAOA,EAAE8e,gBAChCje,SAAQ,SAACid,GACrBA,EAAIY,UAAUC,MAAM9d,SAAQ,SAACkhB,GAC3BA,EAAMtG,IAAM,CACVxH,KAAM,KACNuK,OAAO,EACP2B,SAAU,iBAtFlB,UA0FQxK,GACJiN,EAAc/lB,KAAI,SAACihB,GACjB,6BAAO,4BAAA9hB,EAAA,6DACDgT,EAAK8O,EAAIgB,YAAYK,WADpB,SAEiB1I,GAAOH,KAAP,gBACX,EAAKlZ,MAAM2S,KADA,YACQ,EAAK3S,MAAM4S,KADnB,yBACwChB,EADxC,eAFjB,OAEL8O,EAAIgF,UAFC,sDA5Fb,QAqGEF,EAAgBA,EAAc1gB,MAAK,SAAClG,EAAG0G,GAAJ,OACjC1G,EAAE8iB,YAAYD,SAAStd,KAAK6e,cAC5B1d,EAAEoc,YAAYD,SAAStd,KAAK6e,cACxB,GACC,KAzGT,cA2GoBwC,GA3GpB,IA2GE,4BAAW9E,EAAsB,SAC3BpW,OAASzK,KAAK8lB,cAChBjF,EAAIY,UAAUC,MAAM9hB,KAAI,SAACklB,GAAD,OAAWA,EAAMnD,eA7G/C,qCAgHMoE,EAAW,GACXpb,EAAOF,SACTsb,EAAWpb,EAAOF,OAAOub,UAE3BhmB,KAAKyD,SAAS,CACZ6P,GAAIA,EACJ3I,OAAQA,EACRka,KAAMc,EACNI,SAAUA,EACVE,kBAAkB,EAClBtB,eAAgBha,EAAO4a,MAMrBW,EAAWlmB,KAAKmD,MAAM0hB,KAAKjlB,KAAI,SAACihB,GAElC,OADAA,EAAIsF,aAAe,GACK,YAApB,EAAKhmB,MAAM4S,KAEb,sBAAO,sBAAAhU,EAAA,2HAKT,sBAAO,gDAAAA,EAAA,sEAEcsb,GAAG,mBAAD,OACAwG,EAAIgB,YAAYK,WADhB,KAEnB,iBAJG,UAEDniB,EAFC,UAODqmB,EAAW,EAAKC,YAClBtmB,EAAOumB,iBACP,oBAKcF,EAAS7gB,OAAS,GAd7B,+BAesB6gB,GAftB,gEAeQG,EAfR,QAgBGjM,EAASiM,EAAWC,OAAO,SAhB9B,UAiBkBnM,GAAGC,EAAQ,iBAjB7B,QAiBGva,EAjBH,OAkBG0mB,EAAW,EAAKJ,YAClBtmB,EAAOumB,iBACP,YApBD,cAsBqBG,GAtBrB,IAsBD,2BAAWpL,EAAqB,QAC9BwF,EAAIsF,aAAarb,KAAKuQ,GAvBvB,wOAzIX,UAsKQ3C,GAASwN,GAtKjB,QAuKElmB,KAAKyD,SAASzD,KAAKmD,OAvKrB,kCAtLF,IAAoB2P,EAAMC,EAAMjD,IAsL9B,Y,2FA0KA,WAA0B,IAAD,OAInB4W,EAAS,KACTC,EAAM,KAEJC,EAAe,SAACtiB,GAAU,IAAD,gBACX,EAAKnB,MAAM0hB,MADA,IAC7B,2BAAmC,CAAC,IAAD,EAAxBhE,EAAwB,sBACbA,EAAIY,UAAUC,OADD,IACjC,2BAAyC,CAAC,IAA/BoD,EAA8B,QACvC,GACEA,EAAMxgB,OAASA,GACE,cAAjBwgB,EAAMra,QACe,YAArBqa,EAAMnD,WAEN,OAAO,GAPsB,gCADN,8BAY7B,OAAO,GA8BT,OA3BI3hB,KAAKmD,MAAM0hB,OACT+B,EAAa,yBACfF,EACE,mBACE9gB,KAAI,UAAK0e,GAAL,YAAyBtkB,KAAKG,MAAMkT,UAApC,eACJ7F,OAAO,SACP5M,UAAU,kBACVoC,MAAO,CAAE+T,YAAa,OACtBtJ,IAAI,aALN,0BAWAmZ,EAAa,sBACfD,EACE,mBACE/gB,KAAI,UAAK0e,GAAL,YAAyBtkB,KAAKG,MAAMkT,UAApC,uBACJ7F,OAAO,SACP5M,UAAU,kBACV6M,IAAI,aAJN,wBAYJ,sBAAKzK,MAAO,CAAE6jB,cAAe,OAA7B,UACGH,EAEAC,O,yBAKP,WACE,IAAI9W,EAAQ,KACZ,GAAI7P,KAAKmD,MAAMwH,OACb,GAAI3K,KAAKglB,OACPnV,EACE,8BACE,6BACE,oBACEjK,KAAI,6BAAwB5F,KAAKG,MAAM2S,KAAnC,YAA2C9S,KAAKG,MAAM4S,KAAtD,iBAAmE/S,KAAKG,MAAMkT,WADpF,UAGGrT,KAAKmD,MAAMmQ,GAAGzD,MAHjB,MAG2B7P,KAAKG,MAAMkT,UAHtC,eAQD,CACL,IAAIyT,EAAU9mB,KAAKmD,MAAMwH,OAAO6a,gBAC5BpS,EAAW,4BAAI0T,IACftY,EAAQsY,EAAQtY,MAAM,iBAC1B,GAAIA,GAASA,EAAM,GAAI,CACrB,IAAI6E,EAAY7E,EAAM,GACtBsY,EAAUA,EAAQ/lB,QAAQyN,EAAM,GAAI,IACpC4E,EACE,8BACG0T,EAAS,IACV,oBACElhB,KAAI,6BAAwB5F,KAAKG,MAAM2S,KAAnC,YAA2C9S,KAAKG,MAAM4S,KAAtD,iBAAmEM,GADzE,eAGKA,EAHL,UASNxD,EACE,gCACE,wCACS,IACP,mBAAGjK,KAAM5F,KAAKmD,MAAMwH,OAAOoc,UAA3B,SACG/mB,KAAKmD,MAAMwH,OAAO4a,IAAIve,MAAM,EAAG,QAGnCoM,KAKT,OAAOvD,I,gCAGT,SAAmBmX,GACjB,IAD2B,EACvBC,EAAO,KADgB,cAELD,GAFK,IAE3B,2BAAgC,CAAC,IAAtBzY,EAAqB,QAG9B,GAA6B,wBAAzBA,EAAQc,OAAO6X,MAAiC,CAClD,IAAI1Y,EAAQD,EAAQlC,KAAKmC,MACvB,gDAEEA,IACFyY,EAAOzY,EAAM,MAVQ,8BAc3B,OAAOyY,I,wBAGT,WACE,IAAKjnB,KAAKmD,MAAMwH,OACd,OAAO,KAIT,IAAIqM,EAAOhX,KAAKmD,MAAMwH,OAAOwc,YACzBF,EAAO,KACPjnB,KAAKglB,SACPhO,EAAOhX,KAAKmD,MAAMmQ,GAAGjH,MAEvB,IAAMmC,EAAQwI,EAAKxI,MAAM,2CAWzB,OAVIA,IACFyY,EAAOzY,EAAM,KAGVyY,GAAQjnB,KAAKglB,SAGhBiC,EAAOjnB,KAAKonB,mBAAmBpnB,KAAKmD,MAAMmQ,GAAG0T,SAAStF,QAGjD,mBAAG9b,KAAI,0CAAqCqhB,GAA5C,SAAqDA,M,wBAG9D,WACE,IAAKjnB,KAAKmD,MAAMwH,OACd,OAAO,KAGT,IAAIqM,EAAOhX,KAAKmD,MAAMwH,OAAOwc,YAK7B,OAJInnB,KAAKglB,SACPhO,EAAOhX,KAAKmD,MAAMmQ,GAAGjH,MAIrB,qBAAKrJ,MAAO,CAAEqkB,UAAW,OAAQhgB,SAAU,SAAUqP,OAAQ,QAA7D,SACE,cAAC,KAAD,CAAeoE,SAAU9D,Q,4BAK/B,SAAe8H,EAAQ9H,GACrB,IAD2B,EACrB0H,EAAQ1H,EAAKT,MAAM,MACnB+Q,EAAS,GACTC,EAAO,GACTC,EAAa,EAJU,cAKR9I,GALQ,IAK3B,2BAA0B,CAAC,IAAhBjD,EAAe,QACpBA,EAAKhQ,SAAS,aAChB6b,EAAOxc,KAAK0c,GACH/L,EAAKhQ,SAAS,iBACvB8b,EAAKzc,KAAK0c,GAEZA,GAAc,GAXW,8BAc3B,IADA,IAAIC,EAAS,GACJ7c,EAAI,EAAGA,EAAI7I,KAAK2lB,IAAIJ,EAAO/hB,OAAQgiB,EAAKhiB,QAASqF,IACxD6c,EAAO3c,KAAK,CACV6c,MAAOL,EAAO1c,GAAK,EACnBgd,IAAKL,EAAK3c,GAAK,EACfid,KAAM/I,EAAOE,UAAU8I,iBAAiBC,UAG5C,OAAON,I,6BAGT,SAAgB3C,GAAQ,IAAD,OACjBtG,EAAM,KACNwJ,GAAY,EAEhB,GAAIlD,EAAMtG,IAAI+C,MAEZ,GADAyG,GAAY,EACRlD,EAAMtG,IAAIxH,KAAM,CAClB,IAAI0M,EAAU,KAORtD,IALJsD,EADyB,QAAvBoB,EAAMtG,IAAI0E,SACF4B,EAAMtG,IAAIxH,KAEVuH,GAAUuG,EAAMtG,IAAIxH,OAGJxI,MAAM,QAAU,IAAIjJ,OAAS,EACrDuf,EAAMtG,IAAImF,iBACZmB,EAAMtG,IAAImF,eAAeC,SAASF,GAClCoB,EAAMtG,IAAImF,eAAevC,WAAWhB,IAGtC5B,EACE,sBACExb,MAAO,CACL2Z,aAAc,QAFlB,UAKE,sBAAK/b,UAAU,YAAf,UACE,+CACA,qBAAKoC,MAAO,CAAE8T,QAAS,UAAvB,SACE,cAAC+M,GAAA,EAAD,UA1BG,CAAC,UAAW,OA2BLjkB,KAAI,SAACkkB,EAAOpR,GAAR,OACV,cAACqR,GAAA,EAAD,CAEEhS,GAAE,gBAAWW,GACbtC,KAAK,QACL4T,QAAQ,eACR1f,KAAK,QACLqL,MAAOmU,EACPzT,QAASyU,EAAMtG,IAAI0E,WAAaY,EAChCxT,SAAU,SAAC/G,GACTub,EAAMtG,IAAI0E,SAAWY,EACrB,EAAKrgB,SAAS,EAAKN,QAVvB,SAaG2gB,GAZIpR,aAkBf,cAAC,KAAD,CACEvC,OAAO,OACPkQ,gBAAgB,UAChB1O,aAAc+R,EACdpD,MAAM,WACNC,YAAa,SAACzB,GAEZD,GAAoBC,EADA,EAAKmJ,eAAenJ,EAAQ4E,KAGlD5kB,QAAS,CACP0hB,sBAAsB,EACtBC,oBAAqBL,EAAWhG,WAAW7U,OAAS,EACpDmb,SAAS,GAEXC,QAAS,SAACtB,EAAQP,GAChBgG,EAAMtG,IAAImF,eAAiBtE,EACVA,EAAOuB,UAAU,kBACvBC,MAAMzhB,MAAK,WACpBigB,EAAO+B,WAAWhB,OAGtBiB,QAAS,4DAKf7C,EAAM,iDAGV,MAAO,CAACA,EAAKwJ,K,6BAGf,SAAgBE,GACd,OACEA,EACGnnB,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbA,QAAQ,QAAS,sBACjBiiB,WAAW,KAAM,KAAO,S,0BAI/B,SAAavB,EAAW0G,GAAc,IAAD,OAC7BC,EAAS,GACTC,EAAsB,GACvBF,IACHA,EAAc,IAEhB,IANmC,EAM/BG,EAAkB,GANa,cAOZH,GAPY,IAOnC,2BAAoC,CAAC,IAA1BI,EAAyB,QAE9BjkB,EADSikB,EAASC,IAAI,SACRjS,MAAM,KAAKvP,OAAO,GAAG,GACvCshB,EAAgBhkB,GAAQikB,GAVS,kDAaN9G,EAAUzc,WAbJ,mDAavBmF,EAbuB,KAahB2a,EAbgB,KAe3B3C,EAAS,WACb2C,EAAMtG,IAAI+C,OAASuD,EAAMtG,IAAI+C,MAC7B,EAAK9d,SAAS,EAAKN,QAErB,EAAyB,EAAKkhB,gBAAgBS,GAA9C,oBAAOtG,EAAP,KAAYwJ,EAAZ,KACM5D,EAAY,CAAEtO,OAAQ,WACxBJ,EAAO,cAAC,IAAD,CAAsB1S,MAAOohB,EAAWxO,QAASuM,IACxD6F,IACFtS,EAAO,cAAC,IAAD,CAAqB1S,MAAOohB,EAAWxO,QAASuM,KAIzD,IAMI+B,EANa,CACfd,QAAS,cAAC,KAAD,CAASpgB,MAAO,CAAE4K,MAAO,aAClCyV,QAAS,cAAC,KAAD,CAAKrgB,MAAO,CAAE4K,MAAO,aAC9B4V,QAAS,cAAC,KAAD,CAAexgB,MAAO,CAAE4K,MAAO,aACxC6V,UAAW,cAAC,KAAD,CAAezgB,MAAO,CAAE4K,MAAO,qBAElBkX,EAAMnD,aAC9B,cAAC,KAAD,CAAgB3e,MAAO,CAAE4K,MAAO,aAG9B6a,EAAsB,KACtBC,EAAkB,KAClBC,EAAe,EAAKC,gBAAgB9D,EAAMxgB,MAC9C,GAAIgkB,EAAgBK,GAAe,CACjC,IAAMJ,EAAWD,EAAgBK,GAC3BrhB,EAAO2P,GAAY6J,SAASyH,EAASM,KAAK,WAChDJ,EACE,wBACEzlB,MAAO,CAAEgP,WAAY,MAAO4E,SAAU,QAASP,WAAY,QAC3DzV,UAAU,eACVgV,QAAO,sBAAE,sBAAA7W,EAAA,sDAGHwpB,EAASO,WACXP,EAASO,YAAa,EAEtBP,EAASO,YAAa,EAExB,EAAKrlB,SAAS,EAAKN,OACnB,EAAK4lB,SATE,2CAHX,SAeGR,EAASO,WAAa,OAAtB,iBAAyCxhB,EAAzC,OAGL+gB,EAAoBE,EAASC,IAAI,WAAY,EAC7C,IAAIlO,EAASiO,EAASC,IAAI,SAI1B,GAHA1D,EAAM7C,YAAN,iDAA8D3H,GAC9DwK,EAAMyD,SAAWA,EAEbA,EAASO,WAAY,CACvB,IAAM1c,EAAG,aAAS0Y,EAAMxgB,KAAf,YAAuBqkB,GAC5BrO,EAASiO,EAASC,IAAI,SACtB3pB,EAAG,iDAA6Cyb,GACpDoO,EACE,cAAC,GAAD,CAAoBzL,cAAepe,GAAUuN,IAInDgc,EAAOtd,KAAK,CACVrL,KAAMqlB,EACNkE,QACE,sBAAKhmB,MAAO,CAAE2Z,aAAc,OAA5B,UACGuH,EADH,IACe,mBAAGte,KAAMkf,EAAMmE,WAAf,SAA4BnE,EAAMxgB,OADjD,IAC4DoR,EAAM,IAC/D8I,EACAiK,EACAC,IAJuC,aAAeve,MAlE/D,2BAAmD,IAbhB,8BAwFnC,MAAO,CAACie,EAAQC,K,4BAGlB,SAAea,GACb,OAAIA,EAAKC,QAEL,gCACE,qCACID,EAAKrB,KADT,KACiBqB,EAAK5kB,QACd,IACR,qCAAQ2S,GAAYiS,EAAKE,eAAzB,mBAJF,UAAaF,EAAKrB,KAAlB,YAA0BqB,EAAK/e,QAS/B,gCACE,oBAAGvE,KAAMsjB,EAAKrqB,IAAd,cACIqqB,EAAKrB,KADT,KACiBqB,EAAK5kB,QACjB,IACL,qCAAQ2S,GAAYiS,EAAKE,eAAzB,OACCF,EAAKG,QALR,UAAaH,EAAKrB,KAAlB,YAA0BqB,EAAK/e,U,mCAWrC,SAAsB0W,GACpB,IADyB,EACrBgF,EAAY,GADS,cAEOhF,EAAIgF,UAAUA,UAAU7gB,WAF/B,IAEzB,2BAAmE,CAAC,IAAD,0BAAvDmF,EAAuD,KAAhDoe,EAAgD,KAG7D1pB,EAAG,6BAAyBmB,KAAKG,MAAM2S,KAApC,YAA4C9S,KAAKG,MAAM4S,KAAvD,mBAAsE8N,EAAIqB,WAA1E,sBAAkGqG,EAASxW,IAC9GwW,EAASjkB,KAAKkF,WAAW,kBAG7Bqc,EAAU/a,KACR9K,KAAKspB,eAAe,CAClBzB,KAAM,MACN1d,MAAOA,EACP7F,KAAMikB,EAASjkB,KACf8kB,cAAeb,EAASa,cACxBvqB,IAAKA,EACLsqB,QAASZ,EAASY,YAhBC,8BAoBzB,OAAOtD,I,+BAGT,SAAkBhF,EAAKwH,GACrB,IAAIxC,EAAY,GAChB,GAAIhF,EAAIsF,aAAc,CAAC,IAAD,gBACYtF,EAAIsF,aAAanhB,WAD7B,IACpB,2BAA4D,CAAC,IAAD,0BAAhDmF,EAAgD,KAAzCoe,EAAyC,KAC1D,IAAIF,EAAoBE,EAASC,IAAI,UAArC,CAIA,IAAIlO,EAASiO,EAASC,IAAI,SACtB3pB,EAAG,iDAA6Cyb,GAEpDuL,EAAU/a,KACR9K,KAAKspB,eAAe,CAClBzB,KAAM,KACN1d,MAAOA,EACP7F,KAAMgW,EAAO/D,MAAM,KAAKvP,OAAO,GAC/BoiB,cAAetI,SAASyH,EAASM,KAAK,UACtChqB,IAAKA,EACLsqB,SAAS,OAhBK,+BAqBtB,OAAOtD,I,2BAGT,SAAcE,GACZ,GAAwB,IAApBA,EAASxgB,OACX,MAAO,UAET,IAJsB,EAIhBgkB,EAAS,CACblG,QAAS,EACTG,QAAS,EACTC,UAAW,EACXL,QAAS,GARW,cAUD2C,GAVC,IAUtB,2BAA+B,CAC7BwD,EAD6B,UACX,GAXE,8BAatB,OAAIA,EAAOlG,QAAU,EACZ,UAELkG,EAAO/F,QAAU+F,EAAO9F,YAAcsC,EAASxgB,OAC1C,UAELgkB,EAAOnG,UAAY2C,EAASxgB,OACvB,UAELgkB,EAAO/F,UAAYuC,EAASxgB,OACvB,UAEF,Y,0BAGT,SAAa2O,GAEX,IAFoB,IAAD,OACfsV,EAAQ,GADO,aAEd,2BAAO3Z,EAAP,KAAcpQ,EAAd,KACH,IAAKA,EAAKgqB,KACR,iBAEF,IAAIC,EAAa,EAAKvmB,MAAMiP,WAAW3G,SAASoE,GAC1CwF,EAAc,WACd,EAAKlS,MAAMiP,WAAW3G,SAASoE,GACjC,EAAK1M,MAAMiP,WAAWkD,IAAI,EAAKnS,MAAMiP,WAAW8F,QAAQrI,IAExD,EAAK1M,MAAMiP,WAAWtH,KAAK+E,GAE7B,EAAKpM,SAAS,EAAKN,QAGjBuS,EACF,cAAC,IAAD,CACE1S,MAAO,CAAE8S,OAAQ,WACjBF,QAASP,IAGTjP,EAAQ,GACRsjB,IACFhU,EACE,cAAC,IAAD,CACE1S,MAAO,CAAE8S,OAAQ,WACjBF,QAASP,IAGbjP,EAAQ3G,EAAK2G,OAEf,IAAIujB,EACF,cAACjO,GAAA,EAAD,UACE,eAACA,GAAA,EAAKE,KAAN,WACE,eAACF,GAAA,EAAKgB,MAAN,WACG7M,EADH,IACW6F,KAEVtP,MALM,cAAgByJ,GAS7B2Z,EAAM1e,KAAK,CAAErL,KAAM,CAAEgL,OAAQ,SAAWue,QAASW,KAxCnD,MAA4Bre,OAAOtG,QAAQkP,GAA3C,eAAoD,IA0CpD,OAAOsV,I,kCAGT,WAAwB,IAAD,OACrB,IACGxpB,KAAKmD,MAAMmQ,KACXtT,KAAKmD,MAAMmQ,GAAGgS,YACqB,IAApCtlB,KAAKmD,MAAMmQ,GAAGgS,WAAW/f,OAEzB,OAAO,KAET,IARqB,EAQjBa,EAAQ,GARS,cASQpG,KAAKmD,MAAMmQ,GAAGgS,YATtB,IASrB,2BAAuD,CAAC,IAAD,0BAA3CC,EAA2C,KAAtCpS,EAAsC,KACrD/M,EAAM0E,KACJ,yBAA2B6E,MAAO4V,EAAlC,UACGpS,EADH,KACcoS,EAAItE,UAAU,EAAG,GAD/B,oBAAoBsE,MAXH,8BAgBrB,IAAIlE,EAAU,KAQd,OAPIrhB,KAAKmD,MAAM8iB,mBACb5E,EACE,sBAAMre,MAAO,CAAEgP,WAAY,QAA3B,SACE,cAAC,GAAD,CAAMgF,KAAK,eAKf,sBAAKhU,MAAO,CAAE0T,OAAQ,OAAtB,UACE,+BACE,mBACE9Q,KAAI,oDAA+C5F,KAAKmD,MAAMwH,OAAO4a,KADvE,uBAMF,wBACEviB,MAAO,CACLgP,WAAY,OACZ4X,aAAc,OAEhBja,MAAO3P,KAAKmD,MAAMwhB,eAClBrU,SAAQ,uCAAE,WAAO/G,GAAP,SAAAxK,EAAA,6DACR,EAAK0E,SAAS,CAAEwiB,kBAAkB,IAClCrM,GAAc,WAAYrQ,EAAEiE,OAAOmC,OAF3B,SAGF,EAAKtM,OAAO,CAAEshB,eAAgBpb,EAAEiE,OAAOmC,QAHrC,2CAAF,sDANV,SAYGvJ,IAEFib,O,oBAKP,WACE,IAAIwD,EAAO,GACP3Q,EAAS,CACX,kBAAmB,GACnB,4BAA6B,GAC7B,qBAAsB,GACtB2V,OAAQ,GACR,kDAAmD,IAOrD,GALAve,OAAOtG,QAAQkP,GAAQtQ,SAAQ,SAACb,GAC9BA,EAAE,GAAG0mB,MAAO,EACZ1mB,EAAE,GAAGqD,MAAQ,MAGXpG,KAAKmD,MAAM0hB,KAAM,qBAGY7kB,KAAKmD,MAAM0hB,KAAK7f,WAH5B,IAGnB,2BAA0D,CAAC,IAAD,0BAA9C8kB,EAA8C,KAAnCjJ,EAAmC,KACxD,EAA0C7gB,KAAK+pB,aAC7ClJ,EAAIY,UAAUC,MACdb,EAAIsF,cAFN,oBAAO6D,EAAP,KAAmB3B,EAAnB,KAIMD,EAAS4B,EAAWpqB,KAAI,SAACmD,GAAD,OAAOA,EAAEimB,WAEnCnD,EAAY,GAGZhF,EAAIgF,iBAC0B7mB,IAA5B6hB,EAAIgF,UAAUA,UAChBA,EAAYA,EAAUoE,OAAOjqB,KAAKkqB,sBAAsBrJ,IAExDgF,EAAU/a,KACR,8BACE,kFADF,mBAAsB+V,EAAIqB,eAQhC2D,EAAYA,EAAUoE,OACpBjqB,KAAKmqB,kBAAkBtJ,EAAKwH,IAI9B,IAAI+B,EAAmB,wBACnBvE,EAAUtgB,OAAS,IACrB6kB,EACE,sBAAKpnB,MAAO,CAAEqL,QAAS,OAAvB,UACE,2CACCwX,MAKP,IAAIwE,EAAgB,wBAChBjC,EAAO7iB,OAAS,IAClB8kB,EAAgB,qBAAKrnB,MAAO,CAAEqL,QAAS,OAAvB,SAAiC+Z,KAInD,IAAMvY,EAAQgR,EAAIgB,YAAYD,SAAStd,KACjCqlB,EACJ,cAACjO,GAAA,EAAD,UACE,eAACA,GAAA,EAAKE,KAAN,CACE5Y,MAAO,CACLwN,gBACiB,YAAfqQ,EAAIpW,OAAuB,mBAAqB,MAHtD,UAME,cAACiR,GAAA,EAAKgB,MAAN,UACE,mBAAG9W,KAAMib,EAAIgB,YAAYhjB,IAAzB,SAA+BgR,MAEjC,gCACGwa,EACAD,SAZI,QAAUN,GAoBnBja,KAASqE,GACXA,EAAOrE,GAAO4Z,MAAO,EACjBzpB,KAAKmD,MAAMiP,WAAW3G,SAASoE,KACjCqE,EAAOrE,GAAO4Z,MAAO,EACrBvV,EAAOrE,GAAOzJ,MAAM0E,KAAK6e,KAI3B9E,EAAK/Z,KAAK,CAAErL,KAAMohB,EAAKmI,QAASW,KA7EjB,+BAoFrB9E,EAAOA,EAAKoF,OAAOjqB,KAAKsqB,aAAapW,IAErC,IAAImN,EAAU,KAOd,GANIrhB,KAAKmD,MAAMyhB,cACbvD,EAAU,oBAAGre,MAAO,CAAE4K,MAAO,OAAnB,cAA8B5N,KAAKmD,MAAMyhB,iBACzC5kB,KAAKmD,MAAMwH,SACrB0W,EAAU,0EAGRrhB,KAAKmD,MAAM4iB,SAAU,CAAC,IAAD,gBACF/lB,KAAKmD,MAAM4iB,UADT,IACvB,2BAA0C,CAAC,IAAhCtb,EAA+B,QACnCA,EAAO+X,UAAU/W,SAAS,0BAG/BhB,EAAOA,OAASA,EAAOtH,MACvB0hB,EAAK/Z,KAAK,CACRrL,KAAMgL,EACNue,QAAS,cAAC,GAAD,CAAmCve,OAAQA,GAAxBA,EAAOuV,aARhB,+BAazB,IAAIuK,EAAc,GAClB,SAASvgB,EAAIoG,GAAO,IAAD,gBACCyU,GADD,IACjB,2BAAwB,CAAC,IAAdhE,EAAa,QAClBA,EAAIphB,KAAKgL,SAAW2F,IACtByQ,EAAI2J,MAAO,EACXD,EAAYzf,KACV,qBAA+B9H,MAAO,CAAE2Z,aAAc,OAAtD,SACGkE,EAAImI,SADGnI,EAAIphB,KAAKyiB,eALR,+BAYnBlY,EAAI,WACJA,EAAI,SACJA,EAAI,WACJA,EAAI,WACJA,EAAI,SACJA,EAAI,WA1IG,oBA4IW6a,GA5IX,IA4IP,2BAAwB,CAAC,IAAdhE,EAAa,QACjBA,EAAI2J,MACPrW,QAAQ3U,MAAM,wBAAyBqhB,EAAIphB,KAAKgL,SA9I7C,8BAkJP,IAAMqT,EAAW+G,EAAKxf,QAAO,SAACwb,GAAD,MAA6B,YAApBA,EAAIphB,KAAKgL,UAC3CggB,EAAS,KAeb,OAdI3M,EAASvY,OAAS,IACpBklB,EACE,cAAC,GAAD,CACE3X,KAAM9S,KAAKG,MAAM2S,KACjBC,KAAM/S,KAAKG,MAAM4S,KACjB+K,SAAUA,KAKZ9d,KAAKmD,MAAM0hB,MAA+B,IAAvB0F,EAAYhlB,SACjCglB,EAAc,mBAAGvnB,MAAO,CAAEqT,WAAY,QAAxB,4BAId,gCACGrW,KAAK0qB,cACL1qB,KAAK2qB,aACL3qB,KAAK4qB,aACLvJ,EAEArhB,KAAK6qB,yBACL7qB,KAAK8qB,uBACLL,EACD,8BAAMF,W,GA/8ByBrkB,a,iBC3KlB6kB,G,kDACnB,WAAY5qB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,GAFI,E,qDAKnB,WACEnD,KAAKqD,W,2BAGP,SAAc2nB,GACZ,IADsB,EAClBC,EAAS,CAAC,UAAW,UAAW,UAAW,UACzCC,EAAa,GACbC,EAAoB,GAEpBC,EAAa,SAACC,EAAUC,GAC5BJ,EAAWG,IAAY,EACvBH,EAAWI,IAAY,EAClBH,EAAkBE,KACrBF,EAAkBE,GAAY,IAE3BF,EAAkBE,GAAUC,KAC/BH,EAAkBE,GAAUC,GAAY,GAE1CH,EAAkBE,GAAUC,IAAa,GAdrB,cAiBHN,GAjBG,IAiBtB,2BAA6B,CAAC,IAAnB9gB,EAAkB,QACvB4T,EAAW,GACf,IAAK,IAAMzT,KAAYH,EAAKyF,MAAO,CACjC,IAAM7O,EAAMoJ,EAAKyF,MAAMtF,GACnBvJ,EAAI2J,SAA0C,IAAhCwgB,EAAO/S,QAAQpX,EAAI2J,SACnCqT,EAAShT,KAAKT,GAIlB,cAAuByT,EAAvB,eAAiC,CAA5B,IAA4B,EAAtBuN,EAAQ,KAAc,cACRvN,GADQ,IAC/B,2BAAiC,CAC/BsN,EAAWC,EADoB,UADF,iCA1Bb,8BAiCtB,IAjCsB,EAiChBE,EAAYjgB,OAAOC,KAAK2f,GAAYjmB,OAEpCumB,EAAa,GAnCG,cAoCFD,GApCE,IAoCtB,2BAA+B,CAAC,IAAD,EAApBE,EAAoB,QACvBC,EAAM,GADiB,cAETH,GAFS,IAE7B,2BAA+B,CAAC,IAArBI,EAAoB,QACzBR,EAAkBM,IAAUN,EAAkBM,GAAOE,GACvDD,EAAI5gB,KAAKqgB,EAAkBM,GAAOE,IAElCD,EAAI5gB,KAAK,IANgB,8BAS7B0gB,EAAW1gB,KAAK4gB,IA7CI,8BAgDtB,MAAO,CAACH,EAAWC,K,2DAGrB,gCAAAzsB,EAAA,6DACQwgB,EAAO,mDADf,KAGelX,KAHf,SAIY6Q,MAAM,GAAD,OAAIqG,EAAJ,eAAuB,CAAEqM,MAAO,aAAcxsB,MAAK,SAACL,GAAD,OAC5DA,EAAEiY,UALV,oCAGoB1O,MAHpB,gBAEQ7I,EAFR,CAGIosB,UAHJ,MASQ3F,EAAWzmB,EAAKosB,UAAUjsB,KAAI,SAACkB,GACnC,OAAOoY,MAAM,GAAD,OAAIqG,EAAJ,YAAYze,EAAIiR,GAAhB,UAA2B3S,MAAK,SAACE,GAAD,OAAOA,EAAE+Z,aAVzD,KAY4BrZ,KAZ5B,UAaU8Y,QAAQgT,WAAW5F,GAb7B,oBAYElmB,KAAKmD,MAAM4oB,aAZb,KAYiCC,cAZjC,gBAeEhsB,KAAKyD,SAAShE,GAfhB,iD,mFAkBA,SAAgBsgB,EAAOkM,EAAwB3L,GAC7C,IAAQ4L,EAAe5L,EAAf4L,WACR,EAAanM,EAAMtgB,KAAK,GAAG0sB,MAAM5V,MAAM,MAAvC,oBAAKxX,EAAL,KAAQ0G,EAAR,KACA,MAAM,oDAAN,OAGcymB,EAHd,iQAUUntB,EAVV,6CAYU0G,EAZV,4XAmB+Dsa,EAAMtgB,KAAK,GAAGmO,MAnB7E,oEAoB+CmS,EAAMtgB,KAAK,GAAGkQ,MApB7D,4F,gCA4BF,WACE,GAAK3P,KAAKmD,MAAM4oB,aAAhB,CAIA,IAAMK,EAAKC,SAASC,eAAe,oBACnC,eAAqCtsB,KAAKmD,MAAM4oB,aAAhD,GAAKR,EAAL,KAAgBJ,EAAhB,KACAiB,EAAGG,UAAY,GACf,IAAMztB,EAAU,CACd0tB,iBAAiB,EACjBC,MAAO,CACLN,MAAO,CACLO,UAAW,SAAC3tB,EAAG0G,GAAJ,MAAU,MAGzBknB,MAAO,CACLR,MAAO,CACLO,UAAW,SAAC3tB,EAAG0G,GAAJ,MAAU,MAGzBmnB,QAAS,CACPC,SAAU7sB,KAAK8sB,kBAGfrtB,EAAO,CACTstB,WAAY,CACVhqB,EAAGwoB,EACHliB,EAAGkiB,GAELyB,OAAQ7B,GAEV8B,KAAMC,aAAa,CAAEd,KAAI3sB,OAAMX,e,oBAGjC,WACE,OACE,gCACE,qDACA,qBACEiT,GAAG,mBACH/O,MAAO,CAAEkE,MAAO,QAASiJ,OAAQ,kB,GAtJQjK,aCA9BinB,G,kDACnB,WAAYhtB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,GAFI,E,qDAInB,WACEnD,KAAKqD,W,2DAEP,4BAAAtE,EAAA,kEAEsBsJ,KAFtB,SAGY6Q,MACJ,2DACA,CAAE0S,MAAO,aACTxsB,MAAK,SAACL,GAAD,OAAOA,EAAEiY,UANtB,6BAE2B1O,MAF3B,gBACQ7I,EADR,CAEI2tB,iBAFJ,MASEptB,KAAKyD,SAAShE,GAThB,gD,sFAYA,WACE,GAAKO,KAAKmD,MAAMiqB,iBAAhB,CAOA,IAJA,IAAMJ,EAAS,CACbK,MAAO,IAEL9hB,EAAO,CAAC,cAAe,SAAU,WACrC,MAAkBA,EAAlB,eAAwB,CACtByhB,EADY,MACE,GAEhBhtB,KAAKmD,MAAMiqB,iBAAiBnoB,MAAK,SAAClG,EAAG0G,GACnC,OAAO1G,EAAEuuB,aAAe7nB,EAAE6nB,gBAZT,oBAcAttB,KAAKmD,MAAMiqB,kBAdX,IAcnB,2BAAgD,CAAC,IAAtCnX,EAAqC,QAC9C+W,EAAOK,MAAMviB,KAAK,IAAIpK,KAAyB,IAApBuV,EAAKqX,cAAqBlsB,kBADP,oBAE5BmK,GAF4B,IAE9C,2BAAwB,CAAC,IAAda,EAAa,QACtB4gB,EAAO5gB,GAAKtB,KAAKmL,EAAK7J,IAAQ,IAHc,gCAd7B,8BAqBnB,IADA,IAAMmhB,EAAc,GACpB,MAAkBhiB,EAAlB,eAAwB,CAAnB,IAAMa,EAAG,KACZmhB,EAAYziB,KAAK,CACfxG,KAAM8H,EACN3M,KAAMutB,EAAO5gB,KAGjB,IAAM3M,EAAO,CACXstB,WAAYC,EAAOK,MACnBL,OAAQO,GAGJnB,EAAKC,SAASC,eAAe,SACnCF,EAAGG,UAAY,GAEfU,KAAMO,UAAU,CAAEpB,KAAI3sB,OAAMX,QADZ,Q,oBAIlB,WACE,OACE,gCACE,uDACA,qBAAKiT,GAAG,QAAQ/O,MAAO,CAAEkE,MAAO,QAASiJ,OAAQ,kB,GA9DPjK,aCC5CunB,GACG,UADHA,GAEI,UAFJA,GAGC,UAHDA,GAIE,UAJFA,GAKG,mBAGHC,G,kDACJ,WAAYvtB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXwqB,MAAO,IAET,EAAKC,OAAS5S,IAAMC,YALH,E,qDAQnB,WACEjb,KAAKqD,W,gCAGP,WACE,IAEMwqB,EAFM7tB,KAAK4tB,OAAO/S,QAERiT,WAAW,MAC3BD,EAAIE,YACJ,IALmB,EAKbC,EAAS,CACbC,QAASR,GACTrS,QAASqS,GACTjuB,MAAOiuB,GACPS,QAAST,GACTU,UAAWV,GACXW,QAASX,GACTY,OAAQZ,GACRa,QAASb,IAbQ,cAeSztB,KAAKmD,MAAM4iB,SAAS/gB,WAf7B,IAenB,2BAA2D,CAAC,IAAD,4BAA/CjC,EAA+C,KAA5CgjB,EAA4C,mBAC/BA,EAAS/gB,WADsB,IACzD,2BAA8C,CAAC,IAAD,0BAAlCqE,EAAkC,KAA/BoB,EAA+B,KACtC8jB,EAAOP,EAAOvjB,GACf8jB,GACHpa,QAAQ3U,MAAM,UAAWiL,GAE3BojB,EAAIW,UAAYD,EAChBV,EAAIY,SAASplB,EAAGtG,EAAG,EAAG,IAPiC,gCAfxC,iC,2DA2BrB,oEAAAhE,EAAA,6DACQF,EADR,uDAC8DmB,KAAKG,MAAM2S,KADzE,YACiF9S,KAAKG,MAAM4S,KAD5F,YACoG/S,KAAKG,MAAMkZ,MAD/G,SAEqBH,MAAMra,GAF3B,cAEQ6vB,EAFR,gBAGqBA,EAAKrV,OAH1B,OAGQ5Z,EAHR,OAIM+U,EAAW,GACXma,EAAS,GALf,cAMuBlvB,GANvB,IAME,2BAA2B,CAAhBkL,EAAgB,QACrBikB,EAAa,GADQ,cAEPjkB,EAAOT,MAFA,IAEzB,2BAAWpJ,EAAoB,QAC7B0T,EAAS1T,EAAIwD,OAAQ,EACrBsqB,EAAW9tB,EAAIwD,MAAQxD,EAJA,8BAMzB6tB,EAAO7jB,KAAK8jB,IAZhB,8BAiBE,KAHApa,EAAWlJ,OAAOC,KAAKiJ,IACdvP,OACL8gB,EAAW,GACf,MAAqB4I,EAArB,eAA6B,CAAlBhkB,EAAkB,KACvBkkB,EAAiB,GADM,cAELra,GAFK,IAE3B,2BAAW1M,EAAqB,QAC1B2C,EAAS,UACTE,EAAO7C,KACT2C,EAASE,EAAO7C,GAAS2C,QAE3BokB,EAAe/jB,KAAKL,GAPK,8BAS3Bsb,EAASjb,KAAK+jB,GAEhB7uB,KAAKyD,SAAS,CAAEsiB,SAAUA,IA5B5B,iD,0EA+BA,WACE,IAAI6H,EAAS,KAUb,OATI5tB,KAAKmD,MAAM4iB,UAAY/lB,KAAKmD,MAAM4iB,SAASxgB,OAAS,IACtDqoB,EACE,wBACEzd,OAAO,MACPjJ,MAAOlH,KAAKmD,MAAM4iB,SAAS,GAAGxgB,OAC9BuW,IAAK9b,KAAK4tB,UAKd,sBACE5qB,MAAO,CACLqf,OAAQ,oBACRuH,aAAc,MACdvb,QAAS,OACTqI,OAAQ,MACRI,QAAS,OACTgY,iBAAkB,WAClBloB,UAAW,UARf,UAWE,iCACE,oBAAGhB,KAAI,6BAAwB5F,KAAKG,MAAM2S,KAAnC,YAA2C9S,KAAKG,MAAM4S,MAA7D,UACG/S,KAAKG,MAAM2S,KADd,IACqB9S,KAAKG,MAAM4S,QAEhC,mBACE/P,MAAO,CAAEgP,WAAY,OACrBpM,KAAI,cAAS5F,KAAKG,MAAM2S,KAApB,YAA4B9S,KAAKG,MAAM4S,KAAvC,YAA+C/S,KAAKG,MAAMoS,QAFhE,SAIGvS,KAAKG,MAAMoS,YAGhB,8BACE,mBACE3M,KAAI,cAAS5F,KAAKG,MAAM2S,KAApB,YAA4B9S,KAAKG,MAAM4S,KAAvC,YAA+C/S,KAAKG,MAAMoS,QADhE,SAGGqb,a,GA7Ge1nB,aAqHP6oB,G,kDACnB,WAAY5uB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXwqB,MAAO,IAHQ,E,qDAOnB,WACE3tB,KAAKqD,W,iEAGP,WAAmBiX,GAAnB,qBAAAvb,EAAA,sEACqBsb,GAAGC,EAAQ,oBADhC,cACMva,EADN,OAEMqG,EAAQ,GACRrG,EAAOumB,iBAAiB0I,iBACtBC,EAAUlvB,EAAOumB,iBAAiB0I,eAClChX,MAAMC,QAAQgX,GAChB7oB,EAAQA,EAAM6jB,OAAOgF,EAAQrvB,KAAI,SAACqW,GAAD,OAAUA,EAAKuQ,OAAOlO,gBAEvDlS,EAAM0E,KAAKmkB,EAAQzI,OAAOlO,cAG1BvY,EAAOumB,iBAAiB4I,WACtBrS,EAAQ9c,EAAOumB,iBAAiB4I,SAChClX,MAAMC,QAAQ4E,GAChBzW,EAAQA,EAAM6jB,OAAOpN,EAAMjd,KAAI,SAACqW,GAAD,OAAUA,EAAKuS,IAAIlQ,gBAGlDlS,EAAM0E,KAAK+R,EAAM2L,IAAIlQ,cAjB3B,kBAoBSlS,GApBT,2C,kHAuBA,uCAAArH,EAAA,sEAEsBiB,KAAKmvB,aAAa,OAFxC,cAEQC,EAFR,OAGQlJ,EAAWkJ,EAAMxvB,KAAI,SAACkT,GAC1B,OAAO,sBAAC,4BAAA/T,EAAA,sEACiB,EAAKowB,aAAarc,GADnC,cACAsT,EADA,gBAGOtN,QAAQhZ,IACnBsmB,EAASxmB,KAAI,SAACmT,GAAD,OAAU,EAAKoc,aAAapc,OAJrC,kFAAD,MAJX,SAYoB+F,QAAQhZ,IAAIomB,GAZhC,OAYMyH,EAZN,OAaE3tB,KAAKyD,SAAS,CAAEkqB,MAAOA,EAAM0B,SAb/B,gD,0EAgBA,WACE,IADO,EACHC,EAAW,GADR,cAEYtvB,KAAKmD,MAAMwqB,OAFvB,IAEP,2BAAqC,CAAC,IAAD,EAA1B5a,EAA0B,QAC7BvE,EAAQuE,EAAK,GAAGvE,MAAM,oBACtBsE,EAAOtE,EAAM,GACb+gB,EAAW/gB,EAAM,GAHY,cAIduE,GAJc,IAInC,2BAA2B,CAAC,IACpByc,EADmB,QACEhhB,MAAM,oBAC3BihB,EAAaD,EAAY,GAC5BzuB,QAAQ,IAAK,KACbA,QAAQ,QAAS,IACpBuuB,EAASxkB,KACP,cAAC,GAAD,CAEEgI,KAAMA,EACNC,KAAMwc,EACNhd,OAAQkd,EACRpW,KAAMmW,EAAY,IALpB,iBACiBD,EADjB,YAC6BE,MAXE,gCAF9B,8BAsBP,OACE,gCACE,yDACA,gFACkD,IAChD,cAAC,IAAD,CAEEzhB,QAAQ,8FACRC,gBAAiB,EACjBC,UAAU,WACVC,qBAAsB,CAAEmI,YAAY,GALtC,SAOE,sBAAMtT,MAAO,CAAE4K,MAAO,UAAWkI,OAAQ,WAAzC,SACE,cAAC,IAAD,OAPE,WAWR,qBAAK9S,MAAO,CAAE8T,QAAS,OAAQ4Y,SAAU,QAAzC,SAAoDJ,W,GA1FhBppB,aC9HvBypB,G,kDACnB,WAAYxvB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXysB,WAAY1nB,aAAaC,QAAQ,WAHlB,E,qDAMnB,WACEnI,KAAKqD,W,2DAGP,oCAAAtE,EAAA,yDACMF,EAAM,IAAIgxB,IAAIvd,OAAOyH,SAASnU,MAC9BkqB,EAAOjxB,EAAIkxB,aAAa7wB,IAAI,QAFlC,wDAMEc,KAAKmD,MAAM2sB,KAAOA,EACdE,EAAW,0DAPjB,SAQqB9W,MAAM,GAAD,OArBR,2BAqBQ,yBAAgC4W,IACrD1wB,MAAK,SAACE,GAAD,OAAOA,EAAE+Z,UACd9Z,OAAM,SAACC,GAGN,OAFAwwB,EACE,sDAAwDxwB,EACnD,CAAEkgB,MAAO,SAbtB,QAQM3f,EARN,QAec2f,OAGVxX,aAAac,QAAQ,SAAUjJ,EAAO2f,OACtC1f,KAAKmD,MAAMysB,UAAW,GAHtBK,MAAMD,GAKRhwB,KAAKyD,SAASzD,KAAKmD,QAIb+sB,EAAehoB,aAAaC,QAAQ,oBAExCD,aAAaioB,WAAW,iBACpBD,IAAiB5d,OAAOyH,SAASnU,OACnC0M,OAAOyH,SAASnU,KAAOsqB,IA7B7B,iD,0EAkCA,WAEE,OADsBhoB,aAAaC,QAAQ,UAGvC,qBAAKnF,MAAO,CAAE8T,QAAS,UAAvB,SACE,mBAAGlR,KAAK,iBAAR,uBAID5F,KAAKmD,MAAM2sB,KAUd,8BACE,6CATA,sBAAK9sB,MAAO,CAAE8T,QAAS,UAAvB,UACE,mBAAGlR,KAAK,4FAAR,oBAEK,W,GA3D8BM,a,ICiBxBwe,G,kDACnB,WAAYvkB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXitB,KAAM,IAHS,E,qDAOnB,WACEpwB,KAAKqD,W,2DAGP,4BAAAtE,EAAA,yDACOmJ,aAAaC,QAAQ,UAD5B,uBAIIgM,QAAQqK,IAAI,mCAJhB,0CAOyBhF,GAAOE,YAnC1B,yRA4BN,YAOQra,EAPR,QAQeia,OARf,wBASInF,QAAQ3U,MAAM,wBACd2U,QAAQ3U,MAAMH,GAVlB,2BAaEW,KAAKmD,MAAMitB,KAAO/wB,EAASI,KAAKua,OAAO0H,MAEvC1hB,KAAKyD,SAASzD,KAAKmD,OAfrB,iD,6EAkBA,SAAUktB,GACR,OACE,sBAAKzvB,UAAU,SAAf,UACE,mBAAGgF,KAAK,kEAAR,kBAEK,IACJyqB,EAAMxgB,MAJT,KAIiB,oBAAGjK,KAAMyqB,EAAMxxB,IAAf,cAAsBwxB,EAAMvgB,UAJ7C,S,oBASJ,WACE,IAAKwC,OAAOyH,SAASnU,KAAK6F,SAAS,mBACjC,OAAO,KAET,IAJO,EAID6kB,EAAetwB,KAAKmD,MAAMitB,KAC1BG,EAAe,GALd,cAMoBD,EAAatrB,WANjC,IAMP,2BAAmD,CAAC,IAAD,0BAAvCmF,EAAuC,KAAhCqmB,EAAgC,KACjDD,EAAazlB,KAAK,8BAA2B9K,KAAKywB,UAAUD,IAA1C,cAAiBrmB,MAP9B,8BAUP,OAAO,8BAAMomB,Q,GAnDsBrqB,a,kBChBlBwqB,G,kDACnB,WAAYvwB,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,MAAQ,CACXwtB,UAAU,GAHK,E,0CAOnB,WACE,IAAIC,EAAO,KAIX,OAHI5wB,KAAKmD,MAAMwtB,WACbC,EAAO,MAGP,sBAAKhwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKoC,MAAO,CAAE8T,QAAS,UAAvB,UACE,mBAAG9T,MAAO,CAAEqT,WAAY,QAAUzQ,KAAK,0BAAvC,wBAGA,oBAAI5C,MAAO,CAAE8T,QAAS,UAAYlW,UAAU,OAA5C,SACG,CAAC,WAAWhB,KAAI,SAAC2J,GAAD,OACf,cAAC,WAAD,UACG,CAAC,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAQ3J,KAC/C,SAAC2S,GAAD,OACE,6BACE,cAAC,KAAD,CAAMse,GAAE,yBAAoBte,EAAO2D,eAAnC,SACG3D,KAFL,UAAYA,QAHHhJ,WA8BrB,qBACEvG,MAAO,CACL8T,QAAS,SACT9E,WAAY,OACZ+E,YAAa,OAJjB,SAOE,qBAAI/T,MAAO,CAAE2Z,aAAc,KAAO/b,UAAU,OAA5C,UACE,6BACE,mBAAGgF,KAAK,gEAAR,oBAIF,6BACE,mBAAGA,KAAK,wHAAR,wBAIF,6BACE,cAAC,GAAD,MAEF,6BACE,mBACE5C,MAAO,CAAE4K,MAAO,SAChBhI,KAAK,4CAFP,SAIE,cAAC,KAAD,gBAMTgrB,S,GApF0B1qB,a,SC2I7B4qB,GAAS,kBACb,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,CAAcvwB,SAAU,MACxB,cAAC,EAAD,CAAiBA,SAAU,UAIzBwwB,GAAuB,WAC3B,OAAO,cAAC,GAAD,KAGHC,GAAe,WAGnB,OAFA9oB,aAAaioB,WAAW,UACxBhc,QAAQqK,IAAI,cACL,cAAC,KAAD,CAAUqS,GAAG,OAGhBI,GAAQ,SAAC,GAAe,IAAbziB,EAAY,EAAZA,MAETwK,EAAQ,IAAIc,gBAAgBxH,OAAOyH,SAASC,QAClD,OACE,cAAC,EAAD,CACEzZ,SAAU,IACVO,IAAK0N,EAAM3P,IAAIkC,QAAQ,aAAc,IACrCsK,KAAM2N,EAAM9Z,IAAI,WAKhBgyB,GAAS,SAAC,GAAe,IAAb1iB,EAAY,EAAZA,MAEVwK,EAAQ,IAAIc,gBAAgBxH,OAAOyH,SAASC,QAClD,OACE,cAAC,EAAD,CACEzZ,SAAU,IACVO,IAAK0N,EAAM3P,IAAIkC,QAAQ,cAAe,IACtCsK,KAAM2N,EAAM9Z,IAAI,WAKhBiyB,GAAgB,SAAC,GAAe,IAAb3iB,EAAY,EAAZA,MACvB,OAAO,kDAAqBA,EAAM3P,QAG9BuyB,GAAa,SAAbA,EAAc,GAAD,IAAG5iB,EAAH,EAAGA,MAAH,OACjB,eAAC,WAAD,WACE,cAAC,KAAD,CAAO6iB,OAAK,EAACC,KAAM9iB,EAAM3P,IAAK0yB,UAAWN,KACzC,cAAC,KAAD,CAAOK,KAAI,UAAK9iB,EAAM3P,IAAX,aAA2B0yB,UAAWH,QAI/CI,GAAc,SAAdA,EAAe,GAAD,IAAGhjB,EAAH,EAAGA,MAAH,OAClB,eAAC,WAAD,WACE,cAAC,KAAD,CAAO6iB,OAAK,EAACC,KAAM9iB,EAAM3P,IAAK0yB,UAAWL,KACzC,cAAC,KAAD,CAAOI,KAAI,UAAK9iB,EAAM3P,IAAX,aAA2B0yB,UAAWC,QAItCC,GAxLH,kBACV,cAAC,KAAD,CAAQC,SAAS,WAAjB,SACE,sBAAK9wB,UAAU,MAAf,UACE,cAAC,GAAD,IACA,sBAAKoC,MAAO,CAAE0T,OAAQ,KAAO9V,UAAU,YAAvC,UACE,cAAC,GAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,CAAO0wB,KAAK,SAASC,UAAWH,KAChC,cAAC,KAAD,CAAOE,KAAK,UAAUC,UAAWC,KACjC,cAAC,KAAD,CACEF,KAAK,4BACLvI,OAAQ,SAAC5oB,GACP,OAAO,cAAC,KAAD,CAAU0wB,GAAE,cAAS1wB,EAAMqO,MAAMrP,OAAOwyB,cAGnD,cAAC,KAAD,CACEL,KAAK,sCACLvI,OAAQ,SAAC5oB,GACP,OAAO,cAAC,KAAD,CAAU0wB,GAAE,kBAAa1wB,EAAMqO,MAAMrP,OAAOwyB,cAGvD,cAAC,KAAD,CACEL,KAAK,8BACLvI,OAAQ,SAAC5oB,GACP,OAAO,cAAC,KAAD,CAAU0wB,GAAE,kBAAa1wB,EAAMqO,MAAMrP,OAAOwyB,cAGvD,cAAC,KAAD,CACEL,KAAK,2BACLvI,OAAQ,SAAC5oB,GACP,IAAM6Y,EAAQ,IAAIc,gBAAgBxH,OAAOyH,SAASC,QAC5C7a,EAASgB,EAAMqO,MAAMrP,OAC3B,OACE,cAAC,GAAD,CACEoB,SAAU,IACVwS,KAAM5T,EAAO4T,KACbD,KAAM3T,EAAO2T,KACbP,OAAQpT,EAAOoT,OACfb,cAAesH,EAAM9Z,IAAI,oBAKjC,cAAC,KAAD,CACEoyB,KAAK,YACLvI,OAAQ,WACN,OAAO,cAAC,GAAD,OAGX,cAAC,KAAD,CACEuI,KAAK,0BACLvI,OAAQ,SAAC5oB,GACP,IAAMhB,EAASgB,EAAMqO,MAAMrP,OAC3B,OACE,cAAC,GAAD,CACEkU,UAAWlU,EAAO2Q,OAClBgD,KAAM3T,EAAO2T,KACbC,KAAM5T,EAAO4T,UAKrB,cAAC,KAAD,CACEue,KAAK,cACLvI,OAAQ,SAAC5oB,GACP,OACE,cAAC,KAAD,CAAU0wB,GAAE,yBAAoB1wB,EAAMqO,MAAMrP,OAAO2Q,aAIzD,cAAC,KAAD,CACEwhB,KAAK,8BACLvI,OAAQ,SAAC5oB,GACP,IAAMhB,EAASgB,EAAMqO,MAAMrP,OAC3B,OACE,cAAC,GAAD,CACEumB,YAAavmB,EAAOwL,OACpBmI,KAAM3T,EAAO2T,KACbC,KAAM5T,EAAO4T,UAKrB,cAAC,KAAD,CACEue,KAAK,kBACLvI,OAAQ,SAAC5oB,GACP,OACE,cAAC,KAAD,CACE0wB,GAAE,6BAAwB1wB,EAAMqO,MAAMrP,OAAOwL,aAKrD,cAAC,KAAD,CAAO2mB,KAAK,iBAAiBC,UAAWP,KACxC,cAAC,KAAD,CAAOM,KAAK,oBAAoBC,UAAWR,KAC3C,cAAC,KAAD,CAAOO,KAAK,UAAUC,UAAWT,KACjC,cAAC,KAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,KAAD,CAAUT,GAAG,0BAEf,cAAC,KAAD,CAAOS,KAAK,IAAID,OAAO,EAAME,UAAWJ,iBCnHlDS,IAAS7I,OAAO,cAAC,GAAD,IAASsD,SAASC,eAAe,U,iBCVjDuF,EAAOC,QAAU,CACf5d,OAAQ,K","file":"static/js/main.fcc39dc8.chunk.js","sourcesContent":["// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport axios from \"axios\";\n\nexport class Jenkins {\n  url(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s + \"/api/json\";\n  }\n  link(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s;\n  }\n\n  async get(url, options) {\n    if (options === undefined) options = {};\n    var r;\n    await axios\n      .get(url, { params: options })\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.data;\n    } else {\n      return null;\n    }\n  }\n\n  async batch_get(urls, options) {\n    if (options === undefined) options = {};\n    let r;\n    let requests = urls.map((url) => {\n      return axios.get(url, { params: options }).then(\n        (response) => ({ response }),\n        (err) => ({ err })\n      );\n    });\n\n    await axios\n      .all(requests)\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.map((result) => {\n        if (result.response) {\n          return result.response.data;\n        }\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async computer(options) {\n    return this.get(this.url(\"computer\"), options);\n  }\n  async queue(options) {\n    return this.get(this.url(\"queue\"), options);\n  }\n  async job(v, options) {\n    return this.get(this.url(\"job/\" + v), options);\n  }\n}\n\nconst jenkins = new Jenkins();\nexport default jenkins;\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Fragment } from \"react\";\n\nexport default function AsOf(props) {\n  const updateStatus =\n    props.currentTime - props.updateTime > props.interval ? (\n      \"disconnected\"\n    ) : (\n      <Fragment>connected in {props.connectedIn}ms</Fragment>\n    );\n  const timeString =\n    props.updateTime - new Date(0) === 0 ? (\n      <Fragment>pending</Fragment>\n    ) : (\n      <Fragment>\n        as of {props.updateTime.toLocaleTimeString()}; {updateStatus}\n      </Fragment>\n    );\n  return <span className={updateStatus}>({timeString})</span>;\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nexport function summarize_job(job) {\n  return job\n    .replace(/^pytorch-/, \"\")\n    .replace(/-trigger$/, \"\")\n    .replace(/^private\\//, \"\")\n    .replace(/^ccache-cleanup-/, \"\")\n    .replace(/_ci\\/circleci: /, \"\")\n    .replace(/AAA_/, \"\");\n}\n\nexport function summarize_date(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  if (today.toLocaleDateString() === date.toLocaleDateString()) {\n    return date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n  } else {\n    return date.toLocaleString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      weekday: \"short\",\n    });\n  }\n}\n\n// https://stackoverflow.com/questions/6312993/javascript-seconds-to-time-string-with-format-hhmmss\nexport function seconds2time(seconds) {\n  let hours = Math.floor(seconds / 3600);\n  let minutes = Math.floor((seconds - hours * 3600) / 60);\n  seconds = seconds - hours * 3600 - minutes * 60;\n  let time = \"\";\n\n  if (hours !== 0) {\n    time = hours + \":\";\n  }\n  if (minutes !== 0 || time !== \"\") {\n    minutes = minutes < 10 && time !== \"\" ? \"0\" + minutes : String(minutes);\n    time += minutes + \":\";\n  }\n  if (time === \"\") {\n    time = seconds + \"s\";\n  } else {\n    time += seconds < 10 ? \"0\" + seconds : String(seconds);\n  }\n  return time;\n}\n\nexport function summarize_ago(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  return seconds2time(Math.floor((today - date) / 1000));\n}\n\nexport function summarize_project(project) {\n  return project.replace(/-builds$/, \"\");\n}\n\nexport function summarize_url(url) {\n  let m;\n  if (\n    (m = RegExp(\n      \"^https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/job/([^/]+)/\"\n    ).exec(url)) !== null\n  ) {\n    return summarize_project(m[1]) + \"/\" + summarize_job(m[2]);\n  }\n  if (\n    (m = RegExp(\"https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/\").exec(\n      url\n    )) !== null\n  ) {\n    return m[1];\n  }\n  return url;\n}\n\n// Last updated 2018-03-01\nexport const centsPerHour = {\n  \"linux-cpu\": 17, // c5.xlarge\n  \"linux-bigcpu\": 68, // c5.4xlarge\n  \"linux-gpu\": 228, // g3.8xlarge\n  \"linux-tc-gpu\": 228, // g3.8xlarge\n  \"linux-multigpu\": 456, // g3.16xlarge\n  \"linux-cpu-ccache\": 17, // c5.xlarge\n  \"win-cpu\": 34, // c5.2xlarge\n  \"win-gpu\": 114, // g3.4xlarge\n  osx: 13900 / 30 / 24, // MacStadium mini i7 250 elite\n  master: 17, // c5.xlarge\n  packet: 40, // ???? Packet server ???\n  rocm: 0, // we don't pay for it\n  \"tc-gpu\": 114, // g3.4xlarge\n};\n\nexport function centsToDollars(x) {\n  if (x === undefined) return \"?\";\n  // I feel a little dirty resorting to floating point math\n  // here...\n  return (x / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_ago,\n  summarize_url,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\n\nexport default class ComputerDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      computer: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.computer({\n      tree: `computer[\n                offline,\n                idle,\n                displayName,\n                assignedLabels[name],\n                executors[\n                  currentExecutable[\n                    timestamp,\n                    estimatedDuration,\n                    url,\n                    building\n                  ],\n                  idle\n                ]\n              ]`.replace(/\\s+/g, \"\"),\n    });\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function classify_node(n) {\n      const node = n.displayName;\n      if (/^c5.xlarge-i-.*$/.test(node)) {\n        return \"linux-cpu\";\n      }\n      if (/^c5.4xlarge-i-.*$/.test(node)) {\n        return \"linux-bigcpu\";\n      }\n      if (/^g3.8xlarge-i-.*$/.test(node)) {\n        if (n.assignedLabels.some((l) => l.name === \"tc_gpu\")) {\n          return \"linux-tc-gpu\";\n        } else {\n          return \"linux-gpu\";\n        }\n      }\n      if (/^g3.16xlarge-i-.*$/.test(node)) {\n        return \"linux-multigpu\";\n      }\n      if (/^worker-c5-xlarge-.*$/.test(node)) {\n        return \"linux-cpu-ccache\";\n      }\n      if (/^worker-macos-high-sierra-.*$/.test(node)) {\n        return \"osx\";\n      }\n      if (/^worker-win-c5.2xlarge-i-.*$/.test(node)) {\n        return \"win-cpu\";\n      }\n      if (/^worker-win-g3.4xlarge-i-.*$/.test(node)) {\n        return \"win-gpu\";\n      }\n      if (/^worker-osuosl-ppc64le-cpu-.*$/.test(node)) {\n        return \"ppc\";\n      }\n      if (/^worker-packet-type-1-.*$/.test(node)) {\n        return \"packet\";\n      }\n      if (/^jenkins-worker-rocm-.*$/.test(node)) {\n        return \"rocm\";\n      }\n      if (/^worker-g3-4xlarge-.*$/.test(node)) {\n        return \"tc-gpu\";\n      }\n      return node;\n    }\n\n    const map = new Map();\n    this.state.computer.forEach((c) => {\n      const k = classify_node(c);\n      let v = map.get(k);\n      if (v === undefined) v = { busy: 0, total: 0 };\n      if (!c.offline) {\n        v.total++;\n        if (!c.idle) v.busy++;\n      }\n      map.set(k, v);\n    });\n\n    let totalCost = 0;\n    map.forEach((v, k) => {\n      const perCost = centsPerHour[k];\n      if (perCost !== undefined) {\n        v.totalCost = perCost * v.total;\n        totalCost += v.totalCost;\n      }\n    });\n\n    const rows = [...map.entries()].sort().map((kv) => {\n      const cost = centsToDollars(kv[1].totalCost);\n      return (\n        <tr key={kv[0]}>\n          <th>{kv[0]}</th>\n          <td>\n            {kv[1].busy} / {kv[1].total}\n          </td>\n          <td className=\"ralign\">{cost}/hr</td>\n        </tr>\n      );\n    });\n\n    const busy_nodes = this.state.computer.filter(\n      (c) =>\n        !c.idle &&\n        c.displayName !== \"master\" &&\n        c.executors.length > 0 &&\n        c.executors[0].currentExecutable\n    );\n    busy_nodes.sort(\n      (a, b) =>\n        a.executors[0].currentExecutable.timestamp -\n        b.executors[0].currentExecutable.timestamp\n    );\n    const running_rows = busy_nodes.map((c) => {\n      const executable = c.executors[0].currentExecutable;\n      return (\n        <tr key={c.displayName}>\n          <td className=\"left-cell\">{summarize_ago(executable.timestamp)}</td>\n          <td>\n            <a href={executable.url}>{summarize_url(executable.url)}</a>\n          </td>\n        </tr>\n      );\n    });\n\n    const running_map = new Map();\n    busy_nodes.forEach((c) => {\n      const executable = c.executors[0].currentExecutable;\n      const task = summarize_url(executable.url);\n      let v = running_map.get(task);\n      if (v === undefined) {\n        v = { total: 0, cumulative_time: 0 };\n        running_map.set(task, v);\n      }\n      v.total++;\n\n      function delta_ago(timestamp) {\n        const date = new Date(timestamp);\n        const today = new Date();\n        return (today - date) / 1000;\n      }\n      v.cumulative_time += delta_ago(executable.timestamp);\n    });\n\n    /*\n    const running_summary = [...running_map.entries()].sort((a, b) => b[1].total - a[1].total).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{task}</th></tr>\n    });\n\n    const cumulative_running_time_summary = [...running_map.entries()].sort((a, b) => b[1].cumulative_time - a[1].cumulative_time).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{seconds2time(Math.floor(v.cumulative_time))}</td><th>{task}</th></tr>\n    });\n    */\n\n    return (\n      <div>\n        <h2>\n          Computers{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n            connectedIn={this.state.connectedIn}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <table>\n                  <tbody>{rows}</tbody>\n                  <tfoot>\n                    <tr>\n                      <td></td>\n                      <td className=\"ralign\" colSpan=\"2\">\n                        {centsToDollars(totalCost * 24 * 30)}/mo\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>{running_rows}</tbody>\n                </table>\n              </td>\n              {/*\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {running_summary}\n                  </tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {cumulative_running_time_summary}\n                  </tbody>\n                </table>\n              </td>\n              */}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport { summarize_url } from \"./Summarize.js\";\n\nexport default class QueueDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.queue();\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function summarize_why(why) {\n      return why\n        .replace(/^Waiting for next available executor on/, \"Needs\")\n        .replace(/docker&&cpu&&ccache/, \"linux-cpu-ccache\")\n        .replace(/[^ ]+cpu_ccache.+/, \"linux-cpu-ccache\")\n        .replace(/docker&&cpu&&!ccache/, \"linux-cpu\")\n        .replace(/docker&&cpu/, \"linux-cpu-any\")\n        .replace(/docker&&gpu/, \"linux-gpu\")\n        .replace(/docker&&bigcpu/, \"linux-bigcpu\")\n        .replace(/windows&&cpu/, \"windows-cpu\")\n        .replace(/windows&&gpu/, \"windows-gpu\")\n        .replace(/g3.8xlarge-i-[^ ]+/, \"linux-gpu\")\n        .replace(/g3.16xlarge-i-[^ ]+/, \"linux-multigpu\")\n        .replace(/worker-win-c5.2xlarge-i-[^ ]+/, \"windows-cpu\")\n        .replace(/worker-win-g3.4xlarge-i-[^ ]+/, \"windows-gpu\");\n    }\n\n    const why_map = new Map();\n    this.state.items.forEach((q) => {\n      const why = summarize_why(q.why);\n      let v = why_map.get(why);\n      if (v === undefined) {\n        v = { total: 0 };\n        why_map.set(why, v);\n      }\n      v.total++;\n    });\n\n    const why_rows = [...why_map.entries()].sort().map((why_v) => {\n      const why = why_v[0];\n      const v = why_v[1];\n      return (\n        <tr key={why}>\n          <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n          <th>{why}</th>\n        </tr>\n      );\n    });\n\n    const task_map = new Map();\n    this.state.items.forEach((q) => {\n      const task = summarize_url(q.task.url);\n      let v = task_map.get(task);\n      if (v === undefined) {\n        v = { total: 0 };\n        task_map.set(task, v);\n      }\n      v.total++;\n    });\n\n    const task_map_max = 10;\n    const task_rows = [...task_map.entries()]\n      .sort((a, b) => b[1].total - a[1].total)\n      .slice(0, task_map_max)\n      .map((task_v) => {\n        const task = task_v[0];\n        const v = task_v[1];\n        return (\n          <tr key={task}>\n            <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n            <th>{task}</th>\n          </tr>\n        );\n      });\n\n    return (\n      <div>\n        <h2>\n          Queue{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td\n                width={300}\n                style={{\n                  textOverflow: \"clip\",\n                  maxWidth: 300,\n                  overflow: \"hidden\",\n                }}\n              >\n                <table>\n                  <tbody>{why_rows}</tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\" width={300}>\n                <table>\n                  <tbody>\n                    {task_rows}\n                    <tr>\n                      <td></td>\n                      <th>{task_map.size > task_map_max ? \"...\" : \"\"}</th>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_job,\n  summarize_date,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\nimport * as d3 from \"d3v4\";\nimport parse_duration from \"parse-duration\";\nimport Tooltip from \"rc-tooltip\";\n\nvar jobs_on_pr = [\n  \"_\",\n  \"setup\",\n  \"caffe2-py2-cuda9.0-cudnn7-windows\",\n  \"caffe2-py2-devtoolset7-rocmrpm-centos7.5\",\n  \"py3.6-clang7-rocmdeb-ubuntu16.04\",\n  \"win-ws2016-cuda9-cudnn7-py3\",\n\n  \"pytorch_linux_xenial_py2_7_9\",\n  \"pytorch_linux_xenial_cuda9_cudnn7_py3\",\n  \"pytorch_linux_xenial_py3_clang5_asan\",\n  \"pytorch_linux_xenial_py3_6_gcc5_4\",\n  \"pytorch_libtorch_linux_xenial_cuda9_cudnn7_py3\",\n\n  \"caffe2_py2_mkl_ubuntu16_04\",\n  \"caffe2_py3_5_cuda10_1_cudnn7_ubuntu16_04\",\n  \"caffe2_onnx_py2_gcc5_ubuntu16_04\",\n  \"caffe2_onnx_main_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort1_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort2_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_py2_clang7_ubuntu16_04\",\n  \"caffe2_cmake_cuda9_0_cudnn7_ubuntu16_04\",\n  \"caffe2_py3_6_devtoolset7_cuda9_0_cudnn7_centos7\",\n\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi\",\n  \"binary_linux_libtorch_2_7_cpu\",\n\n  \"caffe2_py2_android_ubuntu16_04\",\n  \"caffe2_py2_system_macos10_13\",\n  \"pytorch_macos_10_13_py3\",\n  \"pytorch_macos_10_13_cuda9_2_cudnn7_py3\",\n  \"pytorch-linux_xenial_py3_clang5_android_ndk_r19c_x86_32_build\",\n  \"pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build-x86_32\",\n  \"pytorch_ios_10_2_1_x86_64_build\",\n  \"pytorch_ios_10_2_1_arm64_build\",\n\n  \"pytorch_linux_backward_compatibility_check_test\",\n\n  \"pytorch_xla_linux_xenial_py3_6_clang7\",\n\n  \"pytorch_python_doc_push\",\n  \"pytorch_cpp_doc_push\",\n];\n\nvar binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_test\",\n];\n\n// TODO: checks also supports neutral and action_required\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction getJobName(subBuild) {\n  const baseJobName = subBuild.jobName;\n  if (/caffe2-builds/.test(subBuild.url)) {\n    return \"caffe2-\" + baseJobName;\n  } else {\n    return baseJobName;\n  }\n}\n\nfunction classify_job_to_node(j) {\n  if (j === \"short-perf-test-gpu\") {\n    return \"linux-gpu\";\n  } else if (j === \"doc-push\") {\n    return \"linux-cpu\";\n  } else if (/-win/.test(j)) {\n    if (/-test/.test(j) && /-cuda/.test(j)) {\n      return \"win-gpu\";\n    } else {\n      return \"win-cpu\";\n    }\n  } else if (/-macos/.test(j)) {\n    return \"osx\";\n  } else if (\n    /-linux/.test(j) ||\n    /-ubuntu/.test(j) ||\n    /-centos/.test(j) ||\n    /-xenial/.test(j)\n  ) {\n    if (/cuda/.test(j)) {\n      if (/-multigpu-test/.test(j)) {\n        return \"linux-multigpu\";\n      } else if (/-test/.test(j)) {\n        return \"linux-gpu\";\n      } else {\n        return \"linux-cpu\";\n      }\n    } else if (/-rocm/.test(j)) {\n      if (/-test/.test(j)) {\n        return \"rocm\";\n      } else {\n        return \"linux-bigcpu\";\n      }\n    } else {\n      return \"linux-cpu\";\n    }\n  }\n  return \"unknown\";\n}\n\n// Ideas:\n//  - Put the master and pull request info together, so you can see what\n//  the reported 'master' status is for a given 'pull-request' build\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showStale\" in prefs)) prefs[\"showStale\"] = false;\n    if (!(\"username\" in prefs)) prefs[\"username\"] = \"\";\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showStale: prefs.showStale,\n      username: prefs.username,\n      showNotifications: prefs.showNotifications,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        showStale: this.state.showStale,\n        username: this.state.username,\n      })\n    );\n    if (this.props.job !== prevProps.job) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    // NB: server-slide slicing doesn't really help, Jenkins seems to\n    // load everything into memory anyway\n    let data;\n    if (true) {\n      // STOP.  You want more results?  You may have noticed that on\n      // Google, people suggest using allBuilds with {0,n} to make use\n      // of Jenkins pagination.  However, if you do this, it will *DOS our Jeenkins\n      // instance*; even when pagination is requested, Jenkins will\n      // still load ALL builds into memory before servicing your\n      // request.  I've filed this at https://issues.jenkins-ci.org/browse/JENKINS-49908\n      data = await jenkins.job(this.props.job, {\n        tree: `builds[\n                  url,\n                  number,\n                  duration,\n                  timestamp,\n                  result,\n                  actions[parameters[name,value],\n                  causes[shortDescription]],\n                  changeSet[items[commitId,comment,msg]],\n                  subBuilds[\n                    result,jobName,url,duration,\n                    build[\n                      subBuilds[\n                        result,jobName,url,duration,\n                        build[\n                          subBuilds[result,jobName,url,duration]\n                        ]\n                      ]\n                    ]\n                  ]\n               ]`.replace(/\\s+/g, \"\"),\n      });\n      // build[builtOn]\n    } else {\n      // If you want entries in build on subBuilds, need depth = 3\n      // Otherwise, most data can be got with depth = 1\n      const depth = 1;\n      data = await jenkins.job(this.props.job, { depth: depth });\n    }\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    if (data.allBuilds !== undefined) {\n      data.builds = data.allBuilds;\n    }\n\n    // Get build statuses from Github for CircleCI\n    async function get_github_commit_statuses() {\n      let github_commit_statuses = {};\n      let requests = [];\n\n      function add_jobs(jobs, index) {\n        let commitId = requests[index].commitId;\n        if (jobs) {\n          for (let job_name in jobs) {\n            let job = jobs[job_name];\n            if (!github_commit_statuses[commitId].hasOwnProperty(job_name)) {\n              github_commit_statuses[commitId][job_name] = {\n                duration: \"0\",\n                result: job.status,\n                url: job.build_url,\n              };\n            }\n          }\n        }\n      }\n\n      for (const commit of data.builds) {\n        for (let i = 0; i < commit.changeSet.items.length; i++) {\n          let commitId = commit.changeSet.items[i].commitId;\n          if (!github_commit_statuses.hasOwnProperty(commitId)) {\n            github_commit_statuses[commitId] = {};\n          }\n          requests.push({\n            url:\n              \"https://s3.amazonaws.com/ossci-job-status/combined/\" +\n              commitId +\n              \".json\",\n            commitId,\n          });\n        }\n      }\n      let results = await jenkins.batch_get(\n        requests.map((request) => request.url)\n      );\n      results.forEach(add_jobs);\n      return github_commit_statuses;\n    }\n    data.github_commit_statuses = await get_github_commit_statuses();\n\n    const known_jobs_set = new Set();\n    function collect_known_jobs_set(topBuild) {\n      function go(subBuild) {\n        if (\n          subBuild.build &&\n          subBuild.build._class ===\n            \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n        ) {\n          subBuild.build.subBuilds.forEach(go);\n        } else {\n          known_jobs_set.add(getJobName(subBuild));\n        }\n      }\n      topBuild.subBuilds.forEach(go);\n    }\n    const props_mode = this.props.mode;\n    if (props_mode !== \"binary\") {\n      data.builds.forEach(collect_known_jobs_set);\n    }\n\n    if (data.github_commit_statuses) {\n      Object.keys(data.github_commit_statuses).forEach(function (commit) {\n        var jobs = data.github_commit_statuses[commit];\n        Object.keys(jobs).forEach(function (job_name) {\n          if (props_mode !== \"binary\") {\n            // Warning: quadratic police!\n            for (var i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n              if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n                break;\n              }\n            }\n            if (\n              !(job_name.includes(\"binary_\") || job_name.includes(\"smoke_\"))\n            ) {\n              // Exclude binary builds and smoke tests that are not running on every PR\n              known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n            }\n          } else {\n            if (job_name.includes(\"binary_\") || job_name.includes(\"smoke_\")) {\n              let found = false;\n              for (let i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n                if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) known_jobs_set.add(\"_\" + job_name);\n            }\n          }\n        });\n      });\n    }\n\n    function compareFun(x, y) {\n      const sx = jobs_on_pr.some((e) => summarize_job(x).startsWith(e));\n      const sy = jobs_on_pr.some((e) => summarize_job(y).startsWith(e));\n      if (sx < sy) return 1;\n      else if (sx > sy) return -1;\n      else if (x < y) return -1;\n      else if (x > y) return 1;\n      else return 0;\n    }\n    data.known_jobs = [...known_jobs_set.values()].sort(compareFun);\n\n    data.builds.forEach((build) => {\n      const sb_map = new Map();\n\n      // Collect job status from Jenkins\n      function collect_jobs(topBuild) {\n        function go(subBuild) {\n          if (\n            subBuild.build &&\n            subBuild.build._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n          ) {\n            subBuild.build.subBuilds.forEach(go);\n          } else {\n            sb_map.set(getJobName(subBuild), subBuild);\n          }\n        }\n        topBuild.subBuilds.forEach(go);\n      }\n      collect_jobs(build);\n\n      // Collect job status for non-Jenkins jobs (i.e. CircleCI jobs)\n      async function collect_jobs_from_github_status(build) {\n        if (build.changeSet.items.length > 0) {\n          for (var i = 0; i < build.changeSet.items.length; i++) {\n            let commitId = build.changeSet.items[i].commitId;\n            if (data.github_commit_statuses) {\n              Object.keys(data.github_commit_statuses[commitId]).forEach(\n                function (job_name) {\n                  var job = data.github_commit_statuses[commitId][job_name];\n                  sb_map.set(\"_\" + job_name, {\n                    duration: job.duration,\n                    result: job.result,\n                    url: job.url,\n                  });\n                }\n              );\n            }\n          }\n        }\n      }\n      collect_jobs_from_github_status(build);\n      build.sb_map = sb_map;\n    });\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.includes(\"master\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.result)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.result)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (\n          this.state.consecutive_failure_count &&\n          !this.state.consecutive_failure_count.has(key)\n        ) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\n            body: summarize_job(key),\n          });\n        }\n      });\n    }\n\n    // TODO: This can cause spurious state updates\n    this.setState(data);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"cancelled\">\n            .\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      return result;\n    }\n\n    // Sigh... the place where you can get the information you're\n    // interested in at the top level is NOT the same as where you get\n    // it inside, because of how Jenkins handles depth (Jenkins\n    // *will* give you information for everything recursively, just\n    // not in the place you might expect it.\n    //\n    //  class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //  id: \"3772\"\n    //  subBuilds:\n    //    0:\n    //      jobName: \"whatever\"\n    //      build:\n    //        class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //        subBuilds:\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const known_jobs = this.state.known_jobs;\n    const known_jobs_head = known_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName}>\n        <div\n          className={\n            (jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n              ? \"pr-header\"\n              : \"master-only-header\") +\n            \" \" +\n            (consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\")\n          }\n        >\n          {jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n            ? \"\"\n            : \"• \"}\n          {summarize_job(jobName)}\n        </div>\n      </th>\n    ));\n    // const known_jobs_head = known_jobs.map((jobName) =>\n    //  <th key={jobName}></th>\n    //);\n\n    const durationWidth = 100;\n    const durationHeight = 10;\n    const durationScale = d3.scaleLinear().rangeRound([0, durationWidth]);\n    durationScale.domain([0, d3.max(builds, (b) => b.duration)]);\n\n    const seen_prs = new Set();\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n\n      function perf_report(sb, result) {\n        return (\n          <Fragment>\n            <span\n              className={\n                is_success(result) ? \"ok-duration\" : \"suspect-duration\"\n              }\n            >\n              {parse_duration(sb.duration) / 1000}\n            </span>\n            &nbsp;&nbsp;\n          </Fragment>\n        );\n      }\n\n      // let cumulativeMs = 0;\n      let cost = 0;\n      let unknownCost = false;\n      let inProgressCost = false;\n      let found = false;\n\n      const status_cols = known_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          const dur = parse_duration(sb.duration);\n          // cumulativeMs += dur;\n          const node = classify_job_to_node(getJobName(sb));\n          let this_cost = 0;\n          if (node === \"unknown\") {\n            unknownCost = true;\n          } else {\n            this_cost = Math.ceil((centsPerHour[node] * dur) / 1000 / 60 / 60);\n          }\n          cost += this_cost;\n          if (!sb.result) inProgressCost = true;\n          if (this.props.mode === \"perf\") {\n            cell = perf_report(sb, sb.result);\n          } else if (this.props.mode === \"cost\") {\n            cell = (\n              <Fragment>\n                {node === \"unknown\" ? \"?\" : this_cost}&nbsp;&nbsp;\n              </Fragment>\n            );\n          } else {\n            var cellHref = sb.url;\n            if (/^https?:\\/\\//.test(cellHref)) {\n              if (cellHref.includes(\"jenkins\")) {\n                cellHref = cellHref + \"/console\";\n              }\n            } else {\n              cellHref = jenkins.link(cellHref + \"/console\");\n            }\n            cell = (\n              <a\n                href={cellHref}\n                className=\"icon\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                alt={getJobName(sb)}\n              >\n                {result_icon(sb.result)}\n              </a>\n            );\n          }\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={jobName}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      }\n\n      function renderCommit(commit) {\n        return (\n          <div key={commit.commitId}>\n            {renderPullRequestNumber(commit.comment)}{\" \"}\n            {drop_pr_number(commit.msg)}{\" \"}\n            <code>\n              <a\n                href={\n                  \"https://github.com/pytorch/pytorch/commit/\" + commit.commitId\n                }\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {commit.commitId.slice(0, 7)}\n              </a>\n            </code>\n          </div>\n        );\n      }\n\n      function renderCauses(changeSet) {\n        const defaultCause = <em>Manually triggered rebuild.</em>;\n        if (changeSet.actions === undefined) return defaultCause;\n        return changeSet.actions\n          .filter((action) => action.causes !== undefined)\n          .map((action, i) =>\n            action.causes.map((cause, i) => (\n              <em key={i}>{cause.shortDescription}. </em>\n            ))\n          );\n      }\n\n      function getPushedBy(build) {\n        const action = build.actions.find(\n          (action) => action._class === \"hudson.model.CauseAction\"\n        );\n        if (action === undefined) return \"(unknown)\";\n        const cause = action.causes.find(\n          (cause) => cause._class === \"com.cloudbees.jenkins.GitHubPushCause\"\n        );\n        if (cause === undefined) return \"\";\n        const match = cause.shortDescription.match(\n          /Started by GitHub push by (.+)/\n        );\n        if (match === null) return cause.shortDescription;\n        return match[1];\n      }\n\n      function getPullParams(build) {\n        let action = build.actions.find(\n          (action) =>\n            action._class ===\n            \"org.jenkinsci.plugins.ghprb.GhprbParametersAction\"\n        );\n        if (action === undefined) {\n          action = build.actions.find(\n            (action) =>\n              action._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobParametersAction\"\n          );\n        }\n        if (action === undefined) {\n          return new Map();\n        }\n        return new Map(\n          action.parameters.map((param) => [param.name, param.value])\n        );\n      }\n\n      const isRebuild = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) => cause._class === \"com.sonyericsson.rebuild.RebuildCause\"\n          )\n      );\n      const isPullRequest = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) =>\n              cause._class === \"org.jenkinsci.plugins.ghprb.GhprbCause\" ||\n              (cause._class === \"hudson.model.Cause$UpstreamCause\" &&\n                /-pull-request$/.test(cause.upstreamProject))\n          )\n      );\n\n      let author = \"\";\n      let desc = \"\";\n      let pull_link;\n      let pull_id;\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n      if (isRebuild) {\n        desc = renderCauses(build);\n      } else if (isPullRequest) {\n        const params = getPullParams(build);\n        const title = params.get(\"ghprbPullTitle\");\n        pull_link = params.get(\"ghprbPullLink\");\n        pull_id = params.get(\"ghprbPullId\");\n        author = params.get(\"ghprbPullAuthorLogin\");\n        desc = title;\n        if (seen_prs.has(pull_id)) {\n          // TODO: do this filtering earlier\n          if (!this.state.showStale) return <Fragment key={build.number} />;\n          stale = true;\n        }\n        if (this.state.username !== \"\" && this.state.username !== author) {\n          return <Fragment key={build.number} />;\n        }\n        seen_prs.add(pull_id);\n      } else {\n        const changeSet = build.changeSet;\n        // TODO: This is empty for not pytorch-master.  We could\n        // probably get the info if we propagate it as a variable.\n        author = getPushedBy(build);\n        if (changeSet.items.length === 0) {\n          desc = renderCauses(build);\n        } else {\n          desc = changeSet.items.slice().reverse().map(renderCommit);\n        }\n      }\n\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment />;\n      }\n\n      return (\n        <tr key={build.number} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">\n            <a href={build.url} target=\"_blank\" rel=\"noreferrer\">\n              {build.number}\n            </a>\n          </th>\n          <th className=\"left-cell\">\n            <a href={pull_link} target=\"_blank\" rel=\"noreferrer\">\n              {pull_id ? \"#\" + pull_id : \"\"}\n            </a>\n          </th>\n          <td className=\"left-cell\">{whenString}</td>\n          {status_cols}\n          <td className=\"right-cell bar-number\">\n            {Math.floor(build.duration / 1000 / 60)}\n          </td>\n          <td>\n            <svg width={durationWidth} height={durationHeight}>\n              <rect\n                className=\"bar\"\n                x=\"0\"\n                y=\"0\"\n                width={durationScale(build.duration)}\n                height={durationHeight}\n              />\n            </svg>\n          </td>\n          <td className=\"right-cell\" style={{ textAlign: \"right\" }}>\n            {inProgressCost ? \"≥ \" : \"\"}\n            {centsToDollars(cost)}\n            {unknownCost ? \"?\" : \"\"}\n          </td>\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2>\n          <a\n            href={jenkins.link(\"job/\" + this.props.job)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {this.props.job}\n          </a>{\" \"}\n          history{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <div style={{ color: \"#909\" }}>\n          • Purple bulleted jobs run on master only.\n        </div>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-stale\"\n                checked={this.state.showStale}\n                onChange={(e) => {\n                  this.setState({ showStale: e.target.checked });\n                }}\n              />\n              <label htmlFor=\"show-stale\">Show stale builds of PRs</label>\n            </li>\n            <li>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={(e) => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n              <label\n                htmlFor=\"username\"\n                style={{\n                  backgroundColor: \"white\",\n                  position: \"relative\",\n                  zIndex: 3,\n                }}\n              >\n                Show builds from this user only\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-notifications\"\n                checked={this.state.showNotifications}\n                onChange={(e) =>\n                  this.setState({ showNotifications: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-notifications\">\n                Show notifications on master failure\n                {Notification.permission === \"denied\" ? (\n                  <Fragment>\n                    {\" \"}\n                    <strong>\n                      (WARNING: notifications are currently denied)\n                    </strong>\n                  </Fragment>\n                ) : (\n                  \"\"\n                )}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">J#</th>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {known_jobs_head}\n              <th className=\"right-cell\" colSpan=\"2\">\n                Latency (min)\n              </th>\n              <th className=\"right-cell\">Cost</th>\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import { groups as tvm } from \"./tvm.js\";\n\nconst map = {\n  tvm: tvm,\n};\n\nexport default function getGroups(repo) {\n  const result = [];\n  if (!map[repo]) {\n    console.error(`Unknown group repo ${repo}`);\n    return [];\n  }\n\n  for (const group of map[repo]) {\n    let obj = {};\n    Object.assign(obj, group);\n    result.push(obj);\n  }\n\n  return result;\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport { summarize_job, summarize_date } from \"./Summarize.js\";\nimport getGroups from \"./groups/index.js\";\nimport Tooltip from \"rc-tooltip\";\nimport axios from \"axios\";\n// import UpdateButton from \"./status/UpdateButton.js\";\nimport { BsFillCaretRightFill, BsFillCaretDownFill } from \"react-icons/bs\";\nimport { ImSpinner2 } from \"react-icons/im\";\nimport { FcCancel } from \"react-icons/fc\";\n\nfunction isMobile() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nfunction array_move(arr, old_index, new_index) {\n  while (old_index < 0) {\n    old_index += arr.length;\n  }\n  while (new_index < 0) {\n    new_index += arr.length;\n  }\n  if (new_index >= arr.length) {\n    var k = new_index - arr.length + 1;\n    while (k--) {\n      arr.push(undefined);\n    }\n  }\n  arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n}\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction is_skipped(result) {\n  return result === \"skipped\";\n}\n\nfunction is_infra_failure(result) {\n  return result === \"infrastructure_fail\";\n}\n\nfunction computeConsecutiveFailureCount(data, failure_window = 10) {\n  const still_unknown_set = new Set();\n  const consecutive_failure_count = new Map();\n  data.known_jobs.forEach((job) => {\n    if (job === \"pytorch_doc_push\") return;\n    if (job === \"__dr.ci\") return;\n    if (job.includes(\"nightlies\")) return;\n    still_unknown_set.add(job);\n  });\n  for (let i = 0; i < data.builds.length; i++) {\n    // After some window, don't look anymore; the job may have been\n    // removed\n    if (i > failure_window) break;\n    if (!still_unknown_set.size) break;\n    const build = data.builds[i];\n    const sb_map = build.sb_map;\n    sb_map.forEach((sb, jobName) => {\n      if (!still_unknown_set.has(jobName)) {\n        // do nothing\n      } else if (is_failure(sb.status)) {\n        let count = consecutive_failure_count.get(jobName) || 0;\n        count++;\n        consecutive_failure_count.set(jobName, count);\n      } else if (is_success(sb.status)) {\n        still_unknown_set.delete(jobName);\n      }\n    });\n  }\n\n  // Prune uninteresting alarms\n  consecutive_failure_count.forEach((v, k) => {\n    // Require two consecutive failure to alert\n    if (v <= 1) {\n      consecutive_failure_count.delete(k);\n    }\n  });\n  return consecutive_failure_count;\n}\n\nfunction getJenkinsJobName(subBuild) {\n  const baseJobName = subBuild.jobName;\n  if (/caffe2-builds/.test(subBuild.url)) {\n    return \"jenkins: caffe2-\" + baseJobName;\n  } else {\n    return \"jenkins: \" + baseJobName;\n  }\n}\n\nclass NameFilterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobNameFilter: props.defaultValue || \"\",\n      onSubmit: props.onSubmit || ((_) => {}),\n    };\n  }\n  render() {\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.state.onSubmit(this.state.jobNameFilter);\n        }}\n      >\n        <label htmlFor=\"job-name-filter\">Name filter:&nbsp;</label>\n        <input\n          type=\"input\"\n          name=\"job-name-filter\"\n          id=\"job-name-filter\"\n          value={this.state.jobNameFilter}\n          onChange={(e) => {\n            this.setState({ jobNameFilter: e.target.value });\n          }}\n        />\n        <input style={{ marginLeft: \"3px\" }} type=\"submit\" value=\"Go\" />\n      </form>\n    );\n  }\n}\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs2\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showNotifications\" in prefs))\n      prefs[\"showNotifications\"] = !isMobile();\n    if (!(\"groupJobs\" in prefs)) prefs[\"groupJobs\"] = true;\n    let jobNameFilter = this.props.jobNameFilter || \"\";\n    return {\n      fetchedBuilds: false,\n      fetchError: false,\n      builds: [],\n      lastUpdateDate: null,\n      known_jobs: [],\n      showGroups: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showNotifications: prefs.showNotifications,\n      groupJobs: jobNameFilter.length === 0 ? prefs.groupJobs : false,\n      jobNameFilter: jobNameFilter,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (\n      !isMobile() &&\n      window.Notification &&\n      this.state.showNotifications &&\n      window.Notification.permission !== \"granted\"\n    ) {\n      window.Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs2\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        groupJobs: this.state.groupJobs,\n      })\n    );\n    if (this.props.branch !== prevProps.branch) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async addJenkinsResults(builds) {\n    // Adds Jenkins results to builds array\n    // Step 1. Fetch info via GraphQL\n    //\n    // STOP.  You want more results?  You may have noticed that on\n    // Google, people suggest using allBuilds with {0,n} to make use\n    // of Jenkins pagination.  However, if you do this, it will *DOS our Jeenkins\n    // instance*; even when pagination is requested, Jenkins will\n    // still load ALL builds into memory before servicing your\n    // request.  I've filed this at https://issues.jenkins-ci.org/browse/JENKINS-49908\n    let jenkins_data = await jenkins.job(`pytorch-${this.props.branch}`, {\n      tree: `builds[\n                url,\n                number,\n                duration,\n                timestamp,\n                result,\n                actions[parameters[name,value],\n                causes[shortDescription]],\n                changeSet[items[commitId,comment,msg]],\n                subBuilds[\n                  result,jobName,url,duration,\n                  build[\n                    subBuilds[\n                      result,jobName,url,duration,\n                      build[\n                        subBuilds[result,jobName,url,duration]\n                      ]\n                    ]\n                  ]\n                ]\n             ]`.replace(/\\s+/g, \"\"),\n    });\n\n    // Step 2: Build commit to build idx map\n    const commitIdxMap = new Map();\n    builds.forEach((build, idx) => {\n      commitIdxMap[build.id] = idx;\n    });\n\n    // Step 3: Add jenkins jobs\n    if (jenkins_data) {\n      jenkins_data.builds.forEach((topBuild) => {\n        if (topBuild.changeSet.items.length !== 1) {\n          return;\n        }\n        const buildCommitId = topBuild.changeSet.items[0].commitId;\n        if (!(buildCommitId in commitIdxMap)) {\n          return;\n        }\n        const buildIdx = commitIdxMap[buildCommitId];\n        function go(subBuild) {\n          if (\n            subBuild.build &&\n            subBuild.build._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n          ) {\n            subBuild.build.subBuilds.forEach(go);\n          } else {\n            builds[buildIdx].sb_map.set(\n              getJenkinsJobName(subBuild),\n              Object.fromEntries([\n                [\"status\", subBuild.result],\n                [\"build_url\", jenkins.link(subBuild.url + \"/console\")],\n              ])\n            );\n          }\n        }\n        topBuild.subBuilds.forEach(go);\n      });\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n\n    const branch = this.props.branch;\n    const user = this.props.user;\n    const repo = this.props.repo;\n    // const jsonUrl =\n    //   window.location.origin +\n    //   `/tvm-hud/statuses/${user}/${repo}/${branch.replace(\"/\", \"_\")}.json`;\n    const jsonUrl = `https://raw.githubusercontent.com/driazati/tvm-hud/data/public/statuses/${user}/${repo}/${branch.replace(\n      \"/\",\n      \"_\"\n    )}.json`;\n    let commits = null;\n    try {\n      commits = await axios.get(jsonUrl);\n    } catch {\n      this.setState({ fetchError: true });\n      return;\n    }\n\n    // Marshal new build format into the old build format\n    const builds = [];\n    for (const commit of commits.data) {\n      const build_map = new Map();\n      for (const job of commit.jobs) {\n        let status = job.status;\n        if (status === \"neutral\") {\n          status = \"skipped\";\n        }\n        if (status === \"queued\") {\n          status = \"pending\";\n        }\n        build_map.set(job.name, {\n          build_url: job.url,\n          status: status,\n        });\n      }\n      builds.push({\n        author: {\n          username: commit.author,\n        },\n        message: commit.headline + \"\\n\" + commit.body,\n        pr_number: commit.pr,\n        pr_title: commit.pr_title,\n        sb_map: build_map,\n        id: commit.sha,\n        timestamp: commit.date,\n        url: `https://github.com/${this.props.user}/${this.props.repo}/commit/${commit.sha}`,\n      });\n    }\n\n    if (this.props.repo === \"pytorch\" && branch === \"master\") {\n      await this.addJenkinsResults(builds);\n    }\n\n    const data = {};\n\n    data.updateTime = new Date();\n    data.lastUpdateDate = new Date(commits.headers[\"last-modified\"]);\n    data.fetchedBuilds = true;\n    data.connectedIn = data.updateTime - currentTime;\n\n    const known_jobs_set = new Set();\n    builds.forEach((build) => {\n      build.sb_map.forEach((sb, job_name) => {\n        known_jobs_set.add(job_name);\n      });\n    });\n\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.builds = builds;\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    if (this.props.repo === \"pytorch\") {\n      data.consecutive_failure_count = computeConsecutiveFailureCount(data);\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (!isMobile()) {\n        if (this.state.consecutive_failure_count) {\n          this.state.consecutive_failure_count.forEach((v, key) => {\n            if (!data.consecutive_failure_count.has(key)) {\n              // It's fixed!\n              new window.Notification(\"✅ \" + this.props.job, {\n                body: summarize_job(key),\n              });\n            }\n          });\n        }\n        data.consecutive_failure_count.forEach((v, key) => {\n          // Don't produce notifications for initial failure!\n          if (\n            this.state.consecutive_failure_count &&\n            !this.state.consecutive_failure_count.has(key)\n          ) {\n            // It's failed!\n            new window.Notification(\"❌ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n    }\n\n    this.setState(data);\n  }\n\n  nameMatches(name, filter) {\n    if (name.includes(filter)) {\n      return true;\n    }\n\n    // try-catch this since filter is user supplied and RegExp errors on invalid\n    // regexes\n    try {\n      const regex = new RegExp(filter);\n      return Boolean(name.match(regex));\n    } catch {\n      return false;\n    }\n  }\n\n  shouldShowJob(name) {\n    const jobNameFilter = this.state.jobNameFilter;\n    if (jobNameFilter.length > 0 && !this.nameMatches(name, jobNameFilter)) {\n      return false;\n    }\n    const isDockerJob = name.startsWith(\"ci/circleci: docker\");\n    const isGCJob = name.startsWith(\"ci/circleci: ecr_gc\");\n    const isCIFlowShouldRunJob = name.endsWith(\"ciflow_should_run\");\n    const isGenerateTestMatrixJob = name.endsWith(\"generate-test-matrix\");\n    return !(\n      isDockerJob ||\n      name === \"welcome\" ||\n      isGCJob ||\n      isCIFlowShouldRunJob ||\n      isGenerateTestMatrixJob\n    );\n  }\n\n  render() {\n    // Initialize the groups\n    let groups = getGroups(this.props.repo);\n\n    for (const group of groups) {\n      group.jobNames = [];\n    }\n\n    if (!this.state.groupJobs) {\n      groups = [];\n    }\n\n    const findGroup = (jobName) => {\n      for (const group of groups) {\n        if (jobName.match(group.regex)) {\n          return group;\n        }\n      }\n      return null;\n    };\n\n    const groupIsExpanded = (group) => {\n      for (const stateGroup of this.state.showGroups) {\n        if (stateGroup.name === group.name) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    const groupIsFailing = (group) => {\n      for (const jobName of group.jobNames) {\n        if (\n          this.state.consecutive_failure_count &&\n          this.state.consecutive_failure_count.has(jobName)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_skipped(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"skipped\">\n            S\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span\n            role=\"img\"\n            style={{ marginLeft: \"-2px\", color: \"gray\" }}\n            aria-label=\"cancelled\"\n          >\n            <FcCancel />\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      if (is_infra_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"grey\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      return result;\n    }\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const visibleJobs = this.state.known_jobs.filter((name) =>\n      this.shouldShowJob(name)\n    );\n\n    // Collapse down groups of jobs based on a regex match to the name\n    const groupedVisibleJobsMap = {};\n    for (const jobName of visibleJobs) {\n      let group = findGroup(jobName);\n\n      if (!group || groupIsExpanded(group)) {\n        // Fake a group of size one\n        group = {\n          name: jobName,\n          jobNames: [jobName],\n        };\n      } else {\n        group.jobNames.push(jobName);\n      }\n      groupedVisibleJobsMap[group.name] = group;\n    }\n\n    // Go from the map of name -> group to a sorted list\n    let groupedVisibleJobs = [];\n    for (const groupName in groupedVisibleJobsMap) {\n      groupedVisibleJobs.push({\n        name: groupName,\n        group: groupedVisibleJobsMap[groupName],\n      });\n    }\n\n    for (const group of this.state.showGroups) {\n      // Keep in headers for expanded groups\n      groupedVisibleJobs.push({\n        name: group.name,\n        group: group,\n      });\n    }\n\n    // Sort by group name\n    groupedVisibleJobs.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n\n    // Now that jobs have been globally sorted, shuffle around the expanded groups\n    // so they show up next to their group header\n    for (const group of this.state.showGroups) {\n      let groupBaseIndex = groupedVisibleJobs.findIndex(\n        (job) => job.name === group.name\n      );\n      if (groupBaseIndex === null) {\n        console.error(`Unable to find group ${group.name}`);\n        continue;\n      }\n\n      for (const jobName of group.jobNames) {\n        let jobIndex = groupedVisibleJobs.findIndex(\n          (job) => job.name === jobName\n        );\n        if (jobIndex === null) {\n          console.error(`Unable to job ${jobName} in group ${group.name}`);\n          continue;\n        }\n        if (jobIndex < groupBaseIndex) {\n          array_move(groupedVisibleJobs, jobIndex, groupBaseIndex);\n        } else {\n          array_move(groupedVisibleJobs, jobIndex, groupBaseIndex + 1);\n        }\n      }\n    }\n\n    const toggleGroup = (group) => {\n      let showGroups = this.state.showGroups;\n\n      if (groupIsExpanded(group)) {\n        // Remove the group\n        showGroups.pop(\n          showGroups.findIndex((shownGroup) => shownGroup.name === group.name)\n        );\n      } else {\n        showGroups.push(group);\n      }\n      this.setState({ showGroups: showGroups });\n    };\n\n    const visibleJobsHeaders = [];\n    for (const data of groupedVisibleJobs) {\n      let jobName = data.name;\n      if (data.group.jobNames.length === 1) {\n        jobName = data.group.jobNames[0];\n      }\n      let header = (\n        <th className=\"rotate\" key={jobName}>\n          <div\n            className={\n              consecutive_failure_count &&\n              consecutive_failure_count.has(jobName)\n                ? \"failing-header\"\n                : \"\"\n            }\n          >\n            {summarize_job(jobName)}\n          </div>\n        </th>\n      );\n\n      if (data.group.jobNames.length > 1) {\n        const group = data.group;\n        let icon = <BsFillCaretRightFill />;\n\n        if (groupIsExpanded(group)) {\n          icon = <BsFillCaretDownFill />;\n        }\n\n        let headerClass = \"\";\n        if (groupIsFailing(group)) {\n          headerClass = \"failing-text\";\n        }\n\n        header = (\n          <th className=\"rotate\" key={jobName}>\n            <div\n              onClick={() => {\n                toggleGroup(group);\n              }}\n              onAuxClick={() => {\n                toggleGroup(group);\n              }}\n              style={{ cursor: \"pointer\" }}\n            >\n              <span style={{ color: \"#d0d0d0\" }}>Group </span>\n              <span className={headerClass}>{group.name}</span> {icon}\n            </div>\n          </th>\n        );\n      }\n      visibleJobsHeaders.push(header);\n    }\n\n    function aggregateStatus(jobs) {\n      // The logic here follows these rules (in order):\n      // 1. If there are no jobs, return no status\n      // 2. Failed if any job is failed\n      // 3. Pending if any job is pending\n      // 4. Success if all jobs are success, skipped, or aborted\n      // 5. Otherwise pending\n\n      jobs = jobs.filter((x) => x !== undefined);\n      if (jobs.length === 0) {\n        // No jobs in the group so don't show anything\n        return null;\n      }\n\n      for (const job of jobs) {\n        if (is_failure(job.status) || is_infra_failure(job.status)) {\n          return \"failure\";\n        }\n      }\n\n      for (const job of jobs) {\n        if (is_pending(job.status)) {\n          return \"pending\";\n        }\n      }\n\n      let allOk = true;\n      for (const job of jobs) {\n        if (\n          !(\n            is_success(job.status) ||\n            is_skipped(job.status) ||\n            is_aborted(job.status)\n          )\n        ) {\n          allOk = false;\n        }\n      }\n      if (allOk) {\n        return \"success\";\n      }\n\n      return \"pending\";\n    }\n\n    const decoratedBuildUrl = (url) => {\n      // Add check_suite_focus=true to GHA checkruns\n      const ghaRegex = new RegExp(\n        \"^https://github.com/\" +\n          this.props.user +\n          \"/\" +\n          this.props.repo +\n          \"/runs/\\\\d+$\"\n      );\n      if (url.match(ghaRegex)) {\n        return url + \"?check_suite_focus=true\";\n      }\n      return url;\n    };\n    builds.forEach((build) => {\n      build.sb_map.forEach((item) => {\n        if (item.status) {\n          item.status = item.status.toLowerCase();\n        }\n      });\n    });\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n\n      const status_cols = groupedVisibleJobs.map((data) => {\n        let cell = <Fragment />;\n        let jobName = data.name;\n\n        if (data.group.jobNames.length > 1) {\n          // For groups, get the status of all the jobs in the group\n          jobName = `Group: ${data.group.name}`;\n          const jobs = data.group.jobNames.map((jobName) =>\n            sb_map.get(jobName)\n          );\n          const status = aggregateStatus(jobs);\n          if (status) {\n            cell = (\n              <div\n                className=\"display-cell\"\n                style={{\n                  fontWeight: \"bold\",\n                }}\n                onClick={() => {\n                  toggleGroup(data.group);\n                }}\n                onAuxClick={() => {\n                  toggleGroup(data.group);\n                }}\n              >\n                {result_icon(status)}\n              </div>\n            );\n          }\n        } else {\n          // Ungrouped job, show it directly\n          if (data.group.jobNames.length === 1) {\n            jobName = data.group.jobNames[0];\n          }\n          const sb = sb_map.get(jobName);\n          if (sb !== undefined) {\n            cell = (\n              <div className=\"display-cell\">\n                <a\n                  href={decoratedBuildUrl(sb.build_url)}\n                  className=\"icon\"\n                  target=\"_blank\"\n                  alt={jobName}\n                  rel=\"noreferrer\"\n                >\n                  {result_icon(sb.status)}\n                </a>\n              </div>\n            );\n          }\n        }\n\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={{ keepParent: false }}\n          >\n            <td key={jobName} className=\"icon-cell\">\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      const renderPullRequestNumber = (comment) => {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={`/tvm-hud/pr/${this.props.user}/${this.props.repo}/${m[1]}`}\n                // href={`https://github.com/${this.props.user}/${this.props.repo}/pull/${m[1]}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        m = comment.match(\n          /https:\\/\\/github.com\\/pytorch\\/pytorch\\/pull\\/(\\d+)/\n        );\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={`/tvm-hud/pr/${this.props.user}/${this.props.repo}/${m[1]}`}\n                // href={`https://github.com/${this.props.user}/${this.props.repo}/pull/${m[1]}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      };\n\n      let author = build.author.username;\n\n      const desc = (\n        <div key={build.id}>\n          <a\n            style={{ color: \"#003d7f\" }}\n            href={`/tvm-hud/commit/${this.props.user}/${this.props.repo}/${build.id}`}\n          >\n            {drop_pr_number(build.message).split(\"\\n\")[0]}{\" \"}\n          </a>\n          <code>\n            <a\n              href={`https://github.com/${this.props.user}/${this.props.repo}/commit/${build.id}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {build.id.slice(0, 7)}\n            </a>\n          </code>\n        </div>\n      );\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n\n      // TODO: need to store this in index or payload\n      const whenString = summarize_date(build.timestamp);\n\n      // TODO: Add preference to show/hide those\n      // if (!found) {\n      //  return <Fragment key={build.id} />;\n      // }\n      let pr_number = null;\n      let pr_title = null;\n\n      if (build.pr_number) {\n        pr_number = (\n          <td>\n            <a\n              href={`https://github.com/${this.props.user}/${this.props.repo}/pull/${build.pr_number}`}\n            >\n              {build.pr_number}\n            </a>\n          </td>\n        );\n      }\n      if (build.pr_title) {\n        pr_title = (\n          <td>\n            <a\n              href={`/tvm-hud/pr/${this.props.user}/${this.props.repo}/${build.pr_number}`}\n            >\n              {build.pr_title}\n            </a>\n          </td>\n        );\n      }\n\n      return (\n        <tr key={build.id} className={stale ? \"stale\" : \"\"}>\n          <td className=\"left-cell\" title={build.timestamp}>\n            {whenString}\n          </td>\n          {status_cols}\n          <td\n            className=\"right-cell\"\n            style={{\n              maxWidth: \"9em\",\n              textOverflow: \"ellipsis\",\n              overflow: \"hidden\",\n            }}\n          >\n            {author}\n          </td>\n          {pr_number}\n          {pr_title}\n          {pr_title ? null : (\n            <th\n              className=\"right-cell\"\n              style={{ paddingLeft: \"0\", paddingRight: \"5px\" }}\n            >\n              {renderPullRequestNumber(build.message)}\n            </th>\n          )}\n          <td>{desc}</td>\n        </tr>\n      );\n    });\n\n    let loadingInfo = null;\n    if (this.state.fetchError) {\n      loadingInfo = (\n        <p>\n          Error fetching commits, either the branch does not exist or is not\n          tracked by the{\" \"}\n          {/* <a href=\"https://github.com/pytorch/test-infra/tree/main/aws/lambda/github-status-sync\"> */}\n          status syncing job\n          {/* </a> */}\n        </p>\n      );\n    } else if (this.state.fetchedBuilds && rows.length === 0) {\n      loadingInfo = <p>Fetched data but found no rows</p>;\n    } else if (!this.state.fetchedBuilds) {\n      loadingInfo = (\n        <div style={{ margin: \"10px\" }}>\n          <ImSpinner2 className=\"icon-spin\" />\n        </div>\n      );\n    }\n\n    let pr_number = null;\n    let pr_title = null;\n\n    // if (rows.)\n    if (builds.length > 0 && builds[0].pr_title) {\n      pr_number = <th className=\"right-cell\">PR #</th>;\n      pr_title = <th className=\"right-cell\">PR Title</th>;\n    }\n\n    let lastUpdate = null;\n    if (this.state.lastUpdateDate) {\n      lastUpdate = (\n        <div style={{ fontSize: \"0.8em\" }}>\n          <p>\n            Last updated {this.state.lastUpdateDate.toLocaleString()}{\" \"}\n            {/* <UpdateButton\n            repo={this.props.repo}\n            user={this.props.user}\n            branch={this.props.branch}\n          /> */}\n          </p>\n          <p>\n            {pr_title ? (\n              <span>\n                This data is pull from GitHub and may not be 100% complete due\n                to pagination and laziness\n              </span>\n            ) : null}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h4>\n          <a\n            href={`https://github.com/${this.props.user}/${this.props.repo}/commits/${this.props.branch}`}\n          >\n            {this.props.user}/{this.props.repo}/{this.props.branch}\n          </a>{\" \"}\n          CI history{\" \"}\n        </h4>\n        {lastUpdate}\n        <div>\n          <ul className=\"menu\">\n            {/* {isMobile() ? null : (\n              <li>\n                <input\n                  type=\"checkbox\"\n                  name=\"show-notifications\"\n                  checked={this.state.showNotifications}\n                  onChange={(e) =>\n                    this.setState({ showNotifications: e.target.checked })\n                  }\n                />\n                <label htmlFor=\"show-notifications\">\n                  Show notifications on master failure\n                  {this.state.showNotifications &&\n                    window.Notification &&\n                    window.Notification.permission === \"denied\" ? (\n                    <Fragment>\n                      {\" \"}\n                      <strong>\n                        (WARNING: notifications are currently denied)\n                      </strong>\n                    </Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                </label>\n              </li>\n            )}\n            {isMobile() ? null : <br />} */}\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"group-jobs\"\n                checked={this.state.groupJobs}\n                onChange={(e) => this.setState({ groupJobs: e.target.checked })}\n              />\n              <label htmlFor=\"group-jobs\">Group related jobs</label>\n            </li>\n            <li>\n              <NameFilterForm\n                onSubmit={(filter) => {\n                  this.setState({ jobNameFilter: filter });\n                }}\n                defaultValue={this.props.jobNameFilter}\n              />\n            </li>\n          </ul>\n        </div>\n        {rows.length > 0 ? (\n          <table className=\"buildHistoryTable\">\n            <thead>\n              <tr>\n                <th className=\"left-cell\">Date</th>\n                {visibleJobsHeaders}\n                <th className=\"right-cell\">User</th>\n                {pr_number}\n                {pr_title}\n                {pr_title ? null : <th className=\"right-cell\">PR#</th>}\n                {pr_title ? (\n                  <th className=\"right-cell\">PR Commit Message</th>\n                ) : (\n                  <th className=\"right-cell\">Description</th>\n                )}\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </table>\n        ) : null}\n\n        {loadingInfo}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { ImSpinner2 } from \"react-icons/im\";\n\nexport default class Spin extends Component {\n  render() {\n    return (\n      <div style={{ display: \"inline-block\" }}>\n        <ImSpinner2\n          style={{ fontSize: \"1em\", marginRight: \"5px\" }}\n          className=\"icon-spin\"\n        />\n        <span>{this.props.text}</span>\n      </div>\n    );\n  }\n}\n","// see https://github.com/qoomon/aws-s3-bucket-browser/blob/937147179a9284dc8d98e7a6d52f60e8fdcd7231/index.html#L430\nexport function formatBytes(size) {\n  if (!size) {\n    return \"-\";\n  }\n  const KB = 1024;\n  if (size < KB) {\n    return size + \"  B\";\n  }\n  const MB = 1000000;\n  if (size < MB) {\n    return (size / KB).toFixed(0) + \" KB\";\n  }\n  const GB = 1000000000;\n  if (size < GB) {\n    return (size / MB).toFixed(2) + \" MB\";\n  }\n  return (size / GB).toFixed(2) + \" GB\";\n}\n\n// see https://stackoverflow.com/a/19448718\nexport function parseXml(xml, arrayTags) {\n  let dom = null;\n  if (window.DOMParser) dom = new DOMParser().parseFromString(xml, \"text/xml\");\n  else {\n    throw new Error(\"cannot parse xml string!\");\n  }\n\n  function parseNode(xmlNode, result) {\n    if (xmlNode.nodeName === \"#text\") {\n      let v = xmlNode.nodeValue;\n      if (v.trim()) result[\"#text\"] = v;\n      return;\n    }\n\n    let jsonNode = {},\n      existing = result[xmlNode.nodeName];\n    if (existing) {\n      if (!Array.isArray(existing))\n        result[xmlNode.nodeName] = [existing, jsonNode];\n      else result[xmlNode.nodeName].push(jsonNode);\n    } else {\n      if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) !== -1)\n        result[xmlNode.nodeName] = [jsonNode];\n      else result[xmlNode.nodeName] = jsonNode;\n    }\n\n    if (xmlNode.attributes) {\n      for (let attribute of xmlNode.attributes) {\n        jsonNode[attribute.nodeName] = attribute.nodeValue;\n      }\n    }\n\n    jsonNode.textContent = xmlNode.textContent;\n\n    for (let node of xmlNode.childNodes) parseNode(node, jsonNode);\n  }\n\n  let result = {};\n  for (let node of dom.childNodes) parseNode(node, result);\n\n  return result;\n}\n\nexport async function asyncAll(functions) {\n  // Run a list of arg-less async functions\n  let invoked = functions.map((f) => f());\n  return await Promise.all(invoked);\n}\n\nasync function github_graphql_raw(query) {\n  // Query the GitHub GraphQL API\n  const pat = localStorage.getItem(\"gh_pat\");\n  const result = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      Authorization: \"token \" + pat,\n    },\n    body: JSON.stringify({ query: query }),\n  });\n  if (result.status !== 200) {\n    throw new Error(`Error fetching data from GitHub: ${await result.text()}`);\n  }\n\n  const data = await result.json();\n  if (data.errors) {\n    throw new Error(\n      `Error in GraphQL response: ${JSON.stringify(data.errors)}`\n    );\n  }\n  return data;\n}\n\nasync function github_graphql(query) {\n  return (await github_graphql_raw(query)).data;\n}\n\nexport async function github_json(url) {\n  // Query the GitHub JSON API\n  const pat = localStorage.getItem(\"gh_pat\");\n  const result = await fetch(\"https://api.github.com/\" + url, {\n    headers: {\n      Accept: \"application/vnd.github.v3+json\",\n      Authorization: \"token \" + pat,\n    },\n  });\n  return await result.json();\n}\n\nexport async function github_raw(url) {\n  // Query the GitHub JSON API\n  const pat = localStorage.getItem(\"gh_pat\");\n  const result = await fetch(\"https://api.github.com/\" + url, {\n    headers: {\n      Accept: \"application/vnd.github.v3+json\",\n      Authorization: \"token \" + pat,\n    },\n  });\n\n  return result;\n}\n\nexport let github = {\n  graphql: github_graphql,\n  graphql_raw: github_graphql_raw,\n  json: github_json,\n  raw: github_raw,\n};\n\nexport function setQueryParam(key, value) {\n  let currentUrlParams = new URLSearchParams(window.location.search);\n  currentUrlParams.set(key, value);\n  window.history.pushState(\n    \"\",\n    \"\",\n    window.location.pathname + \"?\" + currentUrlParams.toString()\n  );\n}\n\nexport function queryParam(key) {\n  let currentUrlParams = new URLSearchParams(window.location.search);\n  return currentUrlParams.get(key);\n}\n\nexport async function s3(prefix, bucket) {\n  // List the gha-artifacts S3 bucket by a specific prefix\n  return await fetch(\n    `https://${bucket}.s3.amazonaws.com/?` +\n      new URLSearchParams({\n        \"list-type\": 2,\n        delimiter: \"/\",\n        prefix: prefix,\n        \"max-keys\": 50,\n      })\n  )\n    .then((a) => a.text())\n    .then((a) => parseXml(a));\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { highlightElement } from \"highlight.js\";\nimport { strFromU8, unzipSync } from \"fflate\";\nimport { GoCheck } from \"react-icons/go\";\nimport Spin from \"../Spin.js\";\n\nimport { parseXml } from \"../utils.js\";\n\nclass TestSuite extends Component {\n  constructor(props) {\n    super(props);\n    this.nodeRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.highlight();\n  }\n\n  highlight = () => {\n    if (this.nodeRef) {\n      highlightElement(this.nodeRef.current.children[0], {\n        language: \"python\",\n      });\n    }\n  };\n\n  render() {\n    const tcase = this.props.testcase;\n    let failure = tcase.failure || tcase.error;\n\n    let failures = null;\n    if (Array.isArray(failure)) {\n      failures = failure;\n    } else {\n      failures = [failure];\n    }\n\n    let content = failures.map((f) => f.textContent.trim()).join(\"\\n\\n\");\n\n    let fileinfo = null;\n    if (tcase.file && tcase.line) {\n      fileinfo = (\n        <span style={{ color: \"grey\" }}>\n          {tcase.file}:{tcase.line}:\n        </span>\n      );\n    }\n    return (\n      <Card\n        style={{\n          fontFamily: '\"Monaco\", monospace',\n          marginTop: \"5px\",\n          backgroundColor: \"#ffe5e5\",\n        }}\n      >\n        <Card.Body>\n          <div>\n            <p>\n              {fileinfo}\n              {tcase.classname}.{tcase.name}\n            </p>\n            <pre ref={this.nodeRef}>\n              <code className=\"language-python\">{content}</code>\n            </pre>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass TestSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDetail: false,\n    };\n  }\n\n  render() {\n    const toggle = () => {\n      const prev = this.state.showDetail;\n      this.setState({ showDetail: !prev });\n    };\n    let suiteDetail = null;\n\n    let data = [];\n    for (const [filename, classes] of Object.entries(this.props.info)) {\n      for (const [classname, stats] of Object.entries(classes)) {\n        stats.filename = filename;\n        stats.classname = classname;\n        data.push(stats);\n      }\n    }\n    data = data.sort((a, b) => {\n      a = a.passed + a.error;\n      b = b.passed + b.error;\n      return b - a;\n    });\n    let totals = {\n      passed: 0,\n      error: 0,\n      skipped: 0,\n    };\n    for (const item of data) {\n      totals.passed += item.passed;\n      totals.error += item.error;\n      totals.skipped += item.skipped;\n    }\n    if (this.state.showDetail) {\n      let rows = [];\n      for (const classStats of data) {\n        let filename = classStats.filename.split(\"/\").slice(-1)[0];\n        let name = `${filename}:${classStats.classname}`;\n        rows.push(\n          <tr\n            style={{\n              fontSize: \"12px\",\n              backgroundColor: classStats.error > 0 ? \"#ffe4e4\" : \"white\",\n            }}\n            key={name}\n          >\n            <td style={{ fontFamily: '\"Monaco\", monospace' }}>\n              <span style={{ color: \"grey\" }}>{filename}:</span>\n              <span>{classStats.classname}</span>\n            </td>\n            <td className=\"center\">{classStats.passed}</td>\n            <td className=\"center\">{classStats.error}</td>\n            <td className=\"center\">{classStats.skipped}</td>\n          </tr>\n        );\n      }\n      suiteDetail = (\n        <table style={{ marginTop: \"6px\" }} className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"center\">Name</th>\n              <th className=\"center\">Passed</th>\n              <th className=\"center\">Errors</th>\n              <th className=\"center\">Skipped</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      );\n    }\n    return (\n      <Card\n        style={{\n          marginTop: \"5px\",\n        }}\n      >\n        <Card.Body>\n          <Card.Title style={{ marginBottom: 0 }}>Test Summary</Card.Title>\n          <div>\n            <p style={{ marginBottom: 0 }}>\n              Ran {this.props.totals.cases} test cases in{\" \"}\n              {this.props.totals.classes} classes from {this.props.totals.files}{\" \"}\n              files\n            </p>\n            <p style={{ marginBottom: 0 }}>\n              {totals.passed} tests passed, {totals.error} tests failed,{\" \"}\n              {totals.skipped} tests skipped\n              <button\n                style={{ marginLeft: \"10px\", fontSize: \"0.8em\" }}\n                className=\"btn btn-secondary\"\n                onClick={toggle}\n              >\n                {this.state.showDetail ? \"Hide\" : \"Show\"} Details\n              </button>\n            </p>\n            {suiteDetail}\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\n// Given a URL to a .zip of test reports (as we have in CI), download it then\n// render a summary + the failures in a nice way\nexport default class TestReportRenderer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.update().catch((error) => {\n      console.error(error);\n      this.setState({ updateFailure: error.toString() });\n    });\n  }\n\n  async update() {\n    // Download the test report\n    let buf = await fetch(this.props.testReportZip).then((r) =>\n      r.arrayBuffer()\n    );\n    let reports = {};\n\n    const file = new Uint8Array(buf);\n    let inner = unzipSync(file);\n    for (const innerFilename in inner) {\n      let key = innerFilename\n        .replace(\"test/test-reports/\", \"\")\n        .replace(\".xml\", \"\");\n      reports[key] = parseXml(strFromU8(inner[innerFilename]));\n    }\n\n    let suites = [];\n    for (const filename in reports) {\n      let data = reports[filename];\n      if (data.testsuite) {\n        suites.push(data.testsuite);\n      } else if (data.testsuites) {\n        if (Array.isArray(data.testsuites.testsuite)) {\n          for (const suite of data.testsuites.testsuite) {\n            suites.push(suite);\n          }\n        } else if (data.testsuites.testsuite) {\n          suites.push(data.testsuites.testsuite);\n        }\n      } else {\n        console.error(\"Unknown report type\", data);\n      }\n    }\n\n    let failures = [];\n    let testInfo = {};\n    const totals = {\n      classes: 0,\n      cases: 0,\n      files: 0,\n      time: 0,\n    };\n    for (const suite of suites) {\n      let numErrors = +suite.errors;\n      let numFailures = +suite.failures;\n      let cases = suite.testcase;\n      if (!Array.isArray(cases)) {\n        cases = [cases];\n      }\n      if (numErrors + numFailures > 0) {\n        for (const testcase of cases) {\n          if (testcase.failure || testcase.error) {\n            failures.push(testcase);\n          }\n        }\n      }\n\n      const getStatus = (testcase) => {\n        if (testcase.skipped) {\n          return \"skipped\";\n        }\n        if (testcase.error || testcase.failure) {\n          return \"error\";\n        }\n        return \"passed\";\n      };\n      for (const testcase of cases) {\n        totals.cases += 1;\n        if (!testInfo[testcase.file]) {\n          testInfo[testcase.file] = {};\n          totals.files += 1;\n        }\n        if (!testInfo[testcase.file][testcase.classname]) {\n          totals.classes += 1;\n          testInfo[testcase.file][testcase.classname] = {\n            passed: 0,\n            error: 0,\n            skipped: 0,\n            time: 0,\n            cases: 0,\n          };\n        }\n        totals.time += +testcase.time;\n        testInfo[testcase.file][testcase.classname][getStatus(testcase)] += 1;\n        testInfo[testcase.file][testcase.classname].cases += 1;\n        testInfo[testcase.file][testcase.classname].time += +testcase.time;\n      }\n    }\n    if (this.props.onLoaded) {\n      this.props.onLoaded(failures, totals, testInfo);\n    }\n\n    this.setState({\n      failures: failures,\n      totals: totals,\n      testInfo: testInfo,\n    });\n  }\n\n  renderSummary() {}\n\n  render() {\n    if (!this.state.failures) {\n      if (this.state.updateFailure) {\n        return (\n          <p style={{ color: \"red\" }}>\n            Loading/parsing failed: {this.state.updateFailure}\n          </p>\n        );\n      }\n      return <Spin text=\"Loading test results\" />;\n    }\n\n    let results = [];\n\n    const summary = (\n      <TestSummary info={this.state.testInfo} totals={this.state.totals} />\n    );\n\n    if (this.state.failures.length === 0) {\n      return (\n        <div>\n          {this.props.noSummary ? null : summary}\n          <Card\n            style={{\n              marginTop: \"5px\",\n              backgroundColor: \"#ebffeb\",\n            }}\n          >\n            <Card.Body>\n              <Card.Title style={{ marginBottom: 0 }}>\n                <GoCheck style={{ color: \"#22863a\" }} />{\" \"}\n                <span>All tests passed</span>\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        </div>\n      );\n    }\n\n    let i = 0;\n    for (let testcase of this.state.failures) {\n      results.push(<TestSuite key={i++} testcase={testcase} />);\n    }\n\n    return (\n      <div>\n        {this.props.noSummary ? null : summary}\n        {results}\n      </div>\n    );\n  }\n}\n","export function filterLog(log) {\n  let negativeRegexes = [\n    /Z Entering 'third_party/,\n    /Z http\\.https:\\/\\/github\\.com\\/\\.extraheader/,\n    /Z deleted: sha256/,\n    /Z untagged: sha256/,\n    /Z untagged: .*amazonaws/,\n    /Z \\s*adding: /,\n    /Z \\s*creating: /,\n    /Z \\s*inflating: /,\n    /Z \\s*extracting: /,\n    /Z adding /,\n    /Z copying /,\n    /Z creating /,\n    /Z refs\\/remotes\\/origin/,\n    /Z Synchronizing submodule url for/,\n    /Z Receiving objects:/,\n    /Z Resolving deltas:/,\n    /Z remote: Compressing objects:/,\n    /Z Submodule path /,\n    /Z remote: Counting objects:/,\n    /Z [a-z0-9]{12}: Waiting/,\n    /Z [a-z0-9]{12}: Pulling fs layer/,\n    /Z [a-z0-9]{12}: Verifying Checksum/,\n    /Z [a-z0-9]{12}: Download complete/,\n    /Z [a-z0-9]{12}: Pull complete/,\n    /Z url\\.https:\\/\\/github\\.com/,\n    /Z Generating XML reports/,\n    /Z Generated XML report/,\n    /Z Test results will be stored/,\n  ];\n\n  const lines = log.split(\"\\n\");\n  let newLog = \"\";\n\n  for (const line of lines) {\n    let include = true;\n    for (const regex of negativeRegexes) {\n      if (line.match(regex)) {\n        include = false;\n        break;\n      }\n    }\n    if (include) {\n      newLog += line + \"\\n\";\n    }\n  }\n  return newLog;\n}\n\nexport function registerLogLanguage(monaco, groupRanges) {\n  // Register a new language\n  monaco.languages.register({ id: \"logText\" });\n\n  // Register a tokens provider for the language\n  monaco.languages.setMonarchTokensProvider(\"logText\", {\n    tokenizer: {\n      root: [\n        [/\\[30;1m.*?\\[0m/, \"black\"],\n        [/\\[31;1m.*?\\[0m/, \"red\"],\n        [/\\[32;1m.*?\\[0m/, \"green\"],\n        [/\\[33;1m.*?\\[0m/, \"yellow\"],\n        [/\\[34;1m.*?\\[0m/, \"blue\"],\n        [/\\[35;1m.*?\\[0m/, \"magenta\"],\n        [/\\[36;1m.*?\\[0m/, \"cyan\"],\n        [/\\[37;1m.*?\\[0m/, \"white\"],\n\n        [/\\[30m.*?\\[0m/, \"black\"],\n        [/\\[31m.*?\\[0m/, \"red\"],\n        [/\\[32m.*?\\[0m/, \"green\"],\n        [/\\[33m.*?\\[0m/, \"yellow\"],\n        [/\\[34m.*?\\[0m/, \"blue\"],\n        [/\\[35m.*?\\[0m/, \"magenta\"],\n        [/\\[36m.*?\\[0m/, \"cyan\"],\n        [/\\[37m.*?\\[0m/, \"white\"],\n\n        [/\\[0;1;30m.*?\\[0m/, \"black\"],\n        [/\\[0;1;31m.*?\\[0m/, \"red\"],\n        [/\\[0;1;32m.*?\\[0m/, \"green\"],\n        [/\\[0;1;33m.*?\\[0m/, \"yellow\"],\n        [/\\[0;1;34m.*?\\[0m/, \"blue\"],\n        [/\\[0;1;35m.*?\\[0m/, \"magenta\"],\n        [/\\[0;1;36m.*?\\[0m/, \"cyan\"],\n        [/\\[0;1;37m.*?\\[0m/, \"white\"],\n\n        [/\\[1m.*?\\[0m/, \"cyan\"],\n        [/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{7}Z/, \"hidden\"],\n      ],\n    },\n  });\n\n  // Define a new theme that contains only rules that match this language\n  monaco.editor.defineTheme(\"logTheme\", {\n    base: \"vs-dark\",\n    inherit: true,\n    rules: [\n      { token: \"black\", foreground: \"000000\", fontStyle: \"bold\" },\n      { token: \"red\", foreground: \"af0000\", fontStyle: \"bold\" },\n      { token: \"green\", foreground: \"87d700\", fontStyle: \"bold\" },\n      { token: \"yellow\", foreground: \"d7d700\", fontStyle: \"bold\" },\n      { token: \"blue\", foreground: \"5fd7ff\", fontStyle: \"bold\" },\n      { token: \"magenta\", foreground: \"8700af\", fontStyle: \"bold\" },\n      { token: \"cyan\", foreground: \"00af87\", fontStyle: \"bold\" },\n      { token: \"white\", foreground: \"ffffff\", fontStyle: \"bold\" },\n      { token: \"hidden\", foreground: \"5f5f5f\" },\n    ],\n  });\n\n  monaco.languages.registerFoldingRangeProvider(\"logText\", {\n    provideFoldingRanges: function (model, context, token) {\n      return groupRanges;\n    },\n  });\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Tooltip from \"rc-tooltip\";\nimport TestReportRenderer from \"./TestReportRenderer\";\nimport { github } from \"../utils.js\";\nimport Spin from \"../Spin.js\";\nimport Editor from \"@monaco-editor/react\";\nimport { registerLogLanguage } from \"./logs.js\";\nimport {\n  BsFillQuestionCircleFill,\n  BsFillCaretRightFill,\n  BsFillCaretDownFill,\n} from \"react-icons/bs\";\n\nfunction help(text) {\n  return (\n    <Tooltip\n      key=\"help\"\n      overlay={text}\n      mouseLeaveDelay={0}\n      placement=\"rightTop\"\n      destroyTooltipOnHide={{ keepParent: false }}\n    >\n      <span style={{ fontSize: \"16px\", color: \"#a1a1a1\", cursor: \"pointer\" }}>\n        <BsFillQuestionCircleFill />\n      </span>\n    </Tooltip>\n  );\n}\n\nfunction posToLine(text, idx) {\n  return (text.substring(0, idx).match(/\\n/g) || \"\").length;\n}\n\nfunction guessRelevantLine(text, totalLines) {\n  const idx = Array.from(text.matchAll(/(?<!if-no-files-found: )error/g)).slice(\n    -1\n  )[0].index;\n  const line = posToLine(text, idx);\n  return line;\n}\n\nclass LogViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {\n    let response = await github.raw(this.props.url);\n    let text = await response.text();\n    if (this.props.transform) {\n      text = this.this.props.transform(text);\n    }\n    const totalLines = (text.match(/\\n/g) || \"\").length + 1;\n    this.setState({ text, totalLines });\n  }\n\n  render() {\n    if (!this.state.text) {\n      return <Spin text={\"Downloading logs\"} />;\n    }\n\n    let height = 15;\n    return (\n      <Editor\n        height={`${height}em`}\n        defaultLanguage=\"logText\"\n        defaultValue={this.state.text}\n        theme=\"logTheme\"\n        beforeMount={(monaco) => {\n          const groupRanges = [];\n          registerLogLanguage(monaco, groupRanges);\n        }}\n        options={{\n          scrollBeyondLastLine: false,\n          lineNumbersMinChars: this.state.totalLines.toString().length + 1,\n          folding: true,\n        }}\n        onMount={(editor, monaco) => {\n          let foldAction = editor.getAction(\"editor.foldAll\");\n          foldAction.run().then(() => {\n            let line = parseInt(\n              guessRelevantLine(this.state.text, this.state.totalLines) +\n                height / 2\n            );\n            editor.revealLine(line);\n          });\n        }}\n        loading={<Spin text={\"Loading viewer\"} />}\n      />\n    );\n  }\n}\n\nexport default class FailureReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state.shown = true;\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {}\n\n  render() {\n    let items = [];\n    for (const failure of this.props.failures) {\n      let failedSteps = [];\n      if (failure.data.state !== undefined) {\n        // CircleCI not supported\n        continue;\n      } else {\n        failedSteps = failure.data.checkRuns.nodes.filter(\n          (x) => x.conclusion === \"FAILURE\"\n        );\n      }\n      const workflow = failure.data.workflowRun.workflow.name;\n      let details = null;\n      for (const step of failedSteps) {\n        if (step.name.startsWith(\"test (\") && !step.incorrectReport) {\n          if (!step.artifactUrl) {\n            details = (\n              <div>\n                <Spin text={\"Loading test report\"} />\n              </div>\n            );\n          } else {\n            // test failure, try to download report\n            details = (\n              <TestReportRenderer\n                testReportZip={step.artifactUrl}\n                noSummary={true}\n                onLoaded={(failures, totals, testInfo) => {\n                  if (failures.length === 0) {\n                    step.incorrectReport = true;\n                    this.setState(this.state);\n                  }\n                }}\n              />\n            );\n          }\n        } else {\n          // otherwise, open up the log viewer\n          details = (\n            <LogViewer\n              url={`repos/${this.props.user}/${this.props.repo}/actions/jobs/${step.databaseId}/logs`}\n            />\n          );\n          // details = <p>todo: small log viewer</p>;\n        }\n        items.push(\n          <div\n            style={{ marginBottom: \"10px\" }}\n            key={`fr-${workflow}-${step.name}`}\n          >\n            <span style={{ fontWeight: \"bold\" }}>\n              {workflow} / {step.name}{\" \"}\n              {step.incorrectReport\n                ? help(\n                    \"The XML test report for this job had no failures, but the job failed. This usually means something went wrong outside of a Python unittest.\"\n                  )\n                : null}\n            </span>\n            {details}\n          </div>\n        );\n      }\n    }\n\n    const toggle = () => {\n      this.setState({ shown: !this.state.shown });\n    };\n\n    let icon = (\n      <BsFillCaretRightFill style={{ cursor: \"pointer\" }} onClick={toggle} />\n    );\n    if (this.state.shown) {\n      icon = (\n        <BsFillCaretDownFill style={{ cursor: \"pointer\" }} onClick={toggle} />\n      );\n    }\n    if (items.length === 0) {\n      return null;\n    }\n    return (\n      <Card\n        style={{\n          marginBottom: \"15px\",\n          boxShadow: \"rgb(255 113 113) 0px 0px 9px -3px\",\n          border: \"1px solid #ff6060\",\n        }}\n      >\n        <Card.Body>\n          <Card.Title>\n            GHA Failure Report{\" \"}\n            {help(\"Aggregated information from all failed jobs\")} {icon}\n          </Card.Title>\n          {this.state.shown ? items : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport Editor from \"@monaco-editor/react\";\nimport { filterLog, registerLogLanguage } from \"./logs.js\";\n\nimport { BsFillCaretRightFill, BsFillCaretDownFill } from \"react-icons/bs\";\n\nimport { GoPrimitiveDot, GoCircleSlash, GoCheck, GoX } from \"react-icons/go\";\n\nexport default class CircleCICard extends Component {\n  constructor(props) {\n    super(props);\n    let buildMatch = props.status.targetUrl.match(/pytorch\\/pytorch\\/(\\d+)/);\n    this.state = {\n      showSteps: {},\n    };\n\n    if (buildMatch) {\n      let buildId = buildMatch[1];\n      this.state.url = `https://circleci.com/api/v1.1/project/gh/pytorch/pytorch/${buildId}`;\n    }\n  }\n\n  hasError() {\n    return this.state.errorMessage !== undefined;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (this.hasError()) {\n      return;\n    }\n    if (!this.state.data) {\n      return;\n    }\n    for (const step of this.state.data.steps) {\n      if (!step.log.shown || step.log.text !== undefined) {\n        continue;\n      }\n\n      fetch(step.actions[0].output_url)\n        .then((log) => log.text())\n        .then((log) => {\n          step.log.text = log.replaceAll(\"\\\\n\", \"\\n\").replaceAll(\"\\\\r\", \"\");\n          this.setState(this.state);\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {\n    let response = await fetch(this.state.url);\n    let data = await response.json();\n    delete data.circle_yml;\n\n    for (const step of data.steps) {\n      step.log = {\n        text: undefined,\n        shown: false,\n        logLevel: \"Minimal\",\n      };\n    }\n\n    this.setState({ data: data });\n  }\n\n  renderStatusIcon(status) {\n    status = status.toUpperCase();\n    // Determine the check's status and turn that into an icon\n    const statuses = {\n      SUCCESS: <GoCheck style={{ color: \"#22863a\" }} />,\n      FAILURE: <GoX style={{ color: \"#cb2431\" }} />,\n      FAILED: <GoX style={{ color: \"#cb2431\" }} />,\n      TIMEDOUT: <GoX style={{ color: \"#cb2431\" }} />,\n      NEUTRAL: <GoCircleSlash style={{ color: \"#959da5\" }} />,\n      CANCELLED: <GoCircleSlash style={{ color: \"rgb(255 86 86)\" }} />,\n    };\n\n    return statuses[status] || <GoPrimitiveDot style={{ color: \"#dbab09\" }} />;\n  }\n\n  renderLogViewer(step) {\n    let log = null;\n    const radios = [\"Minimal\", \"All\"];\n    if (step.log.shown) {\n      if (step.log.text) {\n        let logText = null;\n        if (step.log.logLevel === \"All\") {\n          logText = step.log.text;\n        } else {\n          logText = filterLog(step.log.text);\n        }\n\n        const totalLines = (logText.match(/\\n/g) || \"\").length + 1;\n        if (step.log.existingEditor) {\n          step.log.existingEditor.setValue(logText);\n          step.log.existingEditor.revealLine(totalLines);\n        }\n        log = (\n          <div\n            style={{\n              marginBottom: \"20px\",\n            }}\n          >\n            <div className=\"hideRadio\">\n              <span>Log Level: </span>\n              <div style={{ display: \"inline\" }}>\n                <ButtonGroup>\n                  {radios.map((radio, idx) => (\n                    <ToggleButton\n                      key={idx}\n                      id={`radio-${idx}`}\n                      type=\"radio\"\n                      variant=\"outline-info\"\n                      name=\"radio\"\n                      value={radio}\n                      checked={step.log.logLevel === radio}\n                      onChange={(e) => {\n                        step.log.logLevel = radio;\n                        this.setState(this.state);\n                      }}\n                    >\n                      {radio}\n                    </ToggleButton>\n                  ))}\n                </ButtonGroup>\n              </div>\n            </div>\n            <Editor\n              height=\"80vh\"\n              defaultLanguage=\"logText\"\n              defaultValue={logText}\n              theme=\"logTheme\"\n              beforeMount={(monaco) => {\n                const groupRanges = [];\n                registerLogLanguage(monaco, groupRanges);\n              }}\n              options={{\n                scrollBeyondLastLine: false,\n                lineNumbersMinChars: totalLines.toString().length + 1,\n                folding: true,\n              }}\n              onMount={(editor, monaco) => {\n                step.log.existingEditor = editor;\n                let foldAction = editor.getAction(\"editor.foldAll\");\n                foldAction.run().then(() => {\n                  editor.revealLine(totalLines);\n                });\n              }}\n              loading={<p>Loading viewer...</p>}\n            />\n          </div>\n        );\n      } else {\n        log = <p>Fetching logs...</p>;\n      }\n    }\n    return log;\n  }\n\n  render() {\n    const status = this.props.status;\n\n    let stepsElement = null;\n    let artifactsElement = null;\n\n    if (this.state.data) {\n      let steps = [];\n      for (const [i, step] of this.state.data.steps.entries()) {\n        const name = step.name;\n\n        let statusIcon = this.renderStatusIcon(step.actions[0].status);\n        const iconStyle = { cursor: \"pointer\" };\n        // Show the log viewer + toggle chevron\n        const toggle = () => {\n          step.log.shown = !step.log.shown;\n          this.setState(this.state);\n        };\n        let icon = <BsFillCaretRightFill style={iconStyle} onClick={toggle} />;\n        if (step.log.shown) {\n          icon = <BsFillCaretDownFill style={iconStyle} onClick={toggle} />;\n        }\n\n        steps.push(\n          <div\n            style={{ marginBottom: \"2px\" }}\n            key={`status-${status.context}-${name}-${i}`}\n          >\n            {statusIcon} <span>{name}</span> {icon} {this.renderLogViewer(step)}\n            {/* TODO: These are unimplemented for now since CircleCI provides\n             a good view into them already */}\n            {/* {renderResultsButton} */}\n            {/* {artifactDetails} */}\n          </div>\n        );\n      }\n      stepsElement = <div style={{ padding: \"6px\" }}>{steps}</div>;\n    }\n\n    return (\n      <Card key={\"card-\" + status.context}>\n        <Card.Body\n          style={{\n            backgroundColor:\n              status.state === \"FAILURE\" ? \"rgb(255 243 243)\" : null,\n          }}\n        >\n          <Card.Title>\n            <a href={status.targetUrl}>{status.context}</a>\n          </Card.Title>\n          <div>\n            {stepsElement}\n            {artifactsElement}\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport FailureReport from \"./pr/FailureReport.js\";\nimport TestReportRenderer from \"./pr/TestReportRenderer.js\";\nimport Editor from \"@monaco-editor/react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { filterLog, registerLogLanguage } from \"./pr/logs.js\";\nimport CircleCICard from \"./pr/CircleCICard.js\";\nimport Spin from \"./Spin.js\";\nimport { BsFillCaretRightFill, BsFillCaretDownFill } from \"react-icons/bs\";\n\nimport { GoPrimitiveDot, GoCircleSlash, GoCheck, GoX } from \"react-icons/go\";\n\nimport {\n  formatBytes,\n  asyncAll,\n  s3,\n  github,\n  setQueryParam,\n  queryParam,\n} from \"./utils.js\";\n\nconst PREVIEW_BASE_URL = \"https://docs-preview.pytorch.org\";\n\n// Returns true if the location is local or a deploy preview\nfunction isOnDevelopmentHost() {\n  return (\n    window.location.href.startsWith(\"http://localhost\") ||\n    window.location.href.startsWith(\"https://deploy-preview\")\n  );\n}\n\nfunction getCommitsForPrQuery(user, repo, number) {\n  return `\n    {\n      repository(name: \"${repo}\", owner: \"${user}\") {\n        pullRequest(number: ${number}) {\n          commits(last: 100) {\n            nodes {\n              commit {\n                oid\n                messageHeadline\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\nfunction getPrQuery(user, repo, number) {\n  return `\n    {\n      repository(name: \"${repo}\", owner: \"${user}\") {\n        pullRequest(number: ${number}) {\n          title\n          number\n          url\n          body\n          comments(last: 10) {\n            nodes {\n              author {\n                login\n              }\n              body\n            }\n          }\n          commits(last: 1) {\n            nodes {\n              commit {\n                messageHeadline\n                oid\n                status {\n                  contexts {\n                    description\n                    context\n                    targetUrl\n                    state\n                  }\n                }\n                checkSuites(last: 100) {\n                  nodes {\n                    databaseId\n                    workflowRun {\n                      runNumber\n                      id\n                      databaseId\n                      workflow {\n                        name\n                        databaseId\n                      }\n                      url\n                    }\n                    checkRuns(last: 100) {\n                      nodes {\n                        name\n                        title\n                        status\n                        conclusion\n                        text\n                        databaseId\n                        detailsUrl\n                        summary\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\nfunction getCommitQuery(user, repo, hash) {\n  return `\n    {\n      repository(name: \"${repo}\", owner: \"${user}\") {\n        object(oid:\"${hash}\") {\n          ... on Commit {\n            history(first: 1) {\n              nodes {\n                oid\n                commitUrl\n                messageHeadline\n                messageBody\n                status {\n                  contexts {\n                    description\n                    context\n                    targetUrl\n                    state\n                  }\n                }\n                checkSuites(last: 100) {\n                  nodes {\n                    databaseId\n                    workflowRun {\n                      runNumber\n                      id\n                      databaseId\n                      workflow {\n                        name\n                        databaseId\n                      }\n                      url\n                    }\n                    checkRuns(last: 100) {\n                      nodes {\n                        name\n                        title\n                        status\n                        conclusion\n                        text\n                        databaseId\n                        detailsUrl\n                        summary\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\nexport default class PrDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.update({\n      selectedCommit: queryParam(\"prCommit\"),\n    }).catch((error) => {\n      console.error(error);\n      this.setState({ error_message: error.toString() });\n    });\n  }\n\n  isPr() {\n    return this.props.pr_number !== undefined;\n  }\n  hasError() {\n    return this.state.error_message !== undefined;\n  }\n\n  extractItem(result, key) {\n    // Some of the stuff from s3 can come in as a single object or an array,\n    // so unpack that here\n    if (!result[key]) {\n      return null;\n    }\n\n    if (Array.isArray(result[key])) {\n      return result[key];\n    }\n    return [result[key]];\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (this.hasError()) {\n      return;\n    }\n    for (const run of this.state.runs) {\n      for (const check of run.checkRuns.nodes) {\n        if (!check.log.shown || check.log.text !== null) {\n          continue;\n        }\n\n        github\n          .raw(\n            `repos/${this.props.user}/${this.props.repo}/actions/jobs/${check.databaseId}/logs`\n          )\n          .then((log) => log.text())\n          .then((log) => {\n            check.log.text = log;\n            this.setState(this.state);\n          });\n      }\n    }\n  }\n\n  async update(params) {\n    // Set some global persistent state to redirect back to this window for log\n    // ins\n    localStorage.setItem(\"last_redirect\", window.location.href);\n\n    if (isOnDevelopmentHost()) {\n      // If we're in development, prompt the user for a token to manually enter\n      if (!localStorage.getItem(\"gh_pat\")) {\n        const token = prompt(\n          'In development mode, GitHub API token not found. You can get it from hud.pytorch.org by running localStorage.getItem(\"gh_pat\") in the JavaScript console.'\n        );\n        if (token) {\n          localStorage.setItem(\"gh_pat\", token);\n        }\n      }\n    }\n\n    if (this.hasError()) {\n      return;\n    }\n\n    if (!localStorage.getItem(\"gh_pat\")) {\n      this.setState({ error_message: \"GitHub token no found, please log in\" });\n      return;\n    }\n    let pr = undefined;\n    let commit = undefined;\n    if (this.isPr()) {\n      // Fetch the PR's info from GitHub's GraphQL API\n      let commitResponse = null;\n      if (params && params.selectedCommit) {\n        const selectedCommit = params.selectedCommit;\n        commitResponse = await github.graphql(\n          getCommitQuery(this.props.user, this.props.repo, selectedCommit)\n        );\n      }\n      let [prResult, prCommits] = await Promise.all([\n        github.graphql(\n          getPrQuery(this.props.user, this.props.repo, this.props.pr_number)\n        ),\n        github.graphql(\n          getCommitsForPrQuery(\n            this.props.user,\n            this.props.repo,\n            this.props.pr_number\n          )\n        ),\n      ]);\n      pr = prResult.repository.pullRequest;\n      pr.allCommits = prCommits.repository.pullRequest.commits.nodes\n        .map((n) => [n.commit.oid, n.commit.messageHeadline])\n        .reverse();\n      if (pr === null || pr === undefined) {\n        this.state.error_message = \"Failed to fetch PR \" + this.props.pr_number;\n        this.setState(this.state);\n        return;\n      }\n      if (commitResponse) {\n        pr.commits.nodes = [\n          { commit: commitResponse.repository.object.history.nodes[0] },\n        ];\n      }\n      commit = pr.commits.nodes[0].commit;\n    } else {\n      let commitResponse = await github.graphql(\n        getCommitQuery(this.props.user, this.props.repo, this.props.commit_hash)\n      );\n      if (commitResponse.repository.object == null) {\n        this.setState({\n          error_message: `Failed to fetch ${this.props.commit_hash}`,\n        });\n        return;\n      }\n      commit = commitResponse.repository.object.history.nodes[0];\n    }\n\n    // The GraphQL API doesn't have any types for artifacts (at least as far as\n    // I can tell), so we have to fall back to iterating through them all via\n    // the v3 JSON API\n    let workflow_runs = commit.checkSuites.nodes;\n    workflow_runs = workflow_runs.filter((x) => x.workflowRun);\n    workflow_runs.forEach((run) => {\n      run.checkRuns.nodes.forEach((check) => {\n        check.log = {\n          text: null,\n          shown: false,\n          logLevel: \"Minimal\",\n        };\n      });\n    });\n    await asyncAll(\n      workflow_runs.map((run) => {\n        return async () => {\n          let id = run.workflowRun.databaseId;\n          run.artifacts = await github.json(\n            `repos/${this.props.user}/${this.props.repo}/actions/runs/${id}/artifacts`\n          );\n        };\n      })\n    );\n\n    workflow_runs = workflow_runs.sort((a, b) =>\n      a.workflowRun.workflow.name.toUpperCase() >\n      b.workflowRun.workflow.name.toUpperCase()\n        ? 1\n        : -1\n    );\n    for (const run of workflow_runs) {\n      run.status = this.mergeStatuses(\n        run.checkRuns.nodes.map((check) => check.conclusion)\n      );\n    }\n    let statuses = [];\n    if (commit.status) {\n      statuses = commit.status.contexts;\n    }\n    this.setState({\n      pr: pr,\n      commit: commit,\n      runs: workflow_runs,\n      statuses: statuses,\n      loadingNewCommit: false,\n      selectedCommit: commit.oid,\n    });\n\n    // Go through all the runs and check if there is a prefix for the workflow\n    // run in S3 (indicating that there are some relevant artifacts stored\n    // there)\n    let promises = this.state.runs.map((run) => {\n      run.s3_artifacts = [];\n      if (this.props.repo !== \"pytorch\") {\n        // Ignore for non-pytorch/pytorch repos\n        return async () => {\n          // Intentional no-op\n          return;\n        };\n      }\n      return async () => {\n        // Check that the workflow run exists\n        let result = await s3(\n          `pytorch/pytorch/${run.workflowRun.databaseId}/`,\n          \"gha-artifacts\"\n        );\n\n        let prefixes = this.extractItem(\n          result.ListBucketResult,\n          \"CommonPrefixes\"\n        );\n\n        // If anything was found, go through the results and add the items to\n        // the 'run' object in place\n        if (prefixes && prefixes.length > 0) {\n          for (const prefixItem of prefixes) {\n            let prefix = prefixItem.Prefix[\"#text\"];\n            let result = await s3(prefix, \"gha-artifacts\");\n            let contents = this.extractItem(\n              result.ListBucketResult,\n              \"Contents\"\n            );\n            for (const content of contents) {\n              run.s3_artifacts.push(content);\n            }\n          }\n        }\n      };\n    });\n    await asyncAll(promises);\n    this.setState(this.state);\n  }\n\n  renderDocPreviewButton() {\n    // Search through all the checks for a docs build, if it's completed then\n    // assume it's also been uploaded to S3 (which should happen as part of the\n    // docs build on PRs)\n    let python = null;\n    let cpp = null;\n\n    const runIsPassing = (name) => {\n      for (const run of this.state.runs) {\n        for (const check of run.checkRuns.nodes) {\n          if (\n            check.name === name &&\n            check.status === \"COMPLETED\" &&\n            check.conclusion === \"SUCCESS\"\n          ) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n\n    if (this.state.runs) {\n      if (runIsPassing(\"build-docs (python)\")) {\n        python = (\n          <a\n            href={`${PREVIEW_BASE_URL}/${this.props.pr_number}/index.html`}\n            target=\"_blank\"\n            className=\"btn btn-primary\"\n            style={{ marginRight: \"5px\" }}\n            rel=\"noreferrer\"\n          >\n            Python Docs\n          </a>\n        );\n      }\n      if (runIsPassing(\"build-docs (cpp)\")) {\n        cpp = (\n          <a\n            href={`${PREVIEW_BASE_URL}/${this.props.pr_number}/cppdocs/index.html`}\n            target=\"_blank\"\n            className=\"btn btn-primary\"\n            rel=\"noreferrer\"\n          >\n            C++ Docs\n          </a>\n        );\n      }\n    }\n    return (\n      <div style={{ paddingBottom: \"5px\" }}>\n        {python}\n\n        {cpp}\n      </div>\n    );\n  }\n\n  renderTitle() {\n    let title = null;\n    if (this.state.commit) {\n      if (this.isPr()) {\n        title = (\n          <div>\n            <h3>\n              <a\n                href={`https://github.com/${this.props.user}/${this.props.repo}/pull/${this.props.pr_number}`}\n              >\n                {this.state.pr.title} (#{this.props.pr_number})\n              </a>\n            </h3>\n          </div>\n        );\n      } else {\n        let subject = this.state.commit.messageHeadline;\n        let headline = <p>{subject}</p>;\n        let match = subject.match(/\\(#([\\d]+)\\)$/);\n        if (match && match[1]) {\n          let pr_number = match[1];\n          subject = subject.replace(match[0], \"\");\n          headline = (\n            <p>\n              {subject}{\" \"}\n              <a\n                href={`https://github.com/${this.props.user}/${this.props.repo}/pull/${pr_number}`}\n              >\n                (#{pr_number})\n              </a>\n            </p>\n          );\n        }\n\n        title = (\n          <div>\n            <h2>\n              Commit{\" \"}\n              <a href={this.state.commit.commitUrl}>\n                {this.state.commit.oid.slice(0, 7)}\n              </a>\n            </h2>\n            {headline}\n          </div>\n        );\n      }\n    }\n    return title;\n  }\n\n  findDiffInComments(comments) {\n    let diff = null;\n    for (const comment of comments) {\n      // We don't care about user supplied updates from ghstack since those are\n      // in the PR body\n      if (comment.author.login === \"facebook-github-bot\") {\n        let match = comment.body.match(\n          /https:\\/\\/www\\.internalfb\\.com\\/diff\\/(D\\d+)/\n        );\n        if (match) {\n          diff = match[1];\n        }\n      }\n    }\n    return diff;\n  }\n\n  renderDiff() {\n    if (!this.state.commit) {\n      return null;\n    }\n\n    // Try to find the diff in the commit message or PR body\n    let text = this.state.commit.messageBody;\n    let diff = null;\n    if (this.isPr()) {\n      text = this.state.pr.body;\n    }\n    const match = text.match(/Differential Revision: (\\[)?(D\\d+)(\\])?/);\n    if (match) {\n      diff = match[2];\n    }\n\n    if (!diff && this.isPr()) {\n      // If we didn't find a diff, search the PR comment for facebook-github-bot\n      // comments\n      diff = this.findDiffInComments(this.state.pr.comments.nodes);\n    }\n\n    return <a href={`https://www.internalfb.com/diff/${diff}`}>{diff}</a>;\n  }\n\n  renderBody() {\n    if (!this.state.commit) {\n      return null;\n    }\n\n    let text = this.state.commit.messageBody;\n    if (this.isPr()) {\n      text = this.state.pr.body;\n    }\n\n    return (\n      <div style={{ maxHeight: \"13em\", overflow: \"scroll\", margin: \"10px\" }}>\n        <ReactMarkdown children={text} />\n      </div>\n    );\n  }\n\n  getGroupRanges(monaco, text) {\n    const lines = text.split(\"\\n\");\n    const starts = [];\n    const ends = [];\n    let lineNumber = 0;\n    for (const line of lines) {\n      if (line.includes(\"##[group]\")) {\n        starts.push(lineNumber);\n      } else if (line.includes(\"##[endgroup]\")) {\n        ends.push(lineNumber);\n      }\n      lineNumber += 1;\n    }\n    let ranges = [];\n    for (let i = 0; i < Math.min(starts.length, ends.length); i++) {\n      ranges.push({\n        start: starts[i] + 1,\n        end: ends[i] + 1,\n        kind: monaco.languages.FoldingRangeKind.Imports,\n      });\n    }\n    return ranges;\n  }\n\n  renderLogViewer(check) {\n    let log = null;\n    let isShowing = false;\n    const radios = [\"Minimal\", \"All\"];\n    if (check.log.shown) {\n      isShowing = true;\n      if (check.log.text) {\n        let logText = null;\n        if (check.log.logLevel === \"All\") {\n          logText = check.log.text;\n        } else {\n          logText = filterLog(check.log.text);\n        }\n\n        const totalLines = (logText.match(/\\n/g) || \"\").length + 1;\n        if (check.log.existingEditor) {\n          check.log.existingEditor.setValue(logText);\n          check.log.existingEditor.revealLine(totalLines);\n        }\n\n        log = (\n          <div\n            style={{\n              marginBottom: \"20px\",\n            }}\n          >\n            <div className=\"hideRadio\">\n              <span>Log Level: </span>\n              <div style={{ display: \"inline\" }}>\n                <ButtonGroup>\n                  {radios.map((radio, idx) => (\n                    <ToggleButton\n                      key={idx}\n                      id={`radio-${idx}`}\n                      type=\"radio\"\n                      variant=\"outline-info\"\n                      name=\"radio\"\n                      value={radio}\n                      checked={check.log.logLevel === radio}\n                      onChange={(e) => {\n                        check.log.logLevel = radio;\n                        this.setState(this.state);\n                      }}\n                    >\n                      {radio}\n                    </ToggleButton>\n                  ))}\n                </ButtonGroup>\n              </div>\n            </div>\n            <Editor\n              height=\"80vh\"\n              defaultLanguage=\"logText\"\n              defaultValue={logText}\n              theme=\"logTheme\"\n              beforeMount={(monaco) => {\n                const groupRanges = this.getGroupRanges(monaco, logText);\n                registerLogLanguage(monaco, groupRanges);\n              }}\n              options={{\n                scrollBeyondLastLine: false,\n                lineNumbersMinChars: totalLines.toString().length + 1,\n                folding: true,\n              }}\n              onMount={(editor, monaco) => {\n                check.log.existingEditor = editor;\n                let foldAction = editor.getAction(\"editor.foldAll\");\n                foldAction.run().then(() => {\n                  editor.revealLine(totalLines);\n                });\n              }}\n              loading={<p>Loading viewer...</p>}\n            />\n          </div>\n        );\n      } else {\n        log = <p>Fetching logs...</p>;\n      }\n    }\n    return [log, isShowing];\n  }\n\n  getArtifactName(checkName) {\n    return (\n      checkName\n        .replace(\"(\", \"\")\n        .replace(\")\", \"\")\n        .replace(\"test \", \"test-reports-test-\")\n        .replaceAll(\", \", \"-\") + \".zip\"\n    );\n  }\n\n  renderChecks(checkRuns, s3Artifacts) {\n    const checks = [];\n    const testResultArtifacts = {};\n    if (!s3Artifacts) {\n      s3Artifacts = [];\n    }\n    let artifactsByName = {};\n    for (const artifact of s3Artifacts) {\n      let prefix = artifact.Key[\"#text\"];\n      let name = prefix.split(\"/\").slice(-1)[0];\n      artifactsByName[name] = artifact;\n    }\n\n    for (const [index, check] of checkRuns.entries()) {\n      // Show the log viewer + toggle chevron\n      const toggle = () => {\n        check.log.shown = !check.log.shown;\n        this.setState(this.state);\n      };\n      const [log, isShowing] = this.renderLogViewer(check);\n      const iconStyle = { cursor: \"pointer\" };\n      let icon = <BsFillCaretRightFill style={iconStyle} onClick={toggle} />;\n      if (isShowing) {\n        icon = <BsFillCaretDownFill style={iconStyle} onClick={toggle} />;\n      }\n\n      // Determine the check's status and turn that into an icon\n      const statuses = {\n        SUCCESS: <GoCheck style={{ color: \"#22863a\" }} />,\n        FAILURE: <GoX style={{ color: \"#cb2431\" }} />,\n        NEUTRAL: <GoCircleSlash style={{ color: \"#959da5\" }} />,\n        CANCELLED: <GoCircleSlash style={{ color: \"rgb(255 86 86)\" }} />,\n      };\n      let statusIcon = statuses[check.conclusion] || (\n        <GoPrimitiveDot style={{ color: \"#dbab09\" }} />\n      );\n\n      let renderResultsButton = null;\n      let artifactDetails = null;\n      let artifactName = this.getArtifactName(check.name);\n      if (artifactsByName[artifactName]) {\n        const artifact = artifactsByName[artifactName];\n        const size = formatBytes(parseInt(artifact.Size[\"#text\"]));\n        renderResultsButton = (\n          <button\n            style={{ marginLeft: \"5px\", fontSize: \"0.7em\", fontWeight: \"bold\" }}\n            className=\"btn btn-info\"\n            onClick={async () => {\n              // showReport might be undefined the first time so explicitly\n              // spell it out here to avoid any falsiness\n              if (artifact.showReport) {\n                artifact.showReport = false;\n              } else {\n                artifact.showReport = true;\n              }\n              this.setState(this.state);\n              this.render();\n            }}\n          >\n            {artifact.showReport ? \"Hide\" : `Tests (${size})`}\n          </button>\n        );\n        testResultArtifacts[artifact.Key[\"#text\"]] = true;\n        let prefix = artifact.Key[\"#text\"];\n        check.artifactUrl = `https://gha-artifacts.s3.amazonaws.com/${prefix}`;\n        check.artifact = artifact;\n\n        if (artifact.showReport) {\n          const key = `s3-${check.name}-${artifactName}`;\n          let prefix = artifact.Key[\"#text\"];\n          let url = `https://gha-artifacts.s3.amazonaws.com/${prefix}`;\n          artifactDetails = (\n            <TestReportRenderer testReportZip={url} key={key} />\n          );\n        }\n      }\n      checks.push({\n        data: check,\n        element: (\n          <div style={{ marginBottom: \"2px\" }} key={\"check-run-\" + index}>\n            {statusIcon} <a href={check.detailsUrl}>{check.name}</a> {icon}{\" \"}\n            {log}\n            {renderResultsButton}\n            {artifactDetails}\n          </div>\n        ),\n      });\n    }\n    return [checks, testResultArtifacts];\n  }\n\n  renderArtifact(args) {\n    if (args.expired) {\n      return (\n        <div key={`${args.kind}-${args.index}`}>\n          <span>\n            [{args.kind}] {args.name}\n          </span>{\" \"}\n          <span>({formatBytes(args.size_in_bytes)}) (expired)</span>\n        </div>\n      );\n    } else {\n      return (\n        <div key={`${args.kind}-${args.index}`}>\n          <a href={args.url}>\n            [{args.kind}] {args.name}\n          </a>{\" \"}\n          <span>({formatBytes(args.size_in_bytes)})</span>\n          {args.extra}\n        </div>\n      );\n    }\n  }\n\n  renderGitHubArtifacts(run) {\n    let artifacts = [];\n    for (const [index, artifact] of run.artifacts.artifacts.entries()) {\n      // The URL in the response is for the API, not browsers, so make it\n      // manually\n      let url = `https://github.com/${this.props.user}/${this.props.repo}/suites/${run.databaseId}/artifacts/${artifact.id}`;\n      if (artifact.name.startsWith(\"test-reports-\")) {\n        continue;\n      }\n      artifacts.push(\n        this.renderArtifact({\n          kind: \"gha\",\n          index: index,\n          name: artifact.name,\n          size_in_bytes: artifact.size_in_bytes,\n          url: url,\n          expired: artifact.expired,\n        })\n      );\n    }\n    return artifacts;\n  }\n\n  renderS3Artifacts(run, testResultArtifacts) {\n    let artifacts = [];\n    if (run.s3_artifacts) {\n      for (const [index, artifact] of run.s3_artifacts.entries()) {\n        if (testResultArtifacts[artifact.Key[\"#text\"]]) {\n          // Already shown inline with a step, so don't show it again\n          continue;\n        }\n        let prefix = artifact.Key[\"#text\"];\n        let url = `https://gha-artifacts.s3.amazonaws.com/${prefix}`;\n\n        artifacts.push(\n          this.renderArtifact({\n            kind: \"s3\",\n            index: index,\n            name: prefix.split(\"/\").slice(-1),\n            size_in_bytes: parseInt(artifact.Size[\"#text\"]),\n            url: url,\n            expired: false,\n          })\n        );\n      }\n    }\n    return artifacts;\n  }\n\n  mergeStatuses(statuses) {\n    if (statuses.length === 0) {\n      return \"SKIPPED\";\n    }\n    const counts = {\n      FAILURE: 0,\n      NEUTRAL: 0,\n      CANCELLED: 0,\n      SUCCESS: 0,\n    };\n    for (const status of statuses) {\n      counts[status] += 1;\n    }\n    if (counts.FAILURE > 0) {\n      return \"FAILURE\";\n    }\n    if (counts.NEUTRAL + counts.CANCELLED === statuses.length) {\n      return \"SKIPPED\";\n    }\n    if (counts.SUCCESS === statuses.length) {\n      return \"SUCCESS\";\n    }\n    if (counts.NEUTRAL === statuses.length) {\n      return \"SKIPPED\";\n    }\n    return \"PENDING\";\n  }\n\n  renderGroups(groups) {\n    let cards = [];\n    for (const [title, data] of Object.entries(groups)) {\n      if (!data.show) {\n        continue;\n      }\n      let isExpanded = this.state.showGroups.includes(title);\n      const toggleGroup = () => {\n        if (this.state.showGroups.includes(title)) {\n          this.state.showGroups.pop(this.state.showGroups.indexOf(title));\n        } else {\n          this.state.showGroups.push(title);\n        }\n        this.setState(this.state);\n      };\n\n      let icon = (\n        <BsFillCaretRightFill\n          style={{ cursor: \"pointer\" }}\n          onClick={toggleGroup}\n        />\n      );\n      let items = [];\n      if (isExpanded) {\n        icon = (\n          <BsFillCaretDownFill\n            style={{ cursor: \"pointer\" }}\n            onClick={toggleGroup}\n          />\n        );\n        items = data.items;\n      }\n      let card = (\n        <Card key={\"group-card-\" + title}>\n          <Card.Body>\n            <Card.Title>\n              {title} {icon}\n            </Card.Title>\n            {items}\n          </Card.Body>\n        </Card>\n      );\n      cards.push({ data: { status: \"GROUP\" }, element: card });\n    }\n    return cards;\n  }\n\n  renderCommitSelector() {\n    if (\n      !this.state.pr ||\n      !this.state.pr.allCommits ||\n      this.state.pr.allCommits.length === 0\n    ) {\n      return null;\n    }\n    let items = [];\n    for (const [oid, message] of this.state.pr.allCommits) {\n      items.push(\n        <option key={`oid-${oid}`} value={oid}>\n          {message} ({oid.substring(0, 7)})\n        </option>\n      );\n    }\n    let loading = null;\n    if (this.state.loadingNewCommit) {\n      loading = (\n        <span style={{ marginLeft: \"10px\" }}>\n          <Spin text=\"Loading\" />\n        </span>\n      );\n    }\n    return (\n      <div style={{ margin: \"4px\" }}>\n        <span>\n          <a\n            href={`https://github.com/pytorch/pytorch/commit/${this.state.commit.oid}`}\n          >\n            Commit:\n          </a>\n        </span>\n        <select\n          style={{\n            marginLeft: \"10px\",\n            borderRadius: \"4px\",\n          }}\n          value={this.state.selectedCommit}\n          onChange={async (e) => {\n            this.setState({ loadingNewCommit: true });\n            setQueryParam(\"prCommit\", e.target.value);\n            await this.update({ selectedCommit: e.target.value });\n          }}\n        >\n          {items}\n        </select>\n        {loading}\n      </div>\n    );\n  }\n\n  render() {\n    let runs = [];\n    let groups = {\n      \"Add annotations\": {},\n      \"Close stale pull requests\": {},\n      \"Label PRs & Issues\": {},\n      Triage: {},\n      \"Update S3 HTML indices for download.pytorch.org\": {},\n    };\n    Object.entries(groups).forEach((x) => {\n      x[1].show = false;\n      x[1].items = [];\n    });\n\n    if (this.state.runs) {\n      // Render all of the check runs as a list\n\n      for (const [run_index, run] of this.state.runs.entries()) {\n        const [checksData, testResultArtifacts] = this.renderChecks(\n          run.checkRuns.nodes,\n          run.s3_artifacts\n        );\n        const checks = checksData.map((x) => x.element);\n\n        let artifacts = [];\n\n        // List out artifacts hosted on GitHub\n        if (run.artifacts) {\n          if (run.artifacts.artifacts !== undefined) {\n            artifacts = artifacts.concat(this.renderGitHubArtifacts(run));\n          } else {\n            artifacts.push(\n              <div key={`artifact-${run.databaseId}`}>\n                <span>Can't query artifacts (hit GitHub rate limit)</span>\n              </div>\n            );\n          }\n        }\n\n        // List out artifacts from s3\n        artifacts = artifacts.concat(\n          this.renderS3Artifacts(run, testResultArtifacts)\n        );\n\n        // If there were any artifacts, set up the 'div' to show them\n        let artifactsElement = <div></div>;\n        if (artifacts.length > 0) {\n          artifactsElement = (\n            <div style={{ padding: \"6px\" }}>\n              <h5>Artifacts</h5>\n              {artifacts}\n            </div>\n          );\n        }\n\n        let checksElement = <div></div>;\n        if (checks.length > 0) {\n          checksElement = <div style={{ padding: \"6px\" }}>{checks}</div>;\n        }\n\n        // Wrap up everything in a card\n        const title = run.workflowRun.workflow.name;\n        const card = (\n          <Card key={\"card-\" + run_index}>\n            <Card.Body\n              style={{\n                backgroundColor:\n                  run.status === \"FAILURE\" ? \"rgb(255 243 243)\" : null,\n              }}\n            >\n              <Card.Title>\n                <a href={run.workflowRun.url}>{title}</a>\n              </Card.Title>\n              <div>\n                {checksElement}\n                {artifactsElement}\n              </div>\n            </Card.Body>\n          </Card>\n        );\n\n        // Some jobs are uninteresting and there are a bunch of them, so group\n        // them all together here\n        if (title in groups) {\n          groups[title].show = true;\n          if (this.state.showGroups.includes(title)) {\n            groups[title].show = true;\n            groups[title].items.push(card);\n          }\n        } else {\n          // A normal job, show it without any extras\n          runs.push({ data: run, element: card });\n        }\n      }\n    }\n\n    // Groups are all stored in the 'groups' map, so add them to the list of runs\n    // as cards\n    runs = runs.concat(this.renderGroups(groups));\n\n    let loading = null;\n    if (this.state.error_message) {\n      loading = <p style={{ color: \"red\" }}> {this.state.error_message}</p>;\n    } else if (!this.state.commit) {\n      loading = <p>Loading... (make sure you are signed in)</p>;\n    }\n\n    if (this.state.statuses) {\n      for (const status of this.state.statuses) {\n        if (!status.targetUrl.includes(\"https://circleci.com\")) {\n          continue;\n        }\n        status.status = status.state;\n        runs.push({\n          data: status,\n          element: <CircleCICard key={status.context} status={status} />,\n        });\n      }\n    }\n\n    let displayRuns = [];\n    function add(type) {\n      for (const run of runs) {\n        if (run.data.status === type) {\n          run.used = true;\n          displayRuns.push(\n            <div key={run.data.databaseId} style={{ marginBottom: \"4px\" }}>\n              {run.element}\n            </div>\n          );\n        }\n      }\n    }\n    add(\"FAILURE\");\n    add(\"ERROR\");\n    add(\"PENDING\");\n    add(\"SUCCESS\");\n    add(\"GROUP\");\n    add(\"SKIPPED\");\n\n    for (const run of runs) {\n      if (!run.used) {\n        console.error(\"Unused run with state\", run.data.status);\n      }\n    }\n\n    const failures = runs.filter((run) => run.data.status === \"FAILURE\");\n    let report = null;\n    if (failures.length > 0) {\n      report = (\n        <FailureReport\n          user={this.props.user}\n          repo={this.props.repo}\n          failures={failures}\n        />\n      );\n    }\n\n    if (this.state.runs && displayRuns.length === 0) {\n      displayRuns = <p style={{ fontWeight: \"bold\" }}>No jobs found</p>;\n    }\n\n    return (\n      <div>\n        {this.renderTitle()}\n        {this.renderDiff()}\n        {this.renderBody()}\n        {loading}\n\n        {this.renderDocPreviewButton()}\n        {this.renderCommitSelector()}\n        {report}\n        <div>{displayRuns}</div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\";\nimport Chart from \"@toast-ui/chart\";\n\nexport default class JobCorrelationHeatmap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  correlateJobs(all_jobs) {\n    let passes = [\"success\", \"skipped\", \"pending\", \"queued\"];\n    const seen_names = {};\n    const correlationMatrix = {};\n\n    const addFailure = (failure1, failure2) => {\n      seen_names[failure1] = true;\n      seen_names[failure2] = true;\n      if (!correlationMatrix[failure1]) {\n        correlationMatrix[failure1] = [];\n      }\n      if (!correlationMatrix[failure1][failure2]) {\n        correlationMatrix[failure1][failure2] = 0;\n      }\n      correlationMatrix[failure1][failure2] += 1;\n    };\n\n    for (const jobs of all_jobs) {\n      let failures = [];\n      for (const job_name in jobs.value) {\n        const job = jobs.value[job_name];\n        if (job.status && passes.indexOf(job.status) === -1) {\n          failures.push(job_name);\n        }\n      }\n\n      for (const failure1 of failures) {\n        for (const failure2 of failures) {\n          addFailure(failure1, failure2);\n        }\n      }\n    }\n\n    const job_names = Object.keys(seen_names).sort();\n\n    const fullMatrix = [];\n    for (const name1 of job_names) {\n      const row = [];\n      for (const name2 of job_names) {\n        if (correlationMatrix[name1] && correlationMatrix[name1][name2]) {\n          row.push(correlationMatrix[name1][name2]);\n        } else {\n          row.push(0);\n        }\n      }\n      fullMatrix.push(row);\n    }\n\n    return [job_names, fullMatrix];\n  }\n\n  async update() {\n    const base = \"https://ossci-job-status.s3.amazonaws.com/master\";\n    const data = {\n      job_index: JSON.parse(\n        await fetch(`${base}/index.json`, { cache: \"no-cache\" }).then((a) =>\n          a.text()\n        )\n      ),\n    };\n    const promises = data.job_index.map((job) => {\n      return fetch(`${base}/${job.id}.json`).then((r) => r.json());\n    });\n    this.state.correlations = this.correlateJobs(\n      await Promise.allSettled(promises)\n    );\n    this.setState(data);\n  }\n\n  tooltipTemplate(model, defaultTooltipTemplate, theme) {\n    const { background } = theme;\n    let [a, b] = model.data[0].label.split(\", \");\n    return `\n        <div\n        style=\"\n    background: ${background};\n    padding: 0 5px;\n    text-align: center;\n    color: white;\">\n        <div\n        class=\"toastui-chart-tooltip-category\"\n        style=\"font-weight: bold; font-family: Arial, sans-serif; font-size: 13px; color: #ffffff;\">\n            ${a}\n            <br />\n            ${b}\n        </div>\n        <div\n        class=\"toastui-chart-tooltip-series-wrapper\"\n        style=\"font-weight: normal; font-family: Arial, sans-serif; font-size: 12px; color: #ffffff;\">\n            <div class=\"toastui-chart-tooltip-series\">\n                <span class=\"toastui-chart-series-name\">\n                <i class=\"toastui-chart-icon\" style=\"background: ${model.data[0].color}\"></i>\n                <span class=\"toastui-chart-name\">${model.data[0].value}</span>\n                </span>\n            </div>\n        </div>\n    </div>\n    `;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.correlations) {\n      return;\n    }\n\n    const el = document.getElementById(\"job-correlations\");\n    let [job_names, correlationMatrix] = this.state.correlations;\n    el.innerHTML = \"\";\n    const options = {\n      usageStatistics: false,\n      xAxis: {\n        label: {\n          formatter: (a, b) => \"\",\n        },\n      },\n      yAxis: {\n        label: {\n          formatter: (a, b) => \"\",\n        },\n      },\n      tooltip: {\n        template: this.tooltipTemplate,\n      },\n    };\n    let data = {\n      categories: {\n        x: job_names,\n        y: job_names,\n      },\n      series: correlationMatrix,\n    };\n    Chart.heatmapChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>CI Job Correlations</h2>\n        <div\n          id=\"job-correlations\"\n          style={{ width: \"550px\", height: \"550px\" }}\n        ></div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\";\nimport Chart from \"@toast-ui/chart\";\n\nexport default class GitHubActionsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.update();\n  }\n  async update() {\n    const data = {\n      actions_statuses: JSON.parse(\n        await fetch(\n          \"https://ossci-checks-status.s3.amazonaws.com/status.json\",\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    this.setState(data);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.actions_statuses) {\n      return;\n    }\n    const series = {\n      dates: [],\n    };\n    let keys = [\"in_progress\", \"queued\", \"pending\"];\n    for (const key of keys) {\n      series[key] = [];\n    }\n    this.state.actions_statuses.sort((a, b) => {\n      return a.last_updated - b.last_updated;\n    });\n    for (const item of this.state.actions_statuses) {\n      series.dates.push(new Date(item.last_updated * 1000).toLocaleString());\n      for (const key of keys) {\n        series[key].push(item[key] || 0);\n      }\n    }\n    const data_series = [];\n    for (const key of keys) {\n      data_series.push({\n        name: key,\n        data: series[key],\n      });\n    }\n    const data = {\n      categories: series.dates,\n      series: data_series,\n    };\n\n    const el = document.getElementById(\"chart\");\n    el.innerHTML = \"\";\n    const options = {};\n    Chart.lineChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>GitHub Actions Status</h2>\n        <div id=\"chart\" style={{ width: \"600px\", height: \"400px\" }}></div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport { s3 } from \"./utils.js\";\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\nimport Tooltip from \"rc-tooltip\";\n\nconst COLORS = {\n  green: \"#58c157\",\n  yellow: \"#e2b325\",\n  red: \"#ff0504\",\n  grey: \"#a3a3a3\",\n  blank: \"rgba(0, 0, 0, 0)\",\n};\n\nclass BranchDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n    };\n    this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    const ref = this.canvas.current;\n    /** @type {CanvasRenderingContext2D} */\n    const ctx = ref.getContext(\"2d\");\n    ctx.beginPath();\n    const colors = {\n      success: COLORS.green,\n      failure: COLORS.red,\n      error: COLORS.red,\n      neutral: COLORS.grey,\n      cancelled: COLORS.red,\n      pending: COLORS.yellow,\n      queued: COLORS.yellow,\n      unknown: COLORS.blank,\n    };\n    for (const [x, statuses] of this.state.statuses.entries()) {\n      for (const [y, status] of statuses.entries()) {\n        const fill = colors[status];\n        if (!fill) {\n          console.error(\"Unknown\", status);\n        }\n        ctx.fillStyle = fill;\n        ctx.fillRect(y, x, 1, 1);\n      }\n    }\n  }\n\n  async update() {\n    const url = `https://s3.amazonaws.com/ossci-job-status/v5/${this.props.user}/${this.props.repo}/${this.props.json}`;\n    const resp = await fetch(url);\n    const data = await resp.json();\n    let jobNames = {};\n    let byName = [];\n    for (const commit of data) {\n      let jobsByName = {};\n      for (const job of commit.jobs) {\n        jobNames[job.name] = true;\n        jobsByName[job.name] = job;\n      }\n      byName.push(jobsByName);\n    }\n    jobNames = Object.keys(jobNames);\n    jobNames.sort();\n    let statuses = [];\n    for (const commit of byName) {\n      let commitStatuses = [];\n      for (const jobName of jobNames) {\n        let status = \"unknown\";\n        if (commit[jobName]) {\n          status = commit[jobName].status;\n        }\n        commitStatuses.push(status);\n      }\n      statuses.push(commitStatuses);\n    }\n    this.setState({ statuses: statuses });\n  }\n\n  render() {\n    let canvas = null;\n    if (this.state.statuses && this.state.statuses.length > 0) {\n      canvas = (\n        <canvas\n          height=\"100\"\n          width={this.state.statuses[0].length}\n          ref={this.canvas}\n        ></canvas>\n      );\n    }\n    return (\n      <div\n        style={{\n          border: \"1px solid #d2d2d2\",\n          borderRadius: \"5px\",\n          padding: \"10px\",\n          margin: \"5px\",\n          display: \"grid\",\n          gridTemplateRows: \"3em auto\",\n          textAlign: \"center\",\n        }}\n      >\n        <span>\n          <a href={`https://github.com/${this.props.user}/${this.props.repo}`}>\n            {this.props.user}/{this.props.repo}\n          </a>\n          <a\n            style={{ marginLeft: \"5px\" }}\n            href={`/ci/${this.props.user}/${this.props.repo}/${this.props.branch}`}\n          >\n            {this.props.branch}\n          </a>\n        </span>\n        <div>\n          <a\n            href={`/ci/${this.props.user}/${this.props.repo}/${this.props.branch}`}\n          >\n            {canvas}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class GitHubOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  async s3ListBucket(prefix) {\n    let result = await s3(prefix, \"ossci-job-status\");\n    let items = [];\n    if (result.ListBucketResult.CommonPrefixes) {\n      let folders = result.ListBucketResult.CommonPrefixes;\n      if (Array.isArray(folders)) {\n        items = items.concat(folders.map((item) => item.Prefix.textContent));\n      } else {\n        items.push(folders.Prefix.textContent);\n      }\n    }\n    if (result.ListBucketResult.Contents) {\n      let files = result.ListBucketResult.Contents;\n      if (Array.isArray(files)) {\n        items = items.concat(files.map((item) => item.Key.textContent));\n      } else {\n        // Only 1 item in the folder\n        items.push(files.Key.textContent);\n      }\n    }\n    return items;\n  }\n\n  async update() {\n    // List users with a folder\n    const users = await this.s3ListBucket(\"v5/\");\n    const promises = users.map((user) => {\n      return (async () => {\n        const prefixes = await this.s3ListBucket(user);\n        // List repos in a folder\n        return await Promise.all(\n          prefixes.map((repo) => this.s3ListBucket(repo))\n        );\n      })();\n    });\n    let repos = await Promise.all(promises);\n    this.setState({ repos: repos.flat() });\n  }\n\n  render() {\n    let branches = [];\n    for (const repo of this.state.repos) {\n      const match = repo[0].match(/v5\\/(.*)\\/(.*)\\//);\n      const user = match[1];\n      const repoName = match[2];\n      for (const branch of repo) {\n        const branchMatch = branch.match(/v5\\/.*\\/.*\\/(.*)/);\n        const branchName = branchMatch[1]\n          .replace(\"_\", \"/\")\n          .replace(\".json\", \"\");\n        branches.push(\n          <BranchDisplay\n            key={`branch-${repoName}-${branchName}`}\n            user={user}\n            repo={repoName}\n            branch={branchName}\n            json={branchMatch[1]}\n          />\n        );\n      }\n    }\n    return (\n      <div>\n        <h4>PyTorch Org CI Overview</h4>\n        <p>\n          Status roll up for PyTorch and domain libraries{\" \"}\n          <Tooltip\n            key=\"help\"\n            overlay=\"Each CI job for each branch in each repo corresponds to 1 pixel in the visualizations below\"\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={{ keepParent: false }}\n          >\n            <span style={{ color: \"#a1a1a1\", cursor: \"pointer\" }}>\n              <BsFillQuestionCircleFill />\n            </span>\n          </Tooltip>\n        </p>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>{branches}</div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\n\nconst AUTH_SERVER = \"https://auth.pytorch.org\";\n\nexport default class AuthorizeGitHub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedin: !!localStorage.getItem(\"gh_pat\"),\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {\n    let url = new URL(window.location.href);\n    let code = url.searchParams.get(\"code\");\n    if (!code) {\n      return;\n    }\n    this.state.code = code;\n    let errorMsg = \"bad code passed to GitHub OAuth, sign into GitHub again\";\n    let result = await fetch(`${AUTH_SERVER}/authenticate/${code}`)\n      .then((r) => r.json())\n      .catch((error) => {\n        errorMsg =\n          \"Error happened while communicating to auth server: \" + error;\n        return { token: null };\n      });\n    if (!result.token) {\n      alert(errorMsg);\n    } else {\n      localStorage.setItem(\"gh_pat\", result.token);\n      this.state.loggedin = true;\n    }\n    this.setState(this.state);\n\n    // GitHub redirects back to a URL with just a ?code=... parameter, so store\n    // off to the side the place to go once logged in\n    const lastRedirect = localStorage.getItem(\"last_redirect\");\n    if (lastRedirect) {\n      localStorage.removeItem(\"last_redirect\");\n      if (lastRedirect !== window.location.href) {\n        window.location.href = lastRedirect;\n      }\n    }\n  }\n\n  render() {\n    const existingToken = localStorage.getItem(\"gh_pat\");\n    if (existingToken) {\n      return (\n        <div style={{ display: \"inline\" }}>\n          <a href=\"/github_logout\">log out</a>\n        </div>\n      );\n    }\n    if (!this.state.code) {\n      return (\n        <div style={{ display: \"inline\" }}>\n          <a href=\"https://github.com/login/oauth/authorize?scope=public_repo&client_id=7e8b4df19d85405ac1b2\">\n            log in\n          </a>{\" \"}\n        </div>\n      );\n    }\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\n\nimport { github } from \"./utils.js\";\n\nfunction getIssuesQuery() {\n  return `\n      {\n        search(type:ISSUE,first:100,query:\"is:open is:issue label:\\\\\"ci: sev\\\\\"\") {\n          nodes {\n            ... on Issue {\n              number\n              title\n              body\n              url\n            }\n          }\n        }\n      }\n    `;\n}\n\nexport default class PrDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sevs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {\n    if (!localStorage.getItem(\"gh_pat\")) {\n      // Not logged in, can't search GitHub\n      // TODO: Show login option\n      console.log(\"not logged in, can't fetch sevs\");\n      return;\n    }\n    const response = await github.graphql_raw(getIssuesQuery());\n    if (response.errors) {\n      console.error(\"failed to fetch sevs\");\n      console.error(response);\n      return;\n    }\n    this.state.sevs = response.data.search.nodes;\n\n    this.setState(this.state);\n  }\n\n  renderSev(issue) {\n    return (\n      <div className=\"sevbox\">\n        <a href=\"https://github.com/pytorch/pytorch/wiki/%5BWIP%5D-What-is-a-SEV\">\n          SEV:\n        </a>{\" \"}\n        {issue.title} (<a href={issue.url}>#{issue.number}</a>)\n      </div>\n    );\n  }\n\n  render() {\n    if (!window.location.href.includes(\"pytorch/pytorch\")) {\n      return null;\n    }\n    const existingSevs = this.state.sevs;\n    const renderedSevs = [];\n    for (const [index, sev] of existingSevs.entries()) {\n      renderedSevs.push(<div key={`sev-${index}`}>{this.renderSev(sev)}</div>);\n    }\n\n    return <div>{renderedSevs}</div>;\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport AuthorizeGitHub from \"./AuthorizeGitHub\";\n\nexport default class Links extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMore: false,\n    };\n  }\n\n  render() {\n    let more = null;\n    if (this.state.showMore) {\n      more = null;\n    }\n    return (\n      <div className=\"links-container\">\n        <div className=\"Links\">\n          <div style={{ display: \"inline\" }}>\n            <a style={{ fontWeight: \"bold\" }} href=\"https://hud.pytorch.org\">\n              TVM CI HUD\n            </a>\n            <ul style={{ display: \"inline\" }} className=\"menu\">\n              {[\"pytorch\"].map((e) => (\n                <Fragment key={e}>\n                  {[\"main\", \"PRs\", \"v0.5\", \"v0.6\", \"v0.7\", \"v0.8\"].map(\n                    (branch) => (\n                      <li key={`${branch}`}>\n                        <Link to={`/ci/apache/tvm/${branch.toLowerCase()}`}>\n                          {branch}\n                        </Link>\n                      </li>\n                    )\n                  )}\n                </Fragment>\n              ))}\n              {/* <li>\n                <a href=\"/overview\">overview</a>\n              </li> */}\n              {/* <li>\n                <a\n                  href=\"more\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const prev = this.state.showMore;\n                    this.setState({ showMore: !prev });\n                    return false;\n                  }}\n                >\n                  {this.state.showMore ? \"less\" : \"more\"}\n                </a>\n              </li> */}\n            </ul>\n          </div>\n          <div\n            style={{\n              display: \"inline\",\n              marginLeft: \"auto\",\n              marginRight: \"0px\",\n            }}\n          >\n            <ul style={{ marginBottom: \"0\" }} className=\"menu\">\n              <li>\n                <a href=\"https://github.com/pytorch/pytorch/wiki/Using-hud.pytorch.org\">\n                  help\n                </a>\n              </li>\n              <li>\n                <a href=\"https://github.com/pytorch/ci-hud/issues/new?assignees=&labels=&template=feature_request.yaml&title=%5Bfeature%5D%3A+\">\n                  requests\n                </a>\n              </li>\n              <li>\n                <AuthorizeGitHub />\n              </li>\n              <li>\n                <a\n                  style={{ color: \"black\" }}\n                  href=\"https://github.com/pytorch/pytorch-ci-hud\"\n                >\n                  <AiFillGithub />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        {more}\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ComputerDisplay from \"./ComputerDisplay.js\";\nimport QueueDisplay from \"./QueueDisplay.js\";\nimport BuildHistoryDisplay from \"./BuildHistoryDisplay.js\";\nimport GitHubStatusDisplay from \"./GitHubStatusDisplay.js\";\nimport PrDisplay from \"./PrDisplay.js\";\nimport JobCorrelationHeatmap from \"./JobCorrelationHeatmap.js\";\nimport GitHubActionsDisplay from \"./GitHubActionsDisplay.js\";\nimport GitHubOverview from \"./GitHubOverview.js\";\nimport AuthorizeGitHub from \"./AuthorizeGitHub.js\";\nimport SevReporter from \"./SevReporter.js\";\nimport Links from \"./Links.js\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router basename=\"/tvm-hud\">\n    <div className=\"App\">\n      <Links />\n      <div style={{ margin: \"0\" }} className=\"container\">\n        <SevReporter />\n        <Switch>\n          <Route path=\"/build\" component={BuildRoute} />\n          <Route path=\"/build1\" component={Build1Route} />\n          <Route\n            path=\"/apache/tvm/pull/:segment\"\n            render={(props) => {\n              return <Redirect to={`/pr/${props.match.params.segment}`} />;\n            }}\n          ></Route>\n          <Route\n            path=\"/apache/tvm/pull/*/commits/:segment\"\n            render={(props) => {\n              return <Redirect to={`/commit/${props.match.params.segment}`} />;\n            }}\n          ></Route>\n          <Route\n            path=\"/apache/tvm/commit/:segment\"\n            render={(props) => {\n              return <Redirect to={`/commit/${props.match.params.segment}`} />;\n            }}\n          ></Route>\n          <Route\n            path=\"/ci/:user/:repo/:branch+\"\n            render={(props) => {\n              const query = new URLSearchParams(window.location.search);\n              const params = props.match.params;\n              return (\n                <GitHubStatusDisplay\n                  interval={60000}\n                  repo={params.repo}\n                  user={params.user}\n                  branch={params.branch}\n                  jobNameFilter={query.get(\"name_filter\")}\n                />\n              );\n            }}\n          ></Route>\n          <Route\n            path=\"/overview\"\n            render={() => {\n              return <GitHubOverview />;\n            }}\n          />\n          <Route\n            path=\"/pr/:user/:repo/:number\"\n            render={(props) => {\n              const params = props.match.params;\n              return (\n                <PrDisplay\n                  pr_number={params.number}\n                  user={params.user}\n                  repo={params.repo}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/pr/:number\"\n            render={(props) => {\n              return (\n                <Redirect to={`/pr/apache/tvm/${props.match.params.number}`} />\n              );\n            }}\n          />\n          <Route\n            path=\"/commit/:user/:repo/:commit\"\n            render={(props) => {\n              const params = props.match.params;\n              return (\n                <PrDisplay\n                  commit_hash={params.commit}\n                  user={params.user}\n                  repo={params.repo}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/commit/:commit\"\n            render={(props) => {\n              return (\n                <Redirect\n                  to={`/commit/apache/tvm/${props.match.params.commit}`}\n                />\n              );\n            }}\n          />\n          <Route path=\"/github_logout\" component={LogoutGitHub} />\n          <Route path=\"/authorize_github\" component={AuthorizeGithubRoute} />\n          <Route path=\"/status\" component={Status} />\n          <Route exact path=\"/\">\n            <Redirect to=\"/ci/apache/tvm/main\" />\n          </Route>\n          <Route path=\"*\" exact={true} component={RouteNotFound} />\n        </Switch>\n      </div>\n    </div>\n  </Router>\n);\n\n//    <ul className=\"menu\">\n//      {[\n//       \"linux-trusty-py2.7-trigger\",\n//       \"linux-trusty-py2.7.9-trigger\",\n//       \"linux-trusty-py3.5-trigger\",\n//       \"linux-trusty-py3.6-gcc4.8-trigger\",\n//       \"linux-trusty-py3.6-gcc5.4-trigger\",\n//       \"linux-trusty-py3.6-gcc7.2-trigger\",\n//       \"linux-trusty-pynightly-trigger\",\n//       \"linux-xenial-cuda8-cudnn6-py3-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py2-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py3-trigger\",\n//       \"linux-xenial-py3-clang5-asan-trigger\",\n//       \"win-ws2016-cuda9-cudnn7-py3-trigger\",\n//      ].map((e) => <li key={e}><Link to={\"/build/pytorch-builds/job/pytorch-\" + e}>{e}</Link></li>)}\n//    </ul>\n\nconst Status = () => (\n  <div>\n    <GitHubActionsDisplay />\n    <JobCorrelationHeatmap />\n    <QueueDisplay interval={1000} />\n    <ComputerDisplay interval={1000} />\n  </div>\n);\n\nconst AuthorizeGithubRoute = () => {\n  return <AuthorizeGitHub />;\n};\n\nconst LogoutGitHub = () => {\n  localStorage.removeItem(\"gh_pat\");\n  console.log(\"logged out\");\n  return <Redirect to=\"/\"></Redirect>;\n};\n\nconst Build = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build1 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build1\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst RouteNotFound = ({ match }) => {\n  return <p>Route not found: {match.url}</p>;\n};\n\nconst BuildRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build} />\n    <Route path={`${match.url}/:segment`} component={BuildRoute} />\n  </Fragment>\n);\n\nconst Build1Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build1} />\n    <Route path={`${match.url}/:segment`} component={Build1Route} />\n  </Fragment>\n);\n\nexport default App;\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = {\n  groups: [],\n};\n"],"sourceRoot":""}