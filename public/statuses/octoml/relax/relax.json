[
  {
    "sha": "6e25a86cff0af1a4307302f8b226125e89b09b3a",
    "headline": "[Unity] Merge with tvm/unity (#50)",
    "body": "Our previous merge didnt properly connect the history of octoml/relax\r\nwith tvm/unity. I wanted to try giving it another go with a newly\r\nenabled non-squashing merge suggested by @areusch.",
    "author": "jwfromm",
    "date": "2023-03-09T04:02:30Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/18/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371053792/jobs/7646564513"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371054168/jobs/7646565077"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371119165/jobs/7646692220"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371119426/jobs/7646692647"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371179341/jobs/7646801927"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371180316/jobs/7646803491"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371245551/jobs/7646937546"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371246206/jobs/7646939179"
      },
      {
        "name": "Update nightly branch / update-nightly-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371246436/jobs/7646939860"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371351795/jobs/7647151082"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371352490/jobs/7647152185"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371415963/jobs/7647270415"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371416730/jobs/7647271800"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371490401/jobs/7647406477"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371490457/jobs/7647406519"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371560721/jobs/7647543312"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371561583/jobs/7647545048"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371679944/jobs/7647791659"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371680467/jobs/7647792665"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371757705/jobs/7647948330"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371757769/jobs/7647948486"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371826233/jobs/7648079609"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371826592/jobs/7648080180"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371900599/jobs/7648230742"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4371901162/jobs/7648231964"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372021502/jobs/7648476736"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372022470/jobs/7648478535"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372090628/jobs/7648616741"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372091841/jobs/7648618931"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372183392/jobs/7648803370"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372184484/jobs/7648805292"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372244087/jobs/7648933268"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372273825/jobs/7648998544"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372273853/jobs/7648998536"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372419749/jobs/7649321866"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372420061/jobs/7649322250"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372526015/jobs/7649548274"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372526561/jobs/7649549508"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372619816/jobs/7649763853"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372620655/jobs/7649765166"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372726352/jobs/7650004003"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372726587/jobs/7650004451"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372890239/jobs/7650371686"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372890833/jobs/7650373044"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372987238/jobs/7650584642"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4372988441/jobs/7650587236"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373104620/jobs/7650854606"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373106249/jobs/7650858344"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373223859/jobs/7651124834"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373225793/jobs/7651128323"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373392943/jobs/7651511806"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373393413/jobs/7651512798"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373506112/jobs/7651764906"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373506765/jobs/7651766261"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373606382/jobs/7651987563"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373606393/jobs/7651987635"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373717896/jobs/7652249557"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373718572/jobs/7652250670"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373869554/jobs/7652589963"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373870187/jobs/7652591409"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373897581/jobs/7652652292"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373960245/jobs/7652793625"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4373961731/jobs/7652796405"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374075788/jobs/7653046716"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374076480/jobs/7653048032"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374185924/jobs/7653299854"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374186403/jobs/7653300633"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374363707/jobs/7653700337"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374364204/jobs/7653701321"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374532471/jobs/7654076237"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374532796/jobs/7654076912"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374591415/jobs/7654214729"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374646081/jobs/7654334382"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374646330/jobs/7654334826"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374752973/jobs/7654571818"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374753765/jobs/7654573424"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374879629/jobs/7654860183"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4374880754/jobs/7654862490"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375006807/jobs/7655157135"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375006865/jobs/7655157094"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375064918/jobs/7655289256"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375088464/jobs/7655343158"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375089592/jobs/7655345656"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375208206/jobs/7655628503"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375210344/jobs/7655633073"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375390667/jobs/7656048178"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375392187/jobs/7656050733"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375514089/jobs/7656323773"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375514157/jobs/7656324264"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375645508/jobs/7656630353"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375645522/jobs/7656630307"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375778909/jobs/7656960851"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375780783/jobs/7656963859"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375968094/jobs/7657406595"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4375969381/jobs/7657409673"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4376087508/jobs/7657695774"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4376088485/jobs/7657697906"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4376210705/jobs/7657984835"
      }
    ],
    "updated_at": 1678443648.398478
  },
  {
    "sha": "5f104b1fb5cf2328750066f88b689ebaab544f80",
    "headline": "Fix formatting",
    "body": "",
    "author": "jwfromm",
    "date": "2023-03-09T00:58:59Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "pending",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/unity_merge/3/display/redirect"
      },
      {
        "name": "unity/pr-head",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/PR-50/2/display/redirect"
      },
      {
        "name": "PR / cc-reviewers",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369988778/jobs/7644410779"
      }
    ]
  },
  {
    "sha": "540192f4e5a10591fe0128b6ffb7f408fe5d0ead",
    "headline": "Remove buggy pass",
    "body": "",
    "author": "jwfromm",
    "date": "2023-03-09T00:42:26Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "error",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/unity_merge/2/display/redirect"
      },
      {
        "name": "unity/pr-head",
        "status": "error",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/PR-50/1/display/redirect"
      },
      {
        "name": "PR / cc-reviewers",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369909910/jobs/7644243009"
      }
    ]
  },
  {
    "sha": "ff0bad78839adc6ef0e8ecfb9788d18e538690fe",
    "headline": "Merge branch 'unity' into unity_merge",
    "body": "",
    "author": "jwfromm",
    "date": "2023-03-08T23:59:11Z",
    "jobs": []
  },
  {
    "sha": "6ff21719450d371fc5036d8e47b9d6de2be0e083",
    "headline": "[TUZ-150] Post merge cleanup (#47)",
    "body": "Post TUZ-150 cleanup",
    "author": "jwfromm",
    "date": "2023-03-08T22:55:28Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/17/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369296353/jobs/7642932671"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369296609/jobs/7642933085"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369423038/jobs/7643198762"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369423131/jobs/7643199005"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369487646/jobs/7643333152"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369489338/jobs/7643336315"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369571290/jobs/7643504237"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369571926/jobs/7643505554"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369657875/jobs/7643686297"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369659999/jobs/7643690085"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369679126/jobs/7643731639"
      },
      {
        "name": "Nightly Docker Update / open_update_pr",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369717326/jobs/7643820543"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369817438/jobs/7644044250"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369817752/jobs/7644044816"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369936509/jobs/7644300529"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369936668/jobs/7644300938"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370141384/jobs/7644738987"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370142674/jobs/7644741435"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370342964/jobs/7645150240"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370344804/jobs/7645153730"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370507821/jobs/7645477549"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370522876/jobs/7645508887"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370523396/jobs/7645509818"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370636717/jobs/7645742219"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370636823/jobs/7645742473"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370715668/jobs/7645896806"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370716036/jobs/7645897315"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370776944/jobs/7646014787"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370778196/jobs/7646016870"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370830424/jobs/7646117259"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370830501/jobs/7646117312"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370885980/jobs/7646224813"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370886398/jobs/7646225513"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370950858/jobs/7646352364"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4370951026/jobs/7646352611"
      }
    ]
  },
  {
    "sha": "baa2516e929732db4b19f88f67fa3ba0c0791eec",
    "headline": "[TUZ-150] Add a simplified access point for Unity Flow (#32)",
    "body": "* [microTVM] Fix tvmc tutorial (#14076)\r\n\r\nThis PR applies appropriate changes to make sure the CI fails if micro_tvmc.sh tutorial fails. This issue was captured in #14074.\r\nThis PR also makes changes to avoid this breakage in bash script tutorials in future. In addition, this PR fixes the bug in running TVMC tutorial which happened due to renaming zephyr_board to board.\r\n\r\n* [MetaSchedule] Introduce Async Pipeline in MultiLevelTiling (#14009)\r\n\r\nThis PR introduces async pipeline in the current TVM's MultiLevelTiling Rules. This PR is based on apache/tvm#13966, which is already merged. This is because some conv2d workload will use `tir.if_then_else` to pad the input to the correct size, and this PR uses async copy in such copy statement.\r\n\r\n1. Add a subrule in `src/meta_schedule/schedule_rule/multi_level_tiling.h/.cc` that annotate async copy for mlt in supported arch (>= sm80).\r\n\r\nIn CUDA Core, this PR has a perf boost of around 1T GFLOP/s in most Conv2d test cases and 1T ~ 2T in most GEMM test cases.\r\n\r\nAll generated codes, scripts, and traces are available at https://github.com/Rainy-Memory/tvm-async-rule-benchmark.\r\n\r\nCurrently tested on commit `afbfb7aa7e43732cb716f8e443df696110be6afc` in conv2d NHWC workload, with a RTX 3080 GPU.\r\n\r\n**Notice: given the stochastic nature of evolutionary search, perfromance might become worse if enable this PR.**\r\n\r\nWorkload: Conv2d NHWC\r\n\r\n|Shape|Mainline TVM|Mainline TVM with Async|Performance Boost|\r\n|-|-|-|-|\r\n|N=1_H=224_W=224_C=3_K=64_R=7_S=7_STR=2_PAD=3_DIL=1|13838.05219|14687.89452|6.141343581679319%|\r\n|N=1_H=56_W=56_C=64_K=64_R=1_S=1_STR=1_PAD=0_DIL=1|5398.305085|5613.892553|3.9936140067192905%|\r\n|N=1_H=56_W=56_C=64_K=64_R=3_S=3_STR=1_PAD=1_DIL=1|11652.96825|13157.88249|12.91442839038028%|\r\n|N=1_H=56_W=56_C=64_K=256_R=1_S=1_STR=1_PAD=0_DIL=1|10638.8309|11674.68499|9.736540600527816%|\r\n|N=1_H=56_W=56_C=256_K=64_R=1_S=1_STR=1_PAD=0_DIL=1|8692.32829|9469.264089|8.938178277203573%|\r\n|N=1_H=56_W=56_C=256_K=128_R=1_S=1_STR=2_PAD=0_DIL=1|4685.767442|5698.19634|21.606469175684712%|\r\n|N=1_H=28_W=28_C=128_K=128_R=3_S=3_STR=1_PAD=1_DIL=1|9872.787087|10404.60405|5.38669535070061%|\r\n|N=1_H=28_W=28_C=128_K=512_R=1_S=1_STR=1_PAD=0_DIL=1|9974.281496|10073.31657|0.9929043414276753%|\r\n|N=1_H=28_W=28_C=512_K=128_R=1_S=1_STR=1_PAD=0_DIL=1|7075.866932|8564.572712|21.039199780135142%|\r\n|N=1_H=28_W=28_C=512_K=256_R=1_S=1_STR=2_PAD=0_DIL=1|3648.330914|4021.923142|10.240086132713124%|\r\n|N=1_H=14_W=14_C=256_K=256_R=3_S=3_STR=1_PAD=1_DIL=1|8192.954618|9160.182054|11.805599824451525%|\r\n|N=1_H=14_W=14_C=256_K=1024_R=1_S=1_STR=1_PAD=0_DIL=1|8008.870153|9362.825279|16.90569456283206%|\r\n|N=1_H=14_W=14_C=1024_K=256_R=1_S=1_STR=1_PAD=0_DIL=1|5210.062241|6051.208379|16.144646629759908%|\r\n|N=1_H=14_W=14_C=1024_K=512_R=1_S=1_STR=2_PAD=0_DIL=1|2550.787202|3587.902938|40.65865373586739%|\r\n|N=1_H=7_W=7_C=512_K=512_R=3_S=3_STR=1_PAD=1_DIL=1|4350.626084|5432.788068|24.873706981617943%|\r\n|N=1_H=7_W=7_C=512_K=2048_R=1_S=1_STR=1_PAD=0_DIL=1|6672.068026|7663.725217|14.862815953549454%|\r\n|N=1_H=7_W=7_C=2048_K=512_R=1_S=1_STR=1_PAD=0_DIL=1|3142.564263|4297.988014|36.766909259541826%|\r\n\r\nWorkload: GEMM NN\r\n\r\n|Shape|Mainline TVM|Mainline TVM with Async|Performance Boost|\r\n|-|-|-|-|\r\n|M=512_N=256_K=640|8678.46|10607.37|22.226408832903555%|\r\n|M=512_N=384_K=256|8109.13|10290.72|26.902886006267003%|\r\n|M=512_N=512_K=512|11419.83|14000.86|22.601299669084398%|\r\n|M=512_N=3072_K=768|19709.39|18351.61|-6.8890006235606425%|\r\n|M=512_N=768_K=3072|12844.59|13730.88|6.90010346768561%|\r\n|M=896_N=896_K=896|16149.91|16131.39|-0.11467556165947945%|\r\n|M=1024_N=1024_K=1024|18842.11|19662.8|4.355616223448428%|\r\n|M=1152_N=1152_K=1152|15386.79|16736.1|8.769275462913303%|\r\n|M=1536_N=1536_K=1536|18522.67|18872.06|1.88628313304725%|\r\n|M=2048_N=2048_K=2048|19515.42|18874.85|-3.282378754851291%|\r\n|M=3072_N=3072_K=3072|19233.9|19291.42|0.2990553137948975%|\r\n|M=4096_N=4096_K=4096|17122.17|19259.01|12.479960191961652%|\r\n\r\n* [TVMScript] Use op attribute to control whether to print dtype in TVMScript (#14111)\r\n\r\nThis PR adds an op attribute `TScriptDtypePrintLocation`, and modifies the dtype printing logic of the builtin op to check this attribute. So that user defined operators can use it to specify how there dtype argument are printed by appending attributes instead of appending members to `dtype_first_arg`/`dtype_last_arg`.\r\n\r\n* [Fix][TVMScript] Fix index of metadata in printed script (#14130)\r\n\r\nCurrently, if the same metadata object (e.g. a multi-line `tir.StringImm`) is referenced for more than one times in an IRModule, each reference will have different indices of the metadata array. For example, this code\r\n\r\n```\r\nstr_imm = T.StringImm(\"aaa\\nbbb\\n\")\r\n@I.ir_module\r\nclass Module:\r\n    @T.prim_func\r\n    def foo() -> None:\r\n        A = str_imm\r\n        B = str_imm\r\n\r\n    @T.prim_func\r\n    def foo1() -> None:\r\n        A = str_imm\r\nModule.show()\r\n```\r\n\r\nwhere `str_imm` is referenced three times, will generate such output:\r\n\r\n```\r\n@I.ir_module\r\nclass Module:\r\n    @T.prim_func\r\n    def foo():\r\n        A: T.handle = metadata[\"tir.StringImm\"][0]\r\n        B: T.handle = metadata[\"tir.StringImm\"][1]\r\n        T.evaluate(0)\r\n\r\n    @T.prim_func\r\n    def foo1():\r\n        A: T.handle = metadata[\"tir.StringImm\"][2]\r\n        T.evaluate(0)\r\n```\r\n\r\nEach time has a different metadata index. \r\n\r\nThis PR fixes this problem by detecting duplicate item in `IRDocsifierNode::AddMetadata`.\r\n\r\n* [Pytorch] frontend full_impl fix (#14122)\r\n\r\nMinor fix in pytorch frontend to compile gpt2 model, reproduce script.\r\ntorch_version = 1.13.1\r\ntransformers_version = 4.26.1\r\n\r\n```\r\nfrom transformers import GPT2LMHeadModel\r\nimport torch\r\nimport tvm\r\nfrom tvm import relay\r\n\r\ninp = torch.ones((1, 128)).to(torch.int64)\r\ninput_shapes = [(\"input_ids\", ((1, 128), \"int64\"))]\r\n\r\nmodel = GPT2LMHeadModel.from_pretrained('gpt2', return_dict=False)\r\ntrace_model = torch.jit.trace(model, inp, strict=False)\r\noutputs = trace_model(inp)\r\n\r\nmod, params = relay.frontend.from_pytorch(trace_model, input_shapes)\r\nwith tvm.transform.PassContext(opt_level=3):\r\n    lib = relay.build(mod, target='llvm', params=params)\r\n\r\nruntime = tvm.contrib.graph_executor.GraphModule(lib[\"default\"](tvm.device('cpu', 0)))\r\nruntime.set_input(\"input_ids\", inp.numpy())\r\nruntime.run()\r\nout = runtime.get_output(0).numpy()\r\nprint(out)\r\nprint('Done...')\r\n```\r\n\r\nBefore the fix, the error message\r\n```\r\nTraceback (most recent call last):\r\n  File \"gpt2_compile.py\", line 13, in <module>\r\n    mod, params = relay.frontend.from_pytorch(trace_model, input_shapes)\r\n  File \"/home/ubuntu/apache_tvm/tvm/python/tvm/relay/frontend/pytorch.py\", line 4791, in from_pytorch\r\n    outputs = converter.convert_operators(_get_operator_nodes(graph.nodes()), outputs, ret_name)\r\n  File \"/home/ubuntu/apache_tvm/tvm/python/tvm/relay/frontend/pytorch.py\", line 4164, in convert_operators\r\n    relay_out = relay_op(\r\n  File \"/home/ubuntu/apache_tvm/tvm/python/tvm/relay/frontend/pytorch.py\", line 841, in full\r\n    return self.full_impl(data, fill_value, dtype)\r\n  File \"/home/ubuntu/apache_tvm/tvm/python/tvm/relay/frontend/pytorch.py\", line 743, in full_impl\r\n    fill_value = _expr.const(fill_value, dtype=dtype)\r\n  File \"/home/ubuntu/apache_tvm/tvm/python/tvm/relay/expr.py\", line 707, in const\r\n    raise ValueError(\"value has to be scalar or NDArray\")\r\nValueError: value has to be scalar or NDArray\r\n```\r\n\r\nbecause `fill_value` is\r\n```\r\n%0 = cast(64, dtype=\"float32\");\r\npower(%0, 0.5f)\r\n```\r\n\r\n* [DOCKER] Configurable NDK version support (#14000)\r\n\r\nLet the Android NDK version configurable as a command line argument\r\n\r\n* [Fix][TIR] SampleCategorical apply-to-schedule (#14133)\r\n\r\nThis PR is another way to fix the issue described in #14118.\r\n\r\nSince we do not have a standard for json file on the format of float\r\nnumbers (for example, we cannot require a json file producer to print\r\nthe \"integer\" float numbers with at least one decimal), and the json\r\nparser is not responsible for determining if an integer in a json file\r\nshould be parsed to a float or an int, the most convenient way of fixing\r\nthe SampleCategorical issue will be allowing both FloatImms and IntImms\r\nas input, and converting all IntImms to FloatImms accordingly.\r\n\r\nThis PR fixes the issue in this way.\r\n\r\n* [Arith] ConstIntBound was incorrectly assuming bounds were over int64\u2026 (#13918)\r\n\r\n[Arith] ConstIntBound was incorrectly assuming bounds were over int64_t range\r\n\r\nThis commit improved the floormod and floordiv conversion check to be\r\nsimpler for the negative range and adds a  test to cover all integer data types.\r\n\r\n* [CMSIS-NN] Reduction in code size of AOT test runner binary (#13815)\r\n\r\n* [CMSIS-NN] Reduction in code size of AOT test runner binary\r\n\r\n\r\nCo-authored-by: Ashutosh Parkhi <ashutosh.parkhi@arm.com>\r\n\r\n* [CMSIS-NN] Add a runtime error message (#13643)\r\n\r\n[CMSIS-NN] Add a runtime error message\r\n\r\nAPIs TVMAPISetLastError and TVMGetLastError are used to propagate CMSIS-NN\r\nerrors caught in the backend. AOT test runner was improved to observe the contents\r\nof this global variable. A test was added to check for the last set error as part of this\r\ncommit.\r\n\r\n* [CRT]Cleanup unused macros in crt_config.h.template (#14125)\r\n\r\nThis PR removes old macros in crt_config.h.template.\r\n\r\n* [Fix][Relay] Fix axis transformation in squeeze shape function (#14135)\r\n\r\n* fix squeeze shape function issue and add testcase.\r\n\r\n* fix lint\r\n\r\n* [Unittest] merge test_cp_async_in_if_then_else into test_tir_transform_inject_ptx_async_copy (#14138)\r\n\r\nThis PR merge two related unittests into one.\r\n\r\n* [Frontend][TFLite] Fix conv2d import bug (#14124)\r\n\r\n* Fix TFLite frontend bug and add test\r\n\r\n* lint\r\n\r\n* [ONNX][TORCH] Replace scatter op by scatter_elements (#14019)\r\n\r\n* remove scatter attr class\r\n\r\n* update pytorch: scatter was replaced by scatter_elements\r\n\r\n* remove scatter compute and strategy registration\r\n\r\n* remove scatter attrs registration\r\n\r\n* update onnx front-end: replace _op.scatter by _op.scatter_elements, add checks\r\n\r\n* update oneflow front-end\r\n\r\n* update paddlepaddle front-end\r\n\r\n* update pytorch utils\r\n\r\n* remove front-end scatter definition\r\n\r\n* fix scatter strategy for rocm\r\n\r\n* small update\r\n\r\n* remove scatter definition in back-end\r\n\r\n* remove scatter strategy for cuda, gpu. transfer special case to scatter_elements\r\n\r\n* fix test\r\n\r\n* small fix\r\n\r\n* upstream scatter with torch description\r\n\r\n* last upstream of scatter in pytorch front-end\r\n\r\n* fix reduction attribute in cuda strategy\r\n\r\n* set scalar to test instead of tensor. update check for dynamic dim\r\n\r\n* skip scalar source check in tests for scatter due to issue on torch side\r\n\r\n* remove scatter op implementation from topi/cuda\r\n\r\n* remove scatter op implementation from topi. small clean code\r\n\r\n---------\r\n\r\nCo-authored-by: Valery Chernov <valery.chernov@deelvin.com>\r\n\r\n* [TVMScript][Printer] Remove relax prefix for now (#14140)\r\n\r\nRemove relax prefix for now\r\n\r\nThis PR cleans up relax prefix in printer for now.\r\nWhile these setups are useful and do not cause any\r\ntechnical debts in the codebase. We remove it given requests.\r\nThey can be added back to unity branch and later as part\r\nof upstream\r\n\r\n* [microNPU] Sum legalization support (#13997)\r\n\r\nSupports legalizing a relay sum operation to an equivalent series of NPU operations. It supports case with int8 output type and channel axis.\r\n\r\n* [Fix][MetaSchedule] Fix redundant stages in async pipeline for mlt (#14143)\r\n\r\nThis PR fixes redundant stages if visiting `InitializeWithTuneContext`\r\nmultiple times.\r\n\r\n* [COMMUNITY] Cheng Wen -> Reviewer (#14153)\r\n\r\nPlease join me @chengven027-intellif as a new Reviewer in TVM.\r\nCheng has contributed to ONNX/PyTorch frontend and Relay passes, making TVM support more input models.\r\n\r\n- [Commits History](https://github.com/apache/tvm/pulls?q=author%3Achengven027-intellif+)\r\n- [Code Review](https://github.com/apache/tvm/pulls?q=reviewed-by%3Achengven027-intellif+)\r\n\r\n* [Runtime] Fix high RAM usage when saving / loading paramters of big models   (#14147)\r\n\r\n* add load_params_from_file\r\n\r\n* add save_params_to_file\r\n\r\n* avoid making another copy in save_params\r\n\r\n* black\r\n\r\n* add test\r\n\r\n* update doc\r\n\r\n* [Relay][Frontend] Span Filling PyTorch (#14050)\r\n\r\n* [Relay][Frontend] Span Filling PyTorch\r\n\r\n- Construct debug name of C graph instruction as the source name of span for pytorch model.\r\n- To get the reference of renamed nodes. Add a function to export the converted C graph after conversion.\r\n- Add structural_equal comparisons with and without set_span to the existing test cases.\r\n- Add span test cases for frequent conversions.\r\n- Add span test case for exporting model parameter.\r\n\r\n* [SpanFillingPyTorch]\r\n\r\n- Return TupleGetItem expr from TupleWrapper with the span of its Tuple.\r\n- Add None type symbol in set sapn for certain conversion.\r\n- Add current_op member varible to PyTorchOpConverter to track which op\r\n  is converting for pytorch frontend.\r\n\r\n* [SpanFillingPyTorch]\r\n\r\n- Fix the error caused by the quantized params not found after renaming\r\n  the debug name of C graph.\r\n\r\n---------\r\n\r\nCo-authored-by: Joey Tsai <chunit@qti.qualcomm.com>\r\n\r\n* [TRT][BYOC] allow strided_slice ops on selected dimensions (#14142) (#14144)\r\n\r\n* [ONNX][TOPI] Add `DFT` operator (#13999)\r\n\r\n* init convertor for DFT\r\n\r\n* init test for DFT\r\n\r\n* init DFT operator in Relay\r\n\r\n* update topi implementation for DFT\r\n\r\n* clean up\r\n\r\n* update ONNX frontend\r\n\r\n* support  attribute\r\n\r\n* fix error: Expected Array[Tensor], but got Array[index 0: Array]\r\n\r\n* support inverse, onsided, dft_lenght\r\n\r\n* update tests for DFT\r\n\r\n* update TOPI test for DFT\r\n\r\n* add documentation\r\n\r\n* fix pylint\r\n\r\n* fix cpplint\r\n\r\n* fix cpplint\r\n\r\n* fix threshold for FP16 (ARM)\r\n\r\n* add CUDA compute\r\n\r\n* fix pylint\r\n\r\n* fix doc string\r\n\r\n* code review fixes for ONNX front-end\r\n\r\n* code review fixes for TOPI\r\n\r\n* rename: stft.py -> signal.py\r\n\r\n* pass input_shape and output_shape to verify_dft\r\n\r\n* [CRT][microTVM] Enable USMP by default for AoTExecutor + CRT runtime (#14107)\r\n\r\nThis PR enables USMP by default when AoTExecutor and CRT runtime are selected. Check forum discussion about this change: https://discuss.tvm.apache.org/t/enable-usmp-by-default-in-aot-executor-with-runtime-crt/14406\r\n\r\nAs a result, the workspace memory in mlperftiny project type is removed since memory allocation is not required. If we keep this workspace, the model doesn't fit since some of the memory is allocated twice.\r\n\r\n* [Android] Fix using system libraries in Android apps (#14145)\r\n\r\n- Starting from API 31, using `uses-native-library` is required if we\r\n  want to open system library:\r\n  https://developer.android.com/about/versions/12/reference/compat-framework-changes#enforce_native_shared_library_dependencies\r\n\r\n  We should specify OpenCL library in `user-native-library` in all\r\n  applications where OpenCL backend might be used.\r\n\r\n- Updated README files and describe how to fix synchronization issues\r\n  in Android Studio.\r\n\r\n* [microTVM]Enable TVMC micro with AoT Executor  (#14077)\r\n\r\nThis PR enables AoT Executor for tvmc micro compilation.\r\n\r\n* [bugfix] Fix the write buffer scope of `mma_store_impl` (#14174)\r\n\r\nfix\r\n\r\n* [Relay] Enhance EliminateCommonSubexpr to support Tuple argument (#14169)\r\n\r\nIf an argument of a call is a Tuple, we should check its fields.\r\nDifferent tuples with the same fields should be treated as same inputs\r\n\r\n* [TIR] Fix typo in doc (#14178)\r\n\r\n* [microTVM] Use QNN schedules to give SOTA performance (#13752)\r\n\r\nIn #13242, I rewrote microTVM's convolution schedules to give a major improvement in performance. While I demonstrated in tests that my changes worked, they could not be used with relay.build.\r\n\r\nThis pull request expands the functionality of #13242 and adds new legalize and alter_op passes to take advantage of the quantized schedules. This dramatically improves performance on some models, dramatically cuts RAM usage, and removes the need for autotuning on microTVM. More specifically, for the vww model from MLPerf Tiny running on the nucleo_l4r5zi, this pull request:\r\n\r\n- Improves untuned performance from 1741 ms to 137 ms - a 6.8x improvement!\r\n- Improves tuned performance from 337 ms to 137 ms.\r\n- Sets a new state-of-the-art for MLPerf Tiny, beating Plumerai's previous 208 ms record\r\n- Reduces RAM consumption by 73 KB (a large amount on microcontrollers!) by eliminating intermediate buffers.\r\n- Reduces flash consumption for model weights by 5x\r\n- Slightly improves accuracy\r\n\r\n@mehrdadh has kindly tested these changes himself, and has confirmed my 137 ms figure.\r\n\r\nTo enable the schedules that grant these performance improvements, this pull request:\r\n\r\n1. Adds out_layout support to the regular and depthwise conv2d schedules from [microTVM] Modernize Arm Cortex-M convolution schedules #13242.\r\n2. Generalizes the schedules from [microTVM] Modernize Arm Cortex-M convolution schedules #13242 to be more widely applicable.\r\n3. Adds a layout alternation pass to ensure regular and depthwise conv2d schedules always get their desired input formats.\r\n4. Adds a conv2d -> depthwise conv2d -> unpadded conv2d rewrite step to remove empty channels from conv2d operators.\r\n5. Adds a conv2d -> average pool -> dense rewrite step to remove empty channels from conv2d operators.\r\n6. Adds an alter_op pass to fold padding into a separate Relay operator.\r\n\r\n* Add v0.11.0 docs link to site (#14181)\r\n\r\nUpdate the version menu in TVM documentation to add a specific v0.11.0 release docs link.\r\n\r\n* [TIR] Allow TransformLayout with non-inversible index map (#14095)\r\n\r\n* [TIR] Allow TransformLayout with non-inversible index map\r\n\r\nTransformLayout requires the index map to have inverse map that can be\r\ncalculated by the analyzer in order to check whether padding is added.\r\nHowever, such check doesn't always work for all cases because of\r\nlimitation of the affine analysis that can only handle a set of\r\nsupported patterns. In some cases, even if the index map doesn't\r\nintroduce padding, the schedule primitive throws `TransformationIntroducesPaddingError` because it\r\nfails to calculate the inverse index map.\r\n\r\nIt is safe to allow buffer being padded without providing pad_value\r\nbecause the original loop extent is not changed and the padded region is not accessed.\r\nThis PR changes the behavior of `TransformLayout` to allow\r\nnon-inversible index map.\r\n\r\nPrevious discussion:\r\nhttps://discuss.tvm.apache.org/t/conflict-free-shared-memory-permutation-in-tensorir/13959/9\r\n\r\n* add assume_injective_transform option\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n---------\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [TIR][Analysis] Implement IdentifyMemCpy analysis function (#13947)\r\n\r\n* [HotFix][MetaSchedule] Turn off database shash check (#14188)\r\n\r\nAt this moment, the structural hash values of IR in TVM is platform\r\ndependent (e.g., the hash values of a String may differ on different\r\nplatforms). In our recent practice, we found this an obstacle for us\r\nto apply one existing database on different platforms (say we tune\r\nan IRModule with MetaSchedule on Metal, and then apply the database\r\non CUDA, etc.)\r\n\r\nTo clear this obstacle, we decide to remove the shash value check. The\r\npurpose of that check is mainly to ensure safety, and thus turning it\r\noff will make no difference in terms of using MetaSchedule in most of\r\nthe cases that we can imagine.\r\n\r\nMeanwhile, it is equally important that we need to make our structural\r\nhash platform independent. There are plans ongoing for this target.\r\n\r\n* [TOPI] Batch Norm Training Mode (#14190)\r\n\r\nPrior to this PR, TOPI batch_norm only supports inference.\r\n\r\nThis PR adds training: bool flag and momentum: float argument to support training mode (update moving_mean / var and return), which aligns with torch.nn.functional.batch_norm.\r\n\r\n* [TOPI] Group normalization (#14193)\r\n\r\nAs more and more ML models nowadays contain the group normalization\r\ncomputation, we find it beneficial to introduce this op to TOPI level.\r\nIt will enable us to optimize the group normalization operation as a\r\nwhole in a more convenient way.\r\n\r\nThis PR introduces the group normalization op to TOPI. The group norm\r\noperation was introduced in https://arxiv.org/abs/1803.08494. The\r\nimplementation uses tuple reduction, same as the implementation of layer\r\nnorm. Implemented with tuple reduction, the corresponding generated TIR\r\nfunction can be optimized by cross-thread reduction or rfactor through\r\nMetaSchedule.\r\n\r\n\r\nCo-authored-by: Bohan Hou <spectrometerh@gmail.com>\r\n\r\n* [Fix][TIR] LowerCrossThreadReduction with write-back predicate (#14199)\r\n\r\nPrior to this PR, the cross-thread reduction lowering pass does not\r\nadd a store predicate to the write-back block. This is in consideration\r\nthat for a certain write-back buffer position, all values being stored\r\n(by all the threads) in the write-back block are the same. Since all\r\nthreads are writing the same value, we were assuming that not having a\r\nwrite-back block predicate is fine, because the result will not be wrong\r\nin any way.\r\n\r\nHowever, recently we noticed that some GPU backend compiler will capture\r\nthis behavior (multiple threads writing a same position) as a race\r\ncondition and thus throw compilation error. The compiler does not take\r\nthe fact that all values being stored are the same, and insist on\r\ncomplaining.\r\n\r\nThis means that we will still need the write-back block predicate to\r\nmake things work. And this PR does this change. I have done integration\r\ntests locally to make sure that the generated kernels is right and\r\nproduces the right results numerically.\r\n\r\n* [Unity] Relax VM (#13878)\r\n\r\nThis PR implements a flexible register-based VM to execute relax programs with dynamic shape and control flow. Design: https://github.com/tlc-pack/relax/wiki/Relax-VM-Design.\r\n\r\nCo-Authored-by: Ziheng Jiang <ziheng@apache.org>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-Authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-Authored-by: Steven S. Lyubomirsky <slyubomirsky@octoml.ai>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-Authored-by: Hongyi Jin <3231950289@qq.com>\r\n\r\n* [Unity] Relax expressions and types (#13901)\r\n\r\n* [Unity][IR] First-class StructInfo (#13907)\r\n\r\n* [Unity][IR] First-class StructInfo\r\n\r\nRelax tracks structural information (such as tensor shape) via `StructInfo` about the values in Relax.\r\n\r\n* Fix rust build\r\n\r\n---------\r\n\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>\r\n\r\n* [Unity][CI] Unity specific jenkins setup (do not upstream to main) (#13910)\r\n\r\nThis PR setup a unity specific jenkins with minimum jenkinsfile\r\nwithout sharding and disables most of the tests to reduce overall\r\ncost. We can add tests of unty branch by configuring the specific\r\ngroovy file.\r\n\r\n* [Unity] Basic StructInfo Analysis and Expr construction (#13916)\r\n\r\n[Unity] Basic StructInfo Analysis and Expr construction.\r\n\r\nThis PR adds struct info analysis and expr support.\r\nThese are logics to construct the IR node and perform\r\nstruct info related analysis.\r\n\r\nTestcases are added to cover the IR node construction\r\nand related struct info analysis checks.\r\n\r\nCo-authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Altan Haan <altanh@cs.washington.edu>\r\nCo-authored-by: Andrew Liu <andrewlliu@gmail.com>\r\nCo-authored-by: Hongyi Jin <3231950289@qq.com>\r\nCo-authored-by: Jiawei Liu <jaway.liu@gmail.com>\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-authored-by: Lesheng Jin <34279105+LeshengJin@users.noreply.github.com>\r\nCo-authored-by: masahi <masahi129@gmail.com>\r\nCo-authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Steven S. <Lyubomirsky slyubomirsky@octoml.ai>\r\nCo-authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-authored-by: Ziheng Jiang <ziheng@apache.org>\r\n\r\n* [Unity] Relax BlockBuilder and ExprMutator (#13926)\r\n\r\nThis PR adds BlockBuilder: the core data structure to construct Relax AST, and ExprMutator: performs AST mutation for implementing transformation passes.\r\n\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-Authored-by: Altan Haan <altanh@cs.washington.edu>\r\nCo-Authored-by: Andrew Liu <andrewlliu@gmail.com>\r\nCo-Authored-by: Hongyi Jin <3231950289@qq.com>\r\nCo-Authored-by: Jiawei Liu <jaway.liu@gmail.com>\r\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-Authored-by: Lesheng Jin <34279105+LeshengJin@users.noreply.github.com>\r\nCo-Authored-by: masahi <masahi129@gmail.com>\r\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Steven S. <Lyubomirsky slyubomirsky@octoml.ai>\r\nCo-Authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-Authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-Authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-Authored-by: Ziheng Jiang <ziheng@apache.org>\r\n\r\n* [Unity] Relax TVMScript Parser. (#13932)\r\n\r\nThis PR adds the TVMScript parser/ir_builder support based on the blockbuilder.\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\r\nCo-authored-by: Yong Wu <yongcale@gmail.com>\r\n\r\n* [Unity] Relax TVMScript Printer (#13944)\r\n\r\nThis PR introduces Relax as a dialect supported by the TVMScript\r\nPrinter. Some caveats:\r\n- Needs to rebase to mainline before merging.\r\n- Some tests are skiped because some operators are not upstreamed to\r\n  the unity branch yet.\r\n\r\nCo-authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\r\nCo-authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-authored-by: Hongyi Jin <3231950289@qq.com>\r\nCo-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity] Relax VM codegen (#13954)\r\n\r\n* [Unity] Relax VM shape lowering pass (#13956)\r\n\r\nThis PR introduces Relax `FunctionPass` and `DataflowBlockPass` API, and the `VMShapeLower` pass to lower the shape expression in Relax to TIR functions and VM shape heap builtin functions.\r\n\r\nCo-Authored-by: Ziheng Jiang <ziheng@apache.org>\r\nCo-Authored-by: Lesheng Jin <34279105+LeshengJin@users.noreply.github.com>\r\nCo-Authored-by: Altan Haan <altanh@cs.washington.edu>\r\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Steven S. <Lyubomirsky slyubomirsky@octoml.ai>\r\nCo-Authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-Authored-by: Yong Wu <yongcale@gmail.com>\r\n\r\n* [Unity] e2e Relax minimum build flow (#13961)\r\n\r\nThis PR introduces the e2e Relax lowering flow (`relax.vm.build`). Tests for each pass in the flow are added.\r\n\r\nCo-Authored-by: Altan Haan <altanh@cs.washington.edu>\r\nCo-Authored-by: Andrew Liu <andrewlliu@gmail.com>\r\nCo-Authored-by: Hongyi Jin <3231950289@qq.com>\r\nCo-Authored-by: Jiawei Liu <jaway.liu@gmail.com>\r\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>\r\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Steven S. <Lyubomirsky slyubomirsky@octoml.ai>\r\nCo-Authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-Authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-Authored-by: Ziheng Jiang <ziheng@apache.org>\r\n\r\n* [Unity][TVMScript] Use explicit `R.shape` in TVMScript (#13979)\r\n\r\nAs we've introduced `arg_sinfo` in CallNode, implicit shape constructor\r\nis not widely used in TVMScript. This PR removes the implicit shape since\r\nit may cause confusion between shape and tuple.\r\n\r\n* [Unity] Relax op: index (#13987)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the tensor indexing operators.\r\n\r\n* [Unity] Relax op: datatype (#13986)\r\n\r\n* [Unity] Relax op: set (#13990)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the set operators.\r\n\r\nCo-authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\n\r\n* [Unity] Relax op: image (#13994)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the image operators.\r\n\r\n* [Unity] Relax op: arithmetic, comparison (#13983)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the unary, binary and ternary arithmetic and\r\ncomparison operators.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Chaofan Lin <1713833595@qq.com>\r\n\r\n* [Unity] Relax op: statistical (#13991)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the statistical operators.\r\n\r\n* [Unity] Relax op: neural networks (#13993)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the neural network operators.\r\n\r\n* [Unity] Relax op: creation (#13984)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the tensor creation operators.\r\n\r\n* [Unity] Relax op: linear algebra (#13988)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the linear algebra operators.\r\n\r\nCo-authored-by: Siyuan Fneg <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity] Relax op: search (#13992)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the search operators.\r\n\r\n* [Unity] Relax op: manipulation (#13989)\r\n\r\nThis PR is about the high-level tensor computation operators in Relax.\r\n\r\nThis PR includes the tensor manipulation operators.\r\n\r\nCo-authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\n\r\n* [Unity] NestedMsg Support utility (#13995)\r\n\r\nThis PR introduce NestedMsg to robustly handle nested-tuple analysis.\r\n\r\nRelax support nested tuple structures in the IR.\r\nNested tuple structure is important to support advanced groupings in\r\ncases such as gradient calculation and other scenarios.\r\n\r\nThe possible presence of nested tuple does mean that we need to to\r\nrobustly handle analysis that contains nested tuple structures in a dataflow graph.\r\n\r\nThis PR introduces a NestedMsg<T> class that corresponds to a possibly\r\nnested message tuple for a given leaf message class T.\r\nWe also introduces various helper functions to compose and decompose messages.\r\n\r\nCo-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\n\r\n* [Unity][Pass] Operator Fusion Passes (#14001)\r\n\r\n[Unity][Pass] Operator fusion passes\r\n\r\nThis PR introduces three passes for operator fusion:\r\n1. AnnotateTIROpPattern: analysis the operator kind from PrimFunc.\r\n2. FuseOps: fuse operators for Relax functions, which adds a new fused\r\nrelax primitive function.\r\n3. FuseTIR: fuse corresponding TIR PrimFuncs for the fused relax.\r\n\r\n* [Unity][Pass] LambdaLift pass (#14012)\r\n\r\n* [Unity][VM] Supporting \"compiled\" exec mode. (#14015)\r\n\r\n[VM] Supporting \"compiled\" exec mode.\r\n\r\nThis PR adds support of \"compiled\" mode to the VM. The compiled mode translate\r\nthe relax function into TIR function and drive it through the TIR function.\r\n\r\nIt is different from the micro AOT codegen, which generate TIR code that targets\r\nthe micro C runtime environment and useful for resource limited settings with\r\nsmaller set of features. Both leverages the low-level TIR build that is also shared with TensorIR.\r\n\r\nThe current implementation targets full TVM (VM) runtime, that comes with PackedFunc,\r\nobject, tuple, closure and all kinds of rich structure support. This also mean that\r\nwe can leverage the full runtime support to handle things like allocation, dynamic shape,\r\neasy plugins and python interaction, which are not available in more limited runtime.\r\n\r\nThe user directly use the same API to load the generated code regardless of\r\ncompiled mode or bytecode. And just need to change one line\r\n\r\n```python\r\nex = relax.vm.build(mod, target, exec_mode=\"compiled\")\r\n```\r\n\r\nThe simplicity is thanks to the TVM runtime archiecture that allows us to compose things together in objects.\r\nThe only difference is how the PackedFunc of high-level driving is being provided. In the case of bytecode\r\nit is normal interpretation and in the case of compiled mode it is TIR.\r\n\r\nIt is a complete implementation Unit-testcases are added. All codegen build tests are updated to include two\r\nexec_modes and have passed locally.\r\n\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>\r\n\r\n* [Unity][Pass] BindParams pass, FoldConstant pass (#14016)\r\n\r\nThis PR introduces FoldConstant/BindParam passes.\r\n\r\nCo-authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-Authored-by: Hongyi Jin <3231950289@qq.com>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity][Pass][TuningAPI] Introduce TuningAPI and MetaSchedule pass (#14014)\r\n\r\nAdd TuningAPI and MetaSchedule tuning pass\r\n\r\n* [Unity] Relay -> Relax translator  (#14026)\r\n\r\nThis PR implements a Relay to Relax translator, which allows us to import Relay workloads to Relax for benchmarking and development purposes (tests and examples are added).\r\n\r\n* [Unity][Pass] Normalize Pass (#14031)\r\n\r\nThis PR implements relax `Normalize` Pass, which allows users to transform Relax IR to normal form, i.e., the expressions are normalized (no nesting and hence the AST is in ANF), and all `checked_type_` and `shape_` of expressions are available. (tests are added).\r\n\r\nCo-Authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\n\r\n* [Unity][BlockBuilder] CallTE convert PrimValue args  (#14028)\r\n\r\nPrior to this PR, the `call_te` of BlockBuilder is not capable of converting PrimValue arguments and directly rejects PrimValues instead. This PR fixes this behavior with PrimValue conversion support and one regression test.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity][Pass] Wellformed Analysis (#14032)\r\n\r\nThis PR implements relax wellformed analysis, which checks if the IRModule is well-formed. (tests and examples are added).\r\n\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\r\nCo-authored-by: Yong Wu <yongcale@gmail.com>\r\nCo-Authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-Authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-Authored-by: Chaofan Lin <siriusneo@sjtu.edu.cn>\r\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\r\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>\r\n\r\n* [Unity][TVMScript] Move tir/relax import in script out of __init__.py (#14033)\r\n\r\nPrior to this PR, `python/tvm/script/__init__.py` imports both tir and relax\r\nsubmodules. This leads to the phenomenum that when people does\r\n```python\r\nfrom tvm.script import tir as T\r\n```\r\n, the relax submodule will be implicitly visited by `__init__.py` as well.\r\n\r\nSince TIR does not rely on Relax, it is good not to import both of them\r\nat the same time. (This can prevent cyclic imports sometimes.)\r\n\r\nThis PR does this decoupling by introducing two files\r\n\r\n* `python/tvm/script/relax.py`\r\n* `python/tvm/script/tir.py`\r\n\r\nand removing the imports from `python/tvm/script/__init__.py` and\r\n`python/tvm/script/parser/__init__.py`. With this change, we force people to\r\nmanually do `from tvm.script import tir` and `from tvm.script import relax`\r\nto use TVMScript parser, which is right our conventional way.\r\n\r\n* [Unity][Pass] Operator legalization (#14029)\r\n\r\nThis PR is the operator legalization pass, which transforms high-level\r\noperator calls to `call_tir`s of corresponding low-level TIR PrimFuncs.\r\n\r\n- The legalization pass provides customizability, which enables people\r\nto pass in a customized legalization map to override the default\r\nlegalization method.\r\n\r\n- The legalization supports symbolic shape. (At this moment only pooling\r\ndoes not support symbolic shape, as TOPI pooling does not support. This\r\nneeds to be fixed in followup PRs.)\r\n\r\n\r\nCo-authored-by: Chaofan Lin <siriusneo@sjtu.edu.cn>\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity][Op] Add ShapeExpr Tests for Reshape Op (#14035)\r\n\r\nThis PR specially checks the relax.reshape operator when the input is a ShapeExpr.\r\n\r\n* [Unity] Initial PyTorch Frontend (#14037)\r\n\r\n[Unity] Initial PyTorch Frontend\r\n\r\nThis PR introduces initial pytorch frontend components of Relax, including\r\n- a FX translator that translates a Torch FX graph module to an TVM IRModule,\r\n- a Relax-backend of Torch Dynamo, which brings the mechanism to build PyTorch model using Relax compilation pipeline,\r\n- a pipeline prototype that contains the collection of pre-defined pipelines that optimizes and lower IRModule before passing to minimum build.\r\n\r\nCo-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>\r\nCo-authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity][Pass] Block-level static memory planning (#14038)\r\n\r\nThis PR introduces the static memory planning pass on binding block level, as well as an analysis function that estimate the memory usage after the memory planning pass. It supports the following features: nested-tuples,  reuse memory of the input of reshape ops, an estimator that returns total memory size needed to be allocated before and after memory planning, as well as the number of tensors / memory blocks to be allocated before and after memory planning.\r\n\r\nThe estimation is static -- it does not consider control flows (such as \u201cif\u201d and cross-function calls). It simply accumulates the size of every alloc_tensor and alloc_storage.\r\n\r\nWe will produce \u201c`relax.memory.alloc_tensor/storage`\u201d as the results produced by memory planning.\r\n\r\n* [Unity] Disallow inline prim_func in relax IR (#14040)\r\n\r\nDisallow inline prim_func in relax IR\r\n\r\n* [Unity] Update tests to adapt to latest TVMScript syntax (#14039)\r\n\r\nGiven that some latest changes of TVMScript syntax have been merged,\r\nsome test files are now containing deprecated uses of TVMScript syntax.\r\nThis PR updates the test files with latest TVMScript syntax so that\r\nrunning the tests will not trigger deprecation warnings.\r\n\r\nCo-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>\r\n\r\n* [Unity] Relax dataflow pattern language (matching) (#14041)\r\n\r\nThe dataflow pattern language for Relax (originally from https://github.com/tlc-pack/relax/pull/163).\r\n\r\nThe implementation splits patterns into two parts:\r\n\r\n- Match an Expression: match an expression syntactically (MatchExprPattern, i.e., DFPatternMatcher);\r\n- Match a Graph: match a graph (cross multiple VarBinding) topologically (MatchGraphPattern);\r\n\r\n* [Unity] Statement rewriter for DataflowBlock (#14043)\r\n\r\nThis PR implements a few APIs to quickly perform statement-level mutation:\r\n`add`/`remove_unused`/`remove_all_unused`/`replace_all_uses`.\r\nIt also implements `remove_all_unused` to remove dead statements inside `DataflowBlock`.\r\n\r\n* [Unity][Pass] FuseOps FuseTIR fixes (#14044)\r\n\r\nThis PR fixes two bugs of FuseOps and FuseTIR:\r\n\r\nIt fixes FuseOps who only rewrites the \"main\" function of the\r\nIRModule. After the fix, FuseOps now goes through each non-primitive\r\nRelax function. Test cases for both FuseOps and FuseTIR sides are added\r\nso ensure that both of the two passes work for cases of multiple Relax\r\nfunctions.\r\n\r\nIt also fixes FuseOps and FuseTIR who did not take \"call_dps_packed\" style\r\n\"call_tir\" into account. The previous behavior will directly downcast\r\nthe first argument of \"call_tir\" to GlobalVar, which is not right when\r\nthe \"call_tir\" is in \"call_dps_packed\" stype and the first argument is\r\na PackedFunc. With this fix, FuseOps and FuseTIR will skip such\r\n\"call_tir\"s. Tests for both CallTIR and CallOps are added accordingly.\r\n\r\n* [Unity][TVMScript] Overload `__neg__` for relax expr (#14045)\r\n\r\nThis PR overloads `__neg__` given that `relax.negative` is now supported. Besides, it adds `test_op_misc.py` and brings tests for calling overloaded operators.\r\n\r\n* [Unity][VM] Add per-op profiling support  (#14053)\r\n\r\nAdds per-op profiling support to Relax VM, in a way similar to how Relay VM is instrumented via the common profiling infra in the runtime. Profiling over RPC is supported.\r\n\r\nExample output:\r\n```\r\nName                          Duration (us)  Percent    Device  Count                                 Argument Shapes  \r\nconv2d1                          705,779.00    51.22  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 54, 54]  \r\nconv2d                           669,589.00    48.60  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 56, 56]  \r\nrelu                                 683.00     0.05  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 56, 56]  \r\nrelu1                                679.00     0.05  hexagon0      1  float32[1, 64, 54, 54], float32[1, 64, 54, 54]  \r\nvm.builtin.check_tensor_info          28.00     0.00  hexagon0      1                          float32[1, 64, 56, 56]  \r\nvm.builtin.match_shape                25.00     0.00  hexagon0      1                          float32[1, 64, 56, 56]  \r\n----------                                                                                                             \r\nSum                            1,376,783.00    99.93                6                                                  \r\nTotal                                  0.00               cpu0      1                                                  \r\nTotal                          1,377,809.00           hexagon0      1                                                  \r\n\r\nConfiguration\r\n-------------\r\nNumber of threads: 4\r\nExecutor: VM\r\n```\r\n\r\n\r\nThe original PR: https://github.com/tlc-pack/relax/pull/422\r\n\r\n* [Unity][BYOC] Add pattern-based partitioning pass (#14054)\r\n\r\nThis adds a new pass, FuseOpsByPattern, which applies pattern matching to each function in the given module, and groups matched expressions into a new function. The end result is similar to FuseOps, but fusion is driven completely by\r\nthe provided patterns. The implementation also reuses OperatorFusor used by FuseOps to create grouped functions from partitioned groups, further illustrating the similarity between the two passes.\r\n\r\nThe new pass will serve the same role the MergeComposite pass plays in Relay BYOC - grouped functions are annotated with the \"composite\" attribute to denote what operations a given function consists of, and offloaded to external backends. But it can be also useful in non-BYOC settings, for example to support advanced fusion that the op-kind based one doesn't handle (fused MHA, conv2d / gemm + reduction fusion, etc).\r\n\r\nThe original PR: https://github.com/tlc-pack/relax/pull/366\r\n\r\n* [Unity] Relax op: collapse sum (#14059)\r\n\r\nThis PR brings high-level operators `relax.collapse_sum_like` and `relax.collapse_sum_to` which is useful when doing AD in Relax. To achieve this, it exposes the interface of `topi.collapse_sum`. Moreover, this PR also implements the legalization of these op and adds corresponding tests.\r\n\r\n* [Unity][Fix][Pass] Fix FuseOps for lack graph edges (#14058)\r\n\r\nThis PR fixes a mistake of #14044. In #14044, in VisitLeaf of graph\r\nconstruction of FuseOps, we first check if the input node is Leaf and\r\nthen check if it is Tuple. This is not right: as Tuple is not\r\ncategorized as one leaf node, when the input node is a Tuple, the\r\nfunction will return since the input is not a LeafNode. And the check\r\nfor Tuple will thereby never holds.\r\n\r\nIt is quite interesting that our existing unit tests fail to filter this\r\nmistake out. I add a regression test for this case, which can ensure\r\nthat the tuple is always visited.\r\n\r\n* [Unity][Pass] Remove Unused Function (#14061)\r\n\r\nThis PR implements a pass to clean up unused functions. \r\n\r\nCo-authored-by: masahi <masahi129@gmail.com>\r\n\r\n* [Unity][BYOC] Add pass to merge composite functions to offload large subgraphs (#14062)\r\n\r\nThis PR adds a pass that merges neighboring calls to composite functions offloaded to the same external backend into one function. This is important for backends that want to receive as large subgraph as possible, for example TensorRT. It plays the same role as the MergeCompilerRegion pass in Relay BYOC does, and the algorithm follows the same idea described in https://discuss.tvm.apache.org/t/relay-improved-graph-partitioning-algorithm/5830. \r\n\r\nOriginal PR\r\nhttps://github.com/tlc-pack/relax/pull/372\r\n\r\nSubstantial improvement by @yelite \r\nhttps://github.com/tlc-pack/relax/pull/411\r\n\r\nRelated fix PR by @yelite \r\nhttps://github.com/tlc-pack/relax/pull/406\r\n\r\nCo-authored-by: Lite Ye  <yelite958@gmail.com>\r\n\r\n* [Unity][Frontend] Annotate number of non-static input of FX function (#14067)\r\n\r\n* [Unity][Transform] Add LiftTransformParams pass (#14069)\r\n\r\nThis PR added a pass `LiftTransformParams`. It allows to compile the\r\nend-to-end model without weights provided. The idea is annotate the\r\ninput parameters that are weights, and identify and lift the\r\ntransformations to weights, and compile it to a separate function\r\n`transform_params` that can be executed in runtime. Users can run\r\n`transform_params` with weights to get the weights for the optimized\r\nmodel as a prep step before the deployment. In this way, we perform the\r\nsame optimizations and defer the weight transformations to the user\r\nside, while the overhead of the deferred weight transformation can be\r\nignored as it only need to be run once.\r\n\r\nThis pass is integrated with the default `vm.build`. It is optional and\r\nonly necessary when the parameters are kept as inputs when importing the\r\nmodel from the frontend.\r\n\r\n* [Unity][BYOC][Pass] RunCodegen and TensorRT  (#14078)\r\n\r\nThis PR introduces the fundamental workflow for BYOC and integrate TensorRT as a demonstration.\r\n\r\n* [Unity][Pass] Canonicalize Bindings (#14079)\r\n\r\nIt may be useful for some passes to collapse chains of definitions, particularly after other compiler transformations that may reduce or simplify some expressions.\r\n\r\nThis pass will take chains of definitions and replace references to later definitions to the original one. It works by checking `LookupBinding` for each var use-site and replacing the var with its definition if the definition was another var. Additionally, `MatchCast` bindings where the LHS and the RHS are guaranteed to match at compile time are canonicalized into ordinary `VarBinding`s.\r\n\r\nExample:\r\n```python\r\ny = x\r\nz = y\r\nw = z\r\no = w\r\np = o\r\n```\r\nWill be replaced with\r\n```python\r\ny = x\r\nz = x\r\nw = x\r\no = x\r\np = x\r\n```\r\n\r\nOriginal PR: https://github.com/tlc-pack/relax/pull/233\r\n\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\r\n\r\n* [Unity] Add testcases for `expr_args_converter` (#14080)\r\n\r\nThis is a missing test file when we added the `expr_args_converter`. This\r\nPR adds it back.\r\n\r\n* [Unity][BYOC] Add CUTLASS backend (#14081)\r\n\r\n\r\n\r\nCo-authored-by: Lite Ye  <yelite958@gmail.com>\r\n\r\n* [Unity][BYOC] Add DNNL backend (#14082)\r\n\r\nThis PR adds dnnl backend to the unity flow.\r\n\r\n* [Unity][Op] `log_softmax` and `cross_entropy_with_logits` (#14083)\r\n\r\nThis PR introduces two high-level operators log_softmax and cross_entropy_with_logits, which are important when we are calculating CrossEntropyLoss (in torch).\r\n\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\n\r\n* [Unity][Analysis] TIR pattern kind analysis for multi-buffer write block (#14075)\r\n\r\nThis PR supports TIR pattern kind analysis for TIR blocks which write\r\nto multiple buffers, which is helpful for normalization operators like\r\nlayernorm, groupnorm, etc.\r\n\r\nPrior to this PR, the analyzer does not support a blocks which write to\r\nmultiple buffers. On seeing such a block, the analyzer simply sets the\r\nanalysis result to \"opaque\". With this PR, on seeing a block which\r\nwrites multiple buffers, the analyzer will check if all the BufferStores\r\nhave the same indices. And it will only set the result to \"opaque\" when\r\nthe BufferStores have different indices.\r\n\r\nBy doing this, the analysis works for common cases where a block may\r\nwrite to multiple buffers, like layernorm or groupnorm.\r\n\r\nBesides the unit test for the analysis itself, this PR also adds a unit\r\ntest for FuseOps pass, make sure that a \"layernorm + relu\" pattern can\r\nbe fused together.\r\n\r\n* [Unity][Fix][Pass] FoldConstant with DCE in dataflow block (#14087)\r\n\r\nThe current FoldConstant pass does not support removing unused bindings\r\nin the post-folding function. Therefore, for large real-world models,\r\nthe built executable will be overlarge because of the redundant unused\r\nconstants.\r\n\r\nThis PR removes the redundant unused constant bindings in FoldConstant\r\nby using the analysis function \"RemoveAllUnused\".\r\n\r\nNote that \"RemoveAllUnused\" only works at dataflow block level.\r\nTherefore FoldConstant will not remove unused bindings outside of\r\ndataflow block as well.\r\n\r\n* [Unity] Refactor Relax Build JIT UX (#14088)\r\n\r\nThis PR refactors relax build so it get exposed at the opt-level.\r\nWe also introduces an explicit jit functionality to handle\r\nlive loading of compiled artifacts from cutlass.\r\n\r\nWe also move relax vm to runtime so it can be clearly isolated\r\nfrom the rest of the compiler stack.\r\n\r\n* [Unity][Relax] Set Shape Function to Be Host Function (#14090)\r\n\r\nSet shape function to be host func.\r\n\r\n* [Unity] Fix typo in the comment (#14096)\r\n\r\n* [Unity] Lower `shape_of` to a builtin (#14093)\r\n\r\nThis PR lowers shape_of op to a Relax VM builtin, and changes a utility function to take StructInfo as input.\r\n\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\r\n\r\n* [Unity] Relax Recursive function (#14092)\r\n\r\nThis PR adds TVMScript local recursive function support. It also update lambda lifting pass. Removed CalledGlobalVars, it was not used anymore. It also updates well-form pass to allow un-defined vars for recursive call\r\n\r\n* [Unity][Layout] Add layout transformation analysis for PrimFunc (#14066)\r\n\r\n* [Layout] Add layout transformation analysis for PrimFunc.\r\n\r\nThis change adds a PrimFunc level analysis to suggest layout transformations to block and buffers in the PrimFunc based on the layout transformations to PrimFunc outputs.\r\n\r\n* Add support for multiple blocks such as split op.\r\n\r\n* Add negative tests and increase coverage.\r\n\r\n* fix warning message\r\n\r\n* fix lint\r\n\r\n* remove unused header\r\n\r\n* Address comments.\r\nMoved some utility functions to support/array.h\r\nimprove doc\r\n\r\n* fix deprecation warn T.var(\"int64\") to T.int64()\r\n\r\n* address comments\r\n\r\n* [Unity] Remove attributes of relax.print, assert and unique (#14101)\r\n\r\nRemove the attributes of operators assert, print and unique.\r\nUse PrimValue as substitute.\r\n\r\nCo-authored-by: Steven S. Lyubomirsky [slyubomirsky@gmail.com](mailto:slyubomirsky@gmail.com)\r\nCo-authored-by: Prakalp Srivastava [prakalp@octoml.ai](mailto:prakalp@octoml.ai)\r\n\r\n* [Unity][BYOC]Add relax backend pattern registry (#14106)\r\n\r\n* Add relax backend pattern registry\r\n\r\n* Add doc\r\n\r\n* [Unity] Update tests again to adapt to latest TVMScript syntax (#14115)\r\n\r\n* finished\r\n\r\n* fix\r\n\r\n* rollback merge_composite_functions\r\n\r\n* [Unity][Fix] Fix bug in MergeCompositeFunctions (#14117)\r\n\r\nCurrently `MergeCompositeFunctions` will modify the map while iterating over it, and that makes tests/python/relax/test_transform_merge_composite_functions.py does not pass. This PR fixes this bug.\r\n\r\n* [Unity][BlockBuilder] Add `name_hint` argument for `emit` and `emit_output` (#14126)\r\n\r\nThis PR adds `name_hint` argument for `emit` and `emit_output` API of Relax blockbuilder. The argument exists in the C++ side but not exposed to Python side (So user who use the Python bb.emit will let `name_hint` be `\"\"` by default).\r\n\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\n\r\n* [Unity][WEB] Relax vm on web runtime (#14131)\r\n\r\nThis PR brings initial relax vm support on web runtime\r\n\r\n* [Unity] Add Global info (#14132)\r\n\r\n* [Unity][BYOC] Add transposed matmul support to Relax CUTLASS BYOC (#14128)\r\n\r\nAdd transposed matmul support for Relax CUTLASS\r\n\r\n* [Unity][TVMScript] emit_te sugar (#14123)\r\n\r\nThis PR adds R.emit_te meta-programming mechanism to emit a topi operator from TVMScript\r\n\r\n* [Unity][BYOC] Assign group to unused bindings and ignroe PrimFunc (#14139)\r\n\r\n* [Unity][BYOC] Assign group to unused bindings and ignroe PrimFunc\r\n\r\n* Update fuse_ops.cc\r\n\r\n* [Unity] Add callback to FuseOpsByPattern to check match result is accepted (#14109)\r\n\r\n* [Unity] Add callback to FuseOpsByPattern to check match result is accepted\r\n\r\n* add callnode to callback args\r\n\r\n* update pattern registry\r\n\r\n* fix\r\n\r\n* [Unity][Legalize] Fix Scalar Constant Legalization (#14127)\r\n\r\nThis PR fixes the issue of loss of data type during Legalization. Previously, if we use a constant scalar in operators like `multiply`, it will automatically be converted to a python data type variable, which may lose its original data type. For example, `float16` may become python `float` and be interpreted as `float32` later.\r\n\r\nThis is now fixed by avoiding scalar value conversion. The conversion could be added back once we have better support for scalar prim value.\r\n\r\nCo-authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-authored-by: Wuwei Lin <wuwei@apache.org>\r\n\r\n* [Unity][Pass] Enhance constant folding to fold relax ops by evaluating them. (#14146)\r\n\r\n* [Unity][Pass] Enhance constant folding to fold relax ops\r\nby evaluating them.\r\n\r\nThis uses the registered legalization function attached to\r\nthe op to lower it to call_tir and uses the existing call_tir\r\nfolding mechanism to fold it.\r\n\r\nThis kind of op folding is only allowed within dataflow block\r\nas ops could have side-effects.\r\n\r\nLimitations:\r\n* This currently does not support folding ops\r\nthat could lower to multiple call_tir bindings.\r\n* Folding by evaluating ops is not always beneficial.\r\nWe need a heuristic to check if it is useful. This is\r\nnot implemented yet and folding is always allowed\r\nby evaluating expressions.\r\n\r\n* fix ci error\r\n\r\n* fix doc\r\n\r\n* fix bug\r\n\r\n* [Unity][Debugging] AST printer (#14152)\r\n\r\nThis PR transfers over the AST printer from tlc-pack/relax. The AST printer is a debugging tool that prints out a Relax AST in a precise and human-readable format, which can be helpful for debugging the parser or various passes.\r\n\r\nCo-authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-authored-by: Lesheng Jin <34279105+LeshengJin@users.noreply.github.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Ruihang Lai <ruihangl@cd.cmu.edu>\r\nCo-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>\r\n\r\n* [Unity][Pass] Support Symbolic Shape Deduction during BindParam (#14154)\r\n\r\n`BindParam` replace function params to constant nodes. However, it will\r\ndrop the shape information of the params, considering the following case:\r\n\r\n```python\r\n@R.function\r\ndef main(\r\n    x: R.Tensor((\"batch\", \"m\"), dtype=\"float32\"),\r\n    w0: R.Tensor((\"n\", \"m\"), dtype=\"float32\"),\r\n    b0: R.Tensor((\"n\",), dtype=\"float32\"),\r\n    w1: R.Tensor((\"k\", \"n\"), dtype=\"float32\"),\r\n    b1: R.Tensor((\"k\",), dtype=\"float32\"),\r\n) -> R.Tensor((\"batch\", \"k\"), dtype=\"float32\"):\r\n    batch = T.Var(\"batch\", \"int64\")\r\n    k = T.Var(\"k\", \"int64\")\r\n    m = T.Var(\"m\", \"int64\")\r\n    n = T.Var(\"n\", \"int64\")\r\n    with R.dataflow():\r\n        lv0 = R.call_tir(\"linear0\", (x, w0, b0), out_sinfo=R.Tensor((batch, n), dtype=\"float32\"))\r\n        out = R.call_tir(\"linear1\", (lv0, w1, b1), out_sinfo=R.Tensor((batch, k), dtype=\"float32\"))\r\n        R.output(out)\r\n    return out\r\n```\r\n\r\nThe current pass will simply drop the symbolic var `n`, `k` and cause\r\nundefined vars during build as\r\n```python\r\n@R.function\r\ndef main(x: R.Tensor((1, \"m\"), dtype=\"float32\")) -> R.Tensor(dtype=\"float32\", ndim=2):\r\n    m = T.Var(\"m\", \"int64\")\r\n    n = T.Var(\"n\", \"int64\")\r\n    k = T.Var(\"k\", \"int64\")\r\n    with R.dataflow():\r\n        lv0 = R.call_tir(\"linear0\", (x, metadata[\"relax.expr.Constant\"][0], metadata[\"relax.expr.Constant\"][1]), out_sinfo=R.Tensor((1, n), dtype=\"float32\"))\r\n        out = R.call_tir(\"linear1\", (lv0, metadata[\"relax.expr.Constant\"][2], metadata[\"relax.expr.Constant\"][3]), out_sinfo=R.Tensor((1, k), dtype=\"float32\"))\r\n        R.output(out)\r\n    return out\r\n```\r\n\r\nThis PR updates the pass to bind the symbolic shape during binding.\r\n\r\n* [Unity][Analysis] Checking function return struct info in well-formed check (#14155)\r\n\r\nThe current well-formed misses the check of function return struct info,\r\nwhich may mistakenly pass the check if there are undefined vars in the\r\nfunction return struct info.\r\n\r\n* [Unity][BYOC] Use Relax legalize + CPU build for reference in tests (#14162)\r\n\r\n* clean dnnl test\r\n\r\n* clean trt test\r\n\r\n* clean cutlass test\r\n\r\n* fix gelu legalize for fp16\r\n\r\n* use memoize in dnnl and trt tests\r\n\r\n* [Unity] Add bind_constants option to FuseOpsByPattern (#14151)\r\n\r\n* [Unity] Add lift_constatns option to FuseOpsByPattern\r\n\r\n* lift_constants -> bind_constants\r\n\r\n* [Unity][Analysis] Analysis for detecting recursion in Relax (#14149)\r\n\r\n* DFS based attempt to detect mutual recursion\r\n\r\n* Use Johnson's circuit-detecting algorithm instead\r\n\r\n* Fix control flow test\r\n\r\n* Detect all recursion anyway\r\n\r\n* Add new test cases for simple recursion\r\n\r\n* Fix mistake in test case\r\n\r\n* Include missing dependencies\r\n\r\n* Remove trailing whitespace\r\n\r\n* Dependencies are simply references, not necessarily calls\r\n\r\n* More trailing whitespace\r\n\r\n* Newline at end of file\r\n\r\n* Fix spacing in docstring\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n---------\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n* [Unity][BYOC] Add batch matmul support to Relax CUTLASS BYOC (#14166)\r\n\r\n* Add batch matmul support to Relax CUTLASS BYOC\r\n\r\n* Allow more dtypes\r\n\r\n* Fix tests\r\n\r\n* Revert how to get batch attr\r\n\r\n* [Unity][Op] Full support of Relax op `power` (#14171)\r\n\r\nThis PR provides a full support of `R.power` including op registering, legalization, overloading `__power__` for Expr and torch fx frontend.\r\n\r\n* [Unity][Analysis] Restore Python bindings for var analyses (#14180)\r\n\r\nRestore Python bindings for var analyses\r\n\r\n* [Unity][OP] Add an operator for fused multi head attention (#14150)\r\n\r\n* [Unity][OP] Add an operator for fused multi head attention\r\n\r\nThis PR introduces the new relax operator `R.nn.attention` for fused multi head attention, and the support of fused multi head attention to relax cutlass BYOC. The input of the operator are query, key and value tensor, with `BSNH` layout, namely `[batch size, sequence length, number of heads, dimension of heads]`. And the output shares the same layout with all input tensor.\r\n\r\n* remove useless codes, remove attrs and add memoize\r\n\r\n* add more dispatches\r\n\r\n* nit and fix rebase\r\n\r\n* fix linter\r\n\r\n* add support for bias\r\n\r\n* fix lint\r\n\r\n* BNSS layout for bias\r\n\r\n* update doc\r\n\r\n* fix typo\r\n\r\n* support bias broadcast\r\n\r\n* [Unity][WEBGPU] Codegen improvements and WebRuntime (#14187)\r\n\r\nThis PR makes various improvements web codegen in relax web runtime.\r\n\r\nCorrect support of shift operators.\r\nUpdate relax vm to make most use of internal allocators.\r\nUpdate the webgpu API to the latest spec.\r\n\r\n* [Unity][Transform] LiftTransformParams handling multiple functions (#14192)\r\n\r\nPreviously, the LiftTransformParams pass only works on function\r\n`\"main\"`. This is a bit restrictive as in our recent practice on stable\r\ndiffusion, there are cases where multiple Relax functions inside an\r\nIRModule all need to be transformed.\r\n\r\nTherefore, this PR enhances the LiftTransformParams pass, so that it\r\nwill now transform **all** functions **with attribute `num_input`**. For\r\nfunctions without this attribute, the pass will simply skip them.\r\n\r\n* [Unity][Op] Group normalization (#14194)\r\n\r\n* [TOPI] Group normalization\r\n\r\nAs more and more ML models nowadays contain the group normalization\r\ncomputation, we find it beneficial to introduce this op to TOPI level.\r\nIt will enable us to optimize the group normalization operation as a\r\nwhole in a more convenient way.\r\n\r\nThis PR introduces the group normalization op to TOPI. The group norm\r\noperation was introduced in https://arxiv.org/abs/1803.08494. The\r\nimplementation uses tuple reduction, same as the implementation of layer\r\nnorm. Implemented with tuple reduction, the corresponding generated TIR\r\nfunction can be optimized by cross-thread reduction or rfactor through\r\nMetaSchedule.\r\n\r\nPrior to this PR, the group normalization operations in frontend models\r\nare translated to a series of operations, which brings inconvenience\r\nwhen we want to optimize the group norm op as a whole.\r\n\r\nWith the TOPI implementation of group norm being introduced by #14193,\r\nwe can now use it to legalize the high-level group norm op and optimize\r\nit using cross-thread reduction or rfactor via MetaSchedule.\r\n\r\n\r\nCo-authored-by: Bohan Hou <spectrometerh@gmail.com>\r\n\r\n* [Unity][Op] Argmax and argmin (#14195)\r\n\r\nThis PR introduces full support to the argmax and argmin op to the unity\r\nbranch, including the structure info inference, the legalization, and\r\nthe translation from Torch FX.\r\n\r\n* [Unity][Op] Legalize `round`, `floor`, `ceil`, `sign` (#14198)\r\n\r\nThis PR implements the legalization for four unary operators:\r\n* round,\r\n* floor,\r\n* ceil,\r\n* sign.\r\n\r\nUnit tests are provided accordingly.\r\n\r\n* [Unity][Frontend] FX translator supporting more ops (#14196)\r\n\r\nThis PR improves the torch FX translator in the following perspectives:\r\n* support unary op `sigmoid` and `round`,\r\n* support in-place `fill`, `triu` and `tril`,\r\n* support `tensor`, `arange`, `empty`,\r\n* support `bmm` (batch matrix multiplication),\r\n* support `astype`,\r\n* support `chunk` and `squeeze`.\r\n\r\nThis PR also fixes `Embedding`. Previously the translation assumes that\r\nthe input to Embedding will only be 1-dimensional, and will throw\r\nexception when the input has more than one dimension (i.e., batched).\r\nThis PR brings the support.\r\n\r\n* [Unity][Frontend] FX translator returning weights with `keep_params_as_input` (#14197)\r\n\r\nPR #14067 introduces the flag `keep_params_as_input` to the FX\r\ntranslator, in the purpose to handle to model weights outside of the\r\ntranslated Relax function.\r\n\r\nThis PR takes a further step, by returning the model weights as\r\nNDArrays when the flag `keep_params_as_input` is true. With this PR, the\r\ntranslator now can return back the weights upon requested. Otherwise,\r\nafter the import we will lose the model weights in the given PyTorch\r\nmodel.\r\n\r\n* [Unity][Fix] FX translating dtype (#14201)\r\n\r\nThis PR fixes a bug of the current FX translator when dealing with\r\ndtype.\r\n\r\nPreviously, the translator does not take the cases\r\n```python\r\ndtype = x.getattr(\"dtype\")\r\n```\r\ninto consideration. In this case, the dtype will be a fx.Node object,\r\nwhile the translator assumes that the dtype is either a string or\r\na torch native datatype (e.g., torch.float32).\r\n\r\nThis PR fixes this by doing an environment table lookup before for all\r\ndtypes.\r\n\r\n* [Unity][TIR][Pass] ForceNarrowIndexToInt32 (#14203)\r\n\r\n[TIR][Pass] ForceNarrowIndexToInt32\r\n\r\nThis PR introduces a pass which forces every index expression in a\r\nPrimFunc to have dtype int32. Meanwhile, it also checks if all integer\r\nbuffers in the PrimFunc have int32 dtype, and report error if some\r\ninteger buffer has dtype other than int32.\r\n\r\nIn terms of implementation, this pass leverages the\r\nIndexDataTypeNormalizer, with the target dtype being int32.\r\n\r\nThis PR contains a few basic tests that come from\r\n`test_tir_transform_narrow_datatype.py`, and contains some negative\r\ntests as well.\r\n\r\n* [Unity][Frontend] FX translator support torch.baddbmm (#14202)\r\n\r\nThis PR brings the support of translating `torch.baddbmm` into\r\ncombination of operators (matmul, add, multiply). Unit tests\r\nare provided accordingly.\r\n\r\nThis PR also fixes the kwarg fetching issue of `torch.interpolate`.\r\n\r\n* [CI] Point cpu ci to dep with onnx (#40)\r\n\r\nPoint cpu ci to dep with onnx\r\n\r\n* [Unity] Introduce Default GPU Schedule Pass (#14182)\r\n\r\n* Implement default schedule.\r\n\r\n* Add test.\r\n\r\n* Add tests.\r\n\r\n* Fix linting.\r\n\r\n* Skip scheduled blocks.\r\n\r\n* Address issues.\r\n\r\n* Use target current.\r\n\r\n* Minor fixes.\r\n\r\n* Remove Mutator.\r\n\r\n* Move pas\u2026",
    "author": "jwfromm",
    "date": "2023-03-08T22:16:56Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/16/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369039729/jobs/7642373981"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369039934/jobs/7642374264"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369124988/jobs/7642559118"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369125546/jobs/7642559968"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369210978/jobs/7642742819"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369211819/jobs/7642744258"
      }
    ]
  },
  {
    "sha": "c8788fc6d6b34b3b9c32cf5fc60a5baa6d0db716",
    "headline": "[ONNX] Support auto_pad for MaxPool (#37)",
    "body": "* support auto_pad attribute\r\n\r\n* extend test scope for max pool\r\n\r\n* fix pylint",
    "author": "KJlaccHoeUM9l",
    "date": "2023-03-08T16:34:12Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/15/display/redirect"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366443958/jobs/7636464977"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366443959/jobs/7636464989"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366553261/jobs/7636714059"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366553416/jobs/7636714504"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366657589/jobs/7636955343"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366658105/jobs/7636956304"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366819776/jobs/7637326987"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366820631/jobs/7637328698"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366921451/jobs/7637560955"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4366921712/jobs/7637561370"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367031174/jobs/7637813469"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367031832/jobs/7637814897"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367142709/jobs/7638077238"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367146847/jobs/7638085368"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367304737/jobs/7638442587"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367305391/jobs/7638443973"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367408335/jobs/7638677935"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367409671/jobs/7638680781"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367500659/jobs/7638887950"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367502083/jobs/7638891211"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367604450/jobs/7639132545"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367605826/jobs/7639135281"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367742624/jobs/7639436883"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367742631/jobs/7639436917"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367829042/jobs/7639635082"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367831360/jobs/7639640674"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367937234/jobs/7639876908"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4367937356/jobs/7639877106"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368039438/jobs/7640115993"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368039835/jobs/7640116452"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368193550/jobs/7640460932"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368193790/jobs/7640461403"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368275559/jobs/7640647633"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368275974/jobs/7640648382"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368377905/jobs/7640878608"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368378331/jobs/7640879475"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368479941/jobs/7641119819"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368482413/jobs/7641124475"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368624516/jobs/7641442048"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368624854/jobs/7641442717"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368705846/jobs/7641621124"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368706963/jobs/7641623425"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368805798/jobs/7641848746"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368807158/jobs/7641851369"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368900606/jobs/7642067926"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4368902456/jobs/7642071860"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4369021943/jobs/7642336240"
      }
    ]
  },
  {
    "sha": "fd5b2db28ca5cc7c60931cd95f7edfc6c5b219e1",
    "headline": "[Unity][WEB] Improve ndarray cache (#14236)",
    "body": "This PR improves NDArray cache with param sharding",
    "author": "tqchen",
    "date": "2023-03-08T15:35:12Z",
    "jobs": []
  },
  {
    "sha": "d5c850789f929e4839a0db9ae80ba7c72d44efec",
    "headline": "[Unity][WEB] Update text prompts for syntactical correctness (#14237)",
    "body": "This PR fixes some punctuation in the prompts of the NDArray cache.",
    "author": "MasterJH5574",
    "date": "2023-03-08T15:24:23Z",
    "jobs": []
  },
  {
    "sha": "9879263c7399f806dc31ce24190636b14bfd599a",
    "headline": "[Unity][TVMScript] Fix prim_func lost issue in relax.emit_te (#14189)",
    "body": "Previously R.emit_te was introduced in https://github.com/apache/tvm/pull/14123. The `prim_func`s were not added into the same `ir_module`. The pr is to fix this issue, move some `call_tir` input handling code from `bb.call_te` to utils, then it is able to be leveraged by both `bb.emit_te` and `R.emit_te`.",
    "author": "yongwww",
    "date": "2023-03-08T13:53:21Z",
    "jobs": []
  },
  {
    "sha": "5a1be2151e01328f17fcdbc3e88d5ab703b36b37",
    "headline": "[Unity][TVMScript] Enable Context-Aware Parsing (#14234)",
    "body": "This PR enables context-aware parsing for TVMScript. It means that the parser has full control of the statements in the specific context/namespace.\r\n\r\nFor example, we can override the global var `__call__` method in Relax function to make sure to generate Relax Calls instead of Relay Calls.",
    "author": "Hzfengsy",
    "date": "2023-03-08T13:28:24Z",
    "jobs": []
  },
  {
    "sha": "4380b206bc0ba97d945b427a88fe3361fce99d16",
    "headline": "[Unity][Bugfix] Do not include `PrimFunc`s in the dependency graph wh\u2026",
    "body": "\u2026en checking for recursion (#14228)\n\nThis PR fixes a small oversight in #14149. Namely, the analysis for detecting recursion in Relax adds all reference to global vars into the dependency graph, but some global vars might refer to TIR PrimFuncs. Those should not be in the dependency graph, and this PR ignores any that it detects.",
    "author": "slyubomirsky",
    "date": "2023-03-08T06:46:37Z",
    "jobs": []
  },
  {
    "sha": "38807e93225c71919651c39adda57beaba51d48a",
    "headline": "[Unity][Transform] SimplifyNormInference (#14221)",
    "body": "This PR adds a new pass SimplifyNormInference to unpack the norm operator into a sequence of operators, which is same as the pass SimplifyInference in Relay.\r\n\r\n---------\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "SiriusNEO",
    "date": "2023-03-08T06:20:22Z",
    "jobs": []
  },
  {
    "sha": "0ce19d120cca67c06a426238e973fbe7157503a0",
    "headline": "[Unity] Improve implementation of FuseOps (#14229)",
    "body": "This PR improves implementation of fuse-ops so it is more deterministic.\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "tqchen",
    "date": "2023-03-08T00:57:23Z",
    "jobs": []
  },
  {
    "sha": "01837931aad24196ce2c6f295e14794fcd0561a1",
    "headline": "[Frontends] Add operators to support BERT (#39)",
    "body": "Add a few ops needed for bert support",
    "author": "jwfromm",
    "date": "2023-03-07T23:41:16Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/14/display/redirect"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359621437/jobs/7621604981"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359621676/jobs/7621605368"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359706204/jobs/7621785124"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359706854/jobs/7621786203"
      },
      {
        "name": "Nightly Docker Update / open_update_pr",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359766508/jobs/7621916763"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359871381/jobs/7622152793"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359872159/jobs/7622154204"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359994347/jobs/7622414229"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359994412/jobs/7622411674"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360207111/jobs/7622861604"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360207366/jobs/7622861957"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360413638/jobs/7623290006"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360414229/jobs/7623290885"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360583752/jobs/7623635929"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360583761/jobs/7623635940"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360698845/jobs/7623870786"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360699040/jobs/7623871104"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360776437/jobs/7624023296"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360776647/jobs/7624023755"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360838774/jobs/7624144118"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360838854/jobs/7624144171"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360891527/jobs/7624245762"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360892493/jobs/7624247602"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360948440/jobs/7624356517"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4360948559/jobs/7624356782"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361013274/jobs/7624485030"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361014671/jobs/7624487315"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361113955/jobs/7624696657"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361114125/jobs/7624696858"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361178962/jobs/7624826559"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361178968/jobs/7624826548"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361238103/jobs/7624936395"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361238626/jobs/7624937274"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361301945/jobs/7625070103"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361301950/jobs/7625070099"
      },
      {
        "name": "Update nightly branch / update-nightly-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361303262/jobs/7625072558"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361405293/jobs/7625271066"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361406782/jobs/7625273820"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361467009/jobs/7625380697"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361469069/jobs/7625384056"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361536631/jobs/7625511335"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361537177/jobs/7625512048"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361605838/jobs/7625640886"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361607363/jobs/7625644575"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361721203/jobs/7625879932"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361721632/jobs/7625880482"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361791187/jobs/7626018933"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361792203/jobs/7626020716"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361853677/jobs/7626136109"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361853912/jobs/7626136522"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361925883/jobs/7626277141"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4361928156/jobs/7626280672"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362039392/jobs/7626501673"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362039699/jobs/7626502137"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362103754/jobs/7626629196"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362104144/jobs/7626629773"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362190843/jobs/7626800009"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362191546/jobs/7626801218"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362277696/jobs/7626982040"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362278066/jobs/7626982692"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362414607/jobs/7627282025"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362414778/jobs/7627282340"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362510759/jobs/7627486843"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362511680/jobs/7627488600"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362599862/jobs/7627680995"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362601796/jobs/7627684775"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362699296/jobs/7627900709"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362699935/jobs/7627901994"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362851571/jobs/7628236300"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362851830/jobs/7628236788"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362940493/jobs/7628429415"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4362941435/jobs/7628431359"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363053919/jobs/7628678557"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363055261/jobs/7628681214"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363164566/jobs/7628924992"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363165823/jobs/7628928198"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363321136/jobs/7629278033"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363321606/jobs/7629278836"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363428879/jobs/7629512397"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363429513/jobs/7629513453"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363527933/jobs/7629718278"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363528542/jobs/7629719440"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363633547/jobs/7629963013"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363634636/jobs/7629965203"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363776152/jobs/7630280406"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363776804/jobs/7630281478"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363861396/jobs/7630476015"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363862757/jobs/7630478354"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363965784/jobs/7630705861"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4363966490/jobs/7630707166"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364071119/jobs/7630938656"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364071610/jobs/7630939514"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364237774/jobs/7631309760"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364238739/jobs/7631311573"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364391394/jobs/7631650738"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364391859/jobs/7631651398"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364494276/jobs/7631880986"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4364494280/jobs/7631881030"
      }
    ]
  },
  {
    "sha": "c718395ea0858573b79453ca8601395be313613c",
    "headline": "[Bug] Fix issue in einsum check (#33)",
    "body": "* save int64 in PrimExpr explicitly\r\n\r\n* fix lint\r\n\r\n* extract int64 from PrimExpr\r\n\r\n---------\r\n\r\nCo-authored-by: Valery Chernov <valery.chernov@deelvin.com>",
    "author": "vvchernov",
    "date": "2023-03-07T22:49:41Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/13/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359341578/jobs/7621023353"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359342954/jobs/7621026006"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359469226/jobs/7621293994"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359469241/jobs/7621294003"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359537941/jobs/7621434971"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359538566/jobs/7621435849"
      }
    ]
  },
  {
    "sha": "34635edc1d72ed76c1daa87a5c1aee46f6960205",
    "headline": "[Unity] Merge with upstream after rebasing onto TVM main (#44)",
    "body": "This PR is another merge with tvm/unity. The key difference between this and #41 is that this merge takes place after `tvm/unity` rebased on top of `tvm/main`. As can be seen, this causes the number of touched files to be quite a bit longer. However, I think this is still likely a more useful history than rebasing.",
    "author": "jwfromm",
    "date": "2023-03-07T20:57:24Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/12/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358501715/jobs/7619158257"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358502950/jobs/7619161025"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358648265/jobs/7619490062"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358649446/jobs/7619492224"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358731458/jobs/7619676979"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358732066/jobs/7619678220"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358833057/jobs/7619906718"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358833871/jobs/7619908345"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358931904/jobs/7620136422"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358933922/jobs/7620140057"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359073419/jobs/7620441706"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359073608/jobs/7620442063"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359160977/jobs/7620627887"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359162560/jobs/7620630481"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359253164/jobs/7620827198"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4359254450/jobs/7620830219"
      }
    ]
  },
  {
    "sha": "3f1215349eeed3e065a8da2bd479ef6d05b33133",
    "headline": "[Unity] ensure memory.alloc_tensor/storage roundtrippable (#14226)",
    "body": "- make R.memory.alloc_tensor/alloc_storage roundtrippable\r\n- Expose relax.vm ops to python side",
    "author": "yongwww",
    "date": "2023-03-07T20:20:50Z",
    "jobs": []
  },
  {
    "sha": "1c7baff90cd2fa6e1d3ea47259ad492716c2b09d",
    "headline": "[TUZ-6][OP] Support Greater Operator (#45)",
    "body": "Add Greater.",
    "author": "zxybazh",
    "date": "2023-03-07T19:50:50Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "success",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/11/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358043061/jobs/7618114953"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358044140/jobs/7618116820"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358205391/jobs/7618479895"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358206214/jobs/7618481520"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358292305/jobs/7618673168"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358292822/jobs/7618672811"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358397815/jobs/7618907722"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4358398020/jobs/7618908046"
      }
    ]
  },
  {
    "sha": "2491e995152fd3c51bddfc9de38909b0caced10c",
    "headline": "[ci] Ignore free(): invalid pointer error (#46)",
    "body": "This ignores a specific error that can occur after a successful test\r\nsuite run which likely comes up due to conflicting LLVM versions\r\n\r\nCo-authored-by: driazati <driazati@users.noreply.github.com>",
    "author": "driazati",
    "date": "2023-03-07T19:49:00Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "error",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/10/display/redirect"
      }
    ]
  },
  {
    "sha": "cf1b5da9a63257b174fbab580e3b634fa2d71304",
    "headline": "[Unity][WEB] Simplify WebGPU Codegen per spec (#14225)",
    "body": "This PR simplfies webgpu codegen according to spec and also PR adds utils to allow tvmjs to export runtime from a different TVM_HOME.",
    "author": "tqchen",
    "date": "2023-03-07T18:00:00Z",
    "jobs": []
  },
  {
    "sha": "18472a779d67835a4fafd94f157a2d97a8b10704",
    "headline": "[Unity][Transform] Memory plan across the IRModule (#14220)",
    "body": "Previously the static memory planning pass only works at single function\r\nlevel - each function inside the an IRModule will be independently\r\nplanned. This is not perfect for the VM to reuse allocated memory across\r\ndifferent functions.\r\n\r\nTherefore, this PR turns the static memory planning pass into a module\r\npass. Now the plan is done across the IRModule, so that memory alloation\r\nin different functions can share the same storage token when planning.\r\nWith this PR, it is hopeful that the VM will find more opportunities of\r\nmemory reuse.",
    "author": "MasterJH5574",
    "date": "2023-03-07T13:37:18Z",
    "jobs": []
  },
  {
    "sha": "1bece4bd282a1c9a63b6d6afb8f74d5dc199ef08",
    "headline": "[Unity][BYOC] Add dynamic shape support to CUTLASS matmul (#14216)",
    "body": "Add symbolic shape support for matmul and batch matmul in cutlass BYOC",
    "author": "yelite",
    "date": "2023-03-07T10:46:06Z",
    "jobs": []
  },
  {
    "sha": "2399cb88f302247c543ec54db2f36ef66440cea2",
    "headline": "[CI] Update ci_cpu image to include ONNX",
    "body": "",
    "author": "jwfromm",
    "date": "2023-03-07T00:29:49Z",
    "jobs": [
      {
        "name": "unity/branch",
        "status": "error",
        "url": "https://ci.tlcpack.ai/job/octoml-relax-unity/job/relax/9/display/redirect"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4349457527/jobs/7599150736"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4349551406/jobs/7599343634"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4349673577/jobs/7599600002"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4349793970/jobs/7599853660"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4349900510/jobs/7600070652"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350005020/jobs/7600276183"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350081530/jobs/7600436153"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350136905/jobs/7600539830"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350207408/jobs/7600687190"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350248270/jobs/7600769634"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350312806/jobs/7600898237"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350323625/jobs/7600919501"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350389357/jobs/7601045773"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350389755/jobs/7601046532"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350444092/jobs/7601152087"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350444442/jobs/7601152534"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350507931/jobs/7601273667"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350508402/jobs/7601274397"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350615560/jobs/7601494431"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350616050/jobs/7601495144"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350681084/jobs/7601622580"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350681089/jobs/7601622600"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350742870/jobs/7601733781"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350743402/jobs/7601734760"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350809726/jobs/7601867131"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350810437/jobs/7601868231"
      },
      {
        "name": "Update nightly branch / update-nightly-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350813045/jobs/7601873931"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350926624/jobs/7602097492"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350926824/jobs/7602097751"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350997116/jobs/7602224471"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4350997287/jobs/7602224739"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351072533/jobs/7602370366"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351074131/jobs/7602372889"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351150662/jobs/7602521608"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351152946/jobs/7602525397"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351278494/jobs/7602780613"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351279608/jobs/7602782454"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351360932/jobs/7602940288"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351361573/jobs/7602941255"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351432326/jobs/7603079314"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351432477/jobs/7603079569"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351510899/jobs/7603243184"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351510913/jobs/7603243203"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351637978/jobs/7603499668"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351638913/jobs/7603501205"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351709509/jobs/7603642949"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351711093/jobs/7603645883"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351802698/jobs/7603830921"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351803434/jobs/7603832172"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351898702/jobs/7604033339"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4351899480/jobs/7604034921"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352054715/jobs/7604369335"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352055480/jobs/7604370685"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352158451/jobs/7604593172"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352158576/jobs/7604593588"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352253766/jobs/7604806291"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352254394/jobs/7604807483"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352362454/jobs/7605052575"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352364720/jobs/7605057405"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352534981/jobs/7605435194"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352536241/jobs/7605438242"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352636364/jobs/7605660631"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352638675/jobs/7605664774"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352755495/jobs/7605928128"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352757374/jobs/7605931711"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352881293/jobs/7606215642"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4352882390/jobs/7606217889"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353054121/jobs/7606613912"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353054847/jobs/7606615362"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353173790/jobs/7606879894"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353174180/jobs/7606880642"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353280403/jobs/7607109239"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353281143/jobs/7607110756"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353399074/jobs/7607385662"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353402809/jobs/7607395094"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353553050/jobs/7607737378"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353553579/jobs/7607738371"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353645327/jobs/7607951722"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353645325/jobs/7607951476"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353761015/jobs/7608206845"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353761266/jobs/7608207313"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353875545/jobs/7608470738"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4353877472/jobs/7608474618"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354051195/jobs/7608873794"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354052164/jobs/7608875752"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354219769/jobs/7609254085"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354220063/jobs/7609254643"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354335747/jobs/7609505428"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354336315/jobs/7609506567"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354434253/jobs/7609723724"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354436856/jobs/7609729809"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354574973/jobs/7610045924"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354575233/jobs/7610046528"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354687526/jobs/7610300949"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354687839/jobs/7610301555"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354788241/jobs/7610528032"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354789955/jobs/7610531165"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/octoml/relax/actions/runs/4354915404/jobs/7610833553"
      }
    ]
  },
  {
    "sha": "50992d662f357fbf9b43edc4471f5ecd216568ab",
    "headline": "[Unity][Frontend] from_fx keeps parameters in order (#14214)",
    "body": "Previously `from_fx` iterates model's `named_parameters()` to fetch all\r\nmodel's parameters. However, the order of iteration is not deterministic\r\nand might cause flakiness and instability in deployment.\r\n\r\nThis PR removes the undeterminism by using `sorted(named_parameters())`.\r\nIn this way we are guaranteed to have a deterministic list of function\r\nparameters.",
    "author": "MasterJH5574",
    "date": "2023-03-06T21:46:21Z",
    "jobs": []
  },
  {
    "sha": "42c51ca6d3c24fdad05bd43a3fac2bd85a6fb3e8",
    "headline": "[Unity][WEB] Improve webgpu codegen options to skip readonly (#14213)",
    "body": "Readonly detection can cause the kernel arg order\r\nto be different from other shaders, add options to\r\noptionally skip it.\r\n\r\nAlso makes export auto use emcc for wasm target.",
    "author": "tqchen",
    "date": "2023-03-06T20:25:15Z",
    "jobs": []
  },
  {
    "sha": "cc991d547f03a377f179e0def9717448041501b9",
    "headline": "[Unity][Frontend] FX translator supports unwrapping unit return tuple\u2026",
    "body": "\u2026 (#14212)\n\nPreviously we found that the FX GraphModule captured by torch.dynamo\r\nwill always return a tuple at the end, even if the Module being traced\r\nreturns a single object. Unwrapping the unit tuple in that case can\r\nhelp and ease model deployment. Therefore, this PR introduces an option\r\n\"unwrap_return_unit_tuple\" to `from_fx`, to indicate if we caller wants\r\nto unwrap the returned unit tuple.\r\n\r\n`dynamo_subgraph_capture` now will always use True on this option.",
    "author": "MasterJH5574",
    "date": "2023-03-06T19:23:29Z",
    "jobs": []
  },
  {
    "sha": "d86d0b201ceb163a862aa0921feab77f7ebed73b",
    "headline": "[Unity][Frontend] Attach imported model weights, deprecate ImporterOu\u2026",
    "body": "\u2026tput (#14211)\n\nThe class ImporterOutput introduced by #14197 turns out introducing\r\ninconvenience for use, as it is a wrapper of IRModule and the\r\nparameters, and prevents good composability when we want to combine\r\nmultiple ImporterOutput together.\r\n\r\nFrom the perspective of easy use, we would like to return IRModule only.\r\nTherefore, as another approach, we can make the imported parameters as\r\none function attribute, and detach the parameters later.\r\n\r\nThis PR implements this and provides the param detachment function. With\r\nonly IRModule being manipulated, we can easily combine the results from\r\nmultiple imports.",
    "author": "MasterJH5574",
    "date": "2023-03-06T18:48:17Z",
    "jobs": []
  },
  {
    "sha": "093720230bc2403d278e820bd164b93158ab8823",
    "headline": "[Unity] Introduce Default GPU Schedule Pass (#14182)",
    "body": "* Implement default schedule.\r\n\r\n* Add test.\r\n\r\n* Add tests.\r\n\r\n* Fix linting.\r\n\r\n* Skip scheduled blocks.\r\n\r\n* Address issues.\r\n\r\n* Use target current.\r\n\r\n* Minor fixes.\r\n\r\n* Remove Mutator.\r\n\r\n* Move pass to tir given it's all primfunc scheduling.\r\n\r\n* Move unit tests.\r\n\r\n* Remove redundant headers and adjust comments.\r\n\r\n* Add more explanation to the pass documents.\r\n\r\n* Modify pass name.\r\n\r\n* Fix comment.",
    "author": "zxybazh",
    "date": "2023-03-06T18:19:19Z",
    "jobs": []
  },
  {
    "sha": "6de551b65b220a3ed3c2c699b1f957bd1527f4b6",
    "headline": "[Unity][Frontend] FX translator support torch.baddbmm (#14202)",
    "body": "This PR brings the support of translating `torch.baddbmm` into\r\ncombination of operators (matmul, add, multiply). Unit tests\r\nare provided accordingly.\r\n\r\nThis PR also fixes the kwarg fetching issue of `torch.interpolate`.",
    "author": "MasterJH5574",
    "date": "2023-03-06T01:39:15Z",
    "jobs": []
  },
  {
    "sha": "8f7c34393aef847814625cbb323159cdd39518c2",
    "headline": "[Unity][TIR][Pass] ForceNarrowIndexToInt32 (#14203)",
    "body": "[TIR][Pass] ForceNarrowIndexToInt32\r\n\r\nThis PR introduces a pass which forces every index expression in a\r\nPrimFunc to have dtype int32. Meanwhile, it also checks if all integer\r\nbuffers in the PrimFunc have int32 dtype, and report error if some\r\ninteger buffer has dtype other than int32.\r\n\r\nIn terms of implementation, this pass leverages the\r\nIndexDataTypeNormalizer, with the target dtype being int32.\r\n\r\nThis PR contains a few basic tests that come from\r\n`test_tir_transform_narrow_datatype.py`, and contains some negative\r\ntests as well.",
    "author": "MasterJH5574",
    "date": "2023-03-06T00:49:50Z",
    "jobs": []
  },
  {
    "sha": "d103ee2070f531394a49e5ad137afa5151aa2f36",
    "headline": "[Unity][Fix] FX translating dtype (#14201)",
    "body": "This PR fixes a bug of the current FX translator when dealing with\ndtype.\n\nPreviously, the translator does not take the cases\n```python\ndtype = x.getattr(\"dtype\")\n```\ninto consideration. In this case, the dtype will be a fx.Node object,\nwhile the translator assumes that the dtype is either a string or\na torch native datatype (e.g., torch.float32).\n\nThis PR fixes this by doing an environment table lookup before for all\ndtypes.",
    "author": "MasterJH5574",
    "date": "2023-03-05T12:51:22Z",
    "jobs": []
  },
  {
    "sha": "f7f24b7d164c925f0f758b213d4c5a50a3e25709",
    "headline": "[Unity][Frontend] FX translator returning weights with `keep_params_a\u2026",
    "body": "\u2026s_input` (#14197)\n\nPR #14067 introduces the flag `keep_params_as_input` to the FX\r\ntranslator, in the purpose to handle to model weights outside of the\r\ntranslated Relax function.\r\n\r\nThis PR takes a further step, by returning the model weights as\r\nNDArrays when the flag `keep_params_as_input` is true. With this PR, the\r\ntranslator now can return back the weights upon requested. Otherwise,\r\nafter the import we will lose the model weights in the given PyTorch\r\nmodel.",
    "author": "MasterJH5574",
    "date": "2023-03-05T03:59:53Z",
    "jobs": []
  },
  {
    "sha": "284b2787066aec6439acf7a420db0f2c326daad0",
    "headline": "[Unity][Frontend] FX translator supporting more ops (#14196)",
    "body": "This PR improves the torch FX translator in the following perspectives:\r\n* support unary op `sigmoid` and `round`,\r\n* support in-place `fill`, `triu` and `tril`,\r\n* support `tensor`, `arange`, `empty`,\r\n* support `bmm` (batch matrix multiplication),\r\n* support `astype`,\r\n* support `chunk` and `squeeze`.\r\n\r\nThis PR also fixes `Embedding`. Previously the translation assumes that\r\nthe input to Embedding will only be 1-dimensional, and will throw\r\nexception when the input has more than one dimension (i.e., batched).\r\nThis PR brings the support.",
    "author": "MasterJH5574",
    "date": "2023-03-05T02:57:38Z",
    "jobs": []
  },
  {
    "sha": "0e98e6e478c560de73e5fc8d064e770c46277882",
    "headline": "[Unity][Op] Legalize `round`, `floor`, `ceil`, `sign` (#14198)",
    "body": "This PR implements the legalization for four unary operators:\r\n* round,\r\n* floor,\r\n* ceil,\r\n* sign.\r\n\r\nUnit tests are provided accordingly.",
    "author": "MasterJH5574",
    "date": "2023-03-05T02:09:18Z",
    "jobs": []
  },
  {
    "sha": "88ab7302ba0f0f01b5f2eedacc2de637d7fcabbe",
    "headline": "[Unity][Op] Argmax and argmin (#14195)",
    "body": "This PR introduces full support to the argmax and argmin op to the unity\r\nbranch, including the structure info inference, the legalization, and\r\nthe translation from Torch FX.",
    "author": "MasterJH5574",
    "date": "2023-03-05T00:20:10Z",
    "jobs": []
  },
  {
    "sha": "22b65bc6eb6af4f9ff99131811fa2e731e4b3f01",
    "headline": "[Unity][Op] Group normalization (#14194)",
    "body": "* [TOPI] Group normalization\r\n\r\nAs more and more ML models nowadays contain the group normalization\r\ncomputation, we find it beneficial to introduce this op to TOPI level.\r\nIt will enable us to optimize the group normalization operation as a\r\nwhole in a more convenient way.\r\n\r\nThis PR introduces the group normalization op to TOPI. The group norm\r\noperation was introduced in https://arxiv.org/abs/1803.08494. The\r\nimplementation uses tuple reduction, same as the implementation of layer\r\nnorm. Implemented with tuple reduction, the corresponding generated TIR\r\nfunction can be optimized by cross-thread reduction or rfactor through\r\nMetaSchedule.\r\n\r\nPrior to this PR, the group normalization operations in frontend models\r\nare translated to a series of operations, which brings inconvenience\r\nwhen we want to optimize the group norm op as a whole.\r\n\r\nWith the TOPI implementation of group norm being introduced by #14193,\r\nwe can now use it to legalize the high-level group norm op and optimize\r\nit using cross-thread reduction or rfactor via MetaSchedule.\r\n\r\n\r\nCo-authored-by: Bohan Hou <spectrometerh@gmail.com>",
    "author": "MasterJH5574",
    "date": "2023-03-04T23:33:48Z",
    "jobs": []
  },
  {
    "sha": "1f042218d36e7b548163a5e866b2dc4d9b7d4e69",
    "headline": "[Unity][Transform] LiftTransformParams handling multiple functions (#\u2026",
    "body": "\u202614192)\n\nPreviously, the LiftTransformParams pass only works on function\r\n`\"main\"`. This is a bit restrictive as in our recent practice on stable\r\ndiffusion, there are cases where multiple Relax functions inside an\r\nIRModule all need to be transformed.\r\n\r\nTherefore, this PR enhances the LiftTransformParams pass, so that it\r\nwill now transform **all** functions **with attribute `num_input`**. For\r\nfunctions without this attribute, the pass will simply skip them.",
    "author": "MasterJH5574",
    "date": "2023-03-04T18:26:02Z",
    "jobs": []
  },
  {
    "sha": "ed5367d161f2e5e40c6dd8eab3758c0630b32e66",
    "headline": "[Unity][WEBGPU] Codegen improvements and WebRuntime (#14187)",
    "body": "This PR makes various improvements web codegen in relax web runtime.\r\n\r\nCorrect support of shift operators.\r\nUpdate relax vm to make most use of internal allocators.\r\nUpdate the webgpu API to the latest spec.",
    "author": "tqchen",
    "date": "2023-03-04T04:52:38Z",
    "jobs": []
  },
  {
    "sha": "38315afbf28c17ea69afb716dbc1810e04def9a0",
    "headline": "[Unity][OP] Add an operator for fused multi head attention (#14150)",
    "body": "* [Unity][OP] Add an operator for fused multi head attention\r\n\r\nThis PR introduces the new relax operator `R.nn.attention` for fused multi head attention, and the support of fused multi head attention to relax cutlass BYOC. The input of the operator are query, key and value tensor, with `BSNH` layout, namely `[batch size, sequence length, number of heads, dimension of heads]`. And the output shares the same layout with all input tensor.\r\n\r\n* remove useless codes, remove attrs and add memoize\r\n\r\n* add more dispatches\r\n\r\n* nit and fix rebase\r\n\r\n* fix linter\r\n\r\n* add support for bias\r\n\r\n* fix lint\r\n\r\n* BNSS layout for bias\r\n\r\n* update doc\r\n\r\n* fix typo\r\n\r\n* support bias broadcast",
    "author": "cyx-6",
    "date": "2023-03-04T00:57:49Z",
    "jobs": []
  },
  {
    "sha": "475f3c24fae3387ed986b84773d343471143574c",
    "headline": "[Unity][Analysis] Restore Python bindings for var analyses (#14180)",
    "body": "Restore Python bindings for var analyses",
    "author": "slyubomirsky",
    "date": "2023-03-04T00:54:41Z",
    "jobs": []
  },
  {
    "sha": "781bfe0a21b4d27401ce30f5dd2ad156737299a6",
    "headline": "[Unity][Op] Full support of Relax op `power` (#14171)",
    "body": "This PR provides a full support of `R.power` including op registering, legalization, overloading `__power__` for Expr and torch fx frontend.",
    "author": "SiriusNEO",
    "date": "2023-03-02T18:25:44Z",
    "jobs": []
  },
  {
    "sha": "84238114297301cfd2575a17bd1c03bb08f7a9b9",
    "headline": "[Unity][BYOC] Add batch matmul support to Relax CUTLASS BYOC (#14166)",
    "body": "* Add batch matmul support to Relax CUTLASS BYOC\r\n\r\n* Allow more dtypes\r\n\r\n* Fix tests\r\n\r\n* Revert how to get batch attr",
    "author": "yelite",
    "date": "2023-03-02T06:13:08Z",
    "jobs": []
  },
  {
    "sha": "6ee79e1e08d60dcf6ed108d6dd9eb71a993d1273",
    "headline": "[Unity][Analysis] Analysis for detecting recursion in Relax (#14149)",
    "body": "* DFS based attempt to detect mutual recursion\r\n\r\n* Use Johnson's circuit-detecting algorithm instead\r\n\r\n* Fix control flow test\r\n\r\n* Detect all recursion anyway\r\n\r\n* Add new test cases for simple recursion\r\n\r\n* Fix mistake in test case\r\n\r\n* Include missing dependencies\r\n\r\n* Remove trailing whitespace\r\n\r\n* Dependencies are simply references, not necessarily calls\r\n\r\n* More trailing whitespace\r\n\r\n* Newline at end of file\r\n\r\n* Fix spacing in docstring\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\n\r\n---------\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "slyubomirsky",
    "date": "2023-03-01T21:23:49Z",
    "jobs": []
  },
  {
    "sha": "3fa880aeb594574bea2e16245bc1d2c9ca7e040c",
    "headline": "[Unity] Add bind_constants option to FuseOpsByPattern (#14151)",
    "body": "* [Unity] Add lift_constatns option to FuseOpsByPattern\r\n\r\n* lift_constants -> bind_constants",
    "author": "vinx13",
    "date": "2023-03-01T20:55:00Z",
    "jobs": []
  },
  {
    "sha": "e57f59178fe6895b6d571329eafeddd8d00d18dd",
    "headline": "[Unity][BYOC] Use Relax legalize + CPU build for reference in tests (\u2026",
    "body": "\u2026#14162)\n\n* clean dnnl test\r\n\r\n* clean trt test\r\n\r\n* clean cutlass test\r\n\r\n* fix gelu legalize for fp16\r\n\r\n* use memoize in dnnl and trt tests",
    "author": "masahi",
    "date": "2023-03-01T20:25:43Z",
    "jobs": []
  },
  {
    "sha": "67659acf34fa3834097f931a1125a206b72946a6",
    "headline": "[Unity][Analysis] Checking function return struct info in well-formed\u2026",
    "body": "\u2026 check (#14155)\n\nThe current well-formed misses the check of function return struct info,\r\nwhich may mistakenly pass the check if there are undefined vars in the\r\nfunction return struct info.",
    "author": "Hzfengsy",
    "date": "2023-03-01T13:49:11Z",
    "jobs": []
  },
  {
    "sha": "8a1e623fc1697523c5214275da1b268f5f4de757",
    "headline": "[Unity][Pass] Support Symbolic Shape Deduction during BindParam (#14154)",
    "body": "`BindParam` replace function params to constant nodes. However, it will\r\ndrop the shape information of the params, considering the following case:\r\n\r\n```python\r\n@R.function\r\ndef main(\r\n    x: R.Tensor((\"batch\", \"m\"), dtype=\"float32\"),\r\n    w0: R.Tensor((\"n\", \"m\"), dtype=\"float32\"),\r\n    b0: R.Tensor((\"n\",), dtype=\"float32\"),\r\n    w1: R.Tensor((\"k\", \"n\"), dtype=\"float32\"),\r\n    b1: R.Tensor((\"k\",), dtype=\"float32\"),\r\n) -> R.Tensor((\"batch\", \"k\"), dtype=\"float32\"):\r\n    batch = T.Var(\"batch\", \"int64\")\r\n    k = T.Var(\"k\", \"int64\")\r\n    m = T.Var(\"m\", \"int64\")\r\n    n = T.Var(\"n\", \"int64\")\r\n    with R.dataflow():\r\n        lv0 = R.call_tir(\"linear0\", (x, w0, b0), out_sinfo=R.Tensor((batch, n), dtype=\"float32\"))\r\n        out = R.call_tir(\"linear1\", (lv0, w1, b1), out_sinfo=R.Tensor((batch, k), dtype=\"float32\"))\r\n        R.output(out)\r\n    return out\r\n```\r\n\r\nThe current pass will simply drop the symbolic var `n`, `k` and cause\r\nundefined vars during build as\r\n```python\r\n@R.function\r\ndef main(x: R.Tensor((1, \"m\"), dtype=\"float32\")) -> R.Tensor(dtype=\"float32\", ndim=2):\r\n    m = T.Var(\"m\", \"int64\")\r\n    n = T.Var(\"n\", \"int64\")\r\n    k = T.Var(\"k\", \"int64\")\r\n    with R.dataflow():\r\n        lv0 = R.call_tir(\"linear0\", (x, metadata[\"relax.expr.Constant\"][0], metadata[\"relax.expr.Constant\"][1]), out_sinfo=R.Tensor((1, n), dtype=\"float32\"))\r\n        out = R.call_tir(\"linear1\", (lv0, metadata[\"relax.expr.Constant\"][2], metadata[\"relax.expr.Constant\"][3]), out_sinfo=R.Tensor((1, k), dtype=\"float32\"))\r\n        R.output(out)\r\n    return out\r\n```\r\n\r\nThis PR updates the pass to bind the symbolic shape during binding.",
    "author": "Hzfengsy",
    "date": "2023-03-01T13:46:11Z",
    "jobs": []
  },
  {
    "sha": "4c085d2212ecf94582741ca7bfd307be8b6d9c1c",
    "headline": "[Unity][Debugging] AST printer (#14152)",
    "body": "This PR transfers over the AST printer from tlc-pack/relax. The AST printer is a debugging tool that prints out a Relax AST in a precise and human-readable format, which can be helpful for debugging the parser or various passes.\r\n\r\nCo-authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-authored-by: Lesheng Jin <34279105+LeshengJin@users.noreply.github.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Ruihang Lai <ruihangl@cd.cmu.edu>\r\nCo-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>",
    "author": "slyubomirsky",
    "date": "2023-03-01T04:24:02Z",
    "jobs": []
  },
  {
    "sha": "c29ac7eef09b1cfbf917e465cd70b45f433f00b4",
    "headline": "[Unity][Pass] Enhance constant folding to fold relax ops by evaluatin\u2026",
    "body": "\u2026g them. (#14146)\n\n* [Unity][Pass] Enhance constant folding to fold relax ops\r\nby evaluating them.\r\n\r\nThis uses the registered legalization function attached to\r\nthe op to lower it to call_tir and uses the existing call_tir\r\nfolding mechanism to fold it.\r\n\r\nThis kind of op folding is only allowed within dataflow block\r\nas ops could have side-effects.\r\n\r\nLimitations:\r\n* This currently does not support folding ops\r\nthat could lower to multiple call_tir bindings.\r\n* Folding by evaluating ops is not always beneficial.\r\nWe need a heuristic to check if it is useful. This is\r\nnot implemented yet and folding is always allowed\r\nby evaluating expressions.\r\n\r\n* fix ci error\r\n\r\n* fix doc\r\n\r\n* fix bug",
    "author": "psrivas2",
    "date": "2023-02-28T21:12:48Z",
    "jobs": []
  },
  {
    "sha": "7a5d313068d5ef84671ace18ddb848ed2e2539fd",
    "headline": "[Unity][Legalize] Fix Scalar Constant Legalization (#14127)",
    "body": "This PR fixes the issue of loss of data type during Legalization. Previously, if we use a constant scalar in operators like `multiply`, it will automatically be converted to a python data type variable, which may lose its original data type. For example, `float16` may become python `float` and be interpreted as `float32` later.\r\n\r\nThis is now fixed by avoiding scalar value conversion. The conversion could be added back once we have better support for scalar prim value.\r\n\r\nCo-authored-by: Sunghyun Park <49998730+sunggg@users.noreply.github.com>\r\nCo-authored-by: Wuwei Lin <wuwei@apache.org>",
    "author": "zxybazh",
    "date": "2023-02-28T19:24:05Z",
    "jobs": []
  },
  {
    "sha": "63ce37d30b782bdc2b586bb6ec27827c00708653",
    "headline": "[Unity] Add callback to FuseOpsByPattern to check match result is acc\u2026",
    "body": "\u2026epted (#14109)\n\n* [Unity] Add callback to FuseOpsByPattern to check match result is accepted\r\n\r\n* add callnode to callback args\r\n\r\n* update pattern registry\r\n\r\n* fix",
    "author": "vinx13",
    "date": "2023-02-27T22:04:56Z",
    "jobs": []
  },
  {
    "sha": "28c682565538ed4c2fa81f65c755c9e8bb056602",
    "headline": "[Unity][BYOC] Assign group to unused bindings and ignroe PrimFunc (#1\u2026",
    "body": "\u20264139)\n\n* [Unity][BYOC] Assign group to unused bindings and ignroe PrimFunc\r\n\r\n* Update fuse_ops.cc",
    "author": "vinx13",
    "date": "2023-02-27T20:20:39Z",
    "jobs": []
  },
  {
    "sha": "4713b527cbd0c46bbe3ae66e3ec6fabf841fc8d0",
    "headline": "[Unity][TVMScript] emit_te sugar (#14123)",
    "body": "This PR adds R.emit_te meta-programming mechanism to emit a topi operator from TVMScript",
    "author": "yongwww",
    "date": "2023-02-27T14:09:40Z",
    "jobs": []
  },
  {
    "sha": "368d9f61939c579da3c975beb7bc9c9f3c87337d",
    "headline": "[Unity][BYOC] Add transposed matmul support to Relax CUTLASS BYOC (#1\u2026",
    "body": "\u20264128)\n\nAdd transposed matmul support for Relax CUTLASS",
    "author": "yelite",
    "date": "2023-02-27T08:33:50Z",
    "jobs": []
  },
  {
    "sha": "61c27610c9fead194735735e9a9630385183b75d",
    "headline": "[Unity] Add Global info (#14132)",
    "body": "",
    "author": "jinhongyii",
    "date": "2023-02-26T16:05:47Z",
    "jobs": []
  },
  {
    "sha": "57c86eb774364f69a7758c9d5d89fd13c83fcdce",
    "headline": "[Unity][WEB] Relax vm on web runtime (#14131)",
    "body": "This PR brings initial relax vm support on web runtime",
    "author": "tqchen",
    "date": "2023-02-25T18:22:10Z",
    "jobs": []
  },
  {
    "sha": "c7d2c38dd9bbe3e40fcd36a789b182022634741f",
    "headline": "[Unity][BlockBuilder] Add `name_hint` argument for `emit` and `emit_o\u2026",
    "body": "\u2026utput` (#14126)\n\nThis PR adds `name_hint` argument for `emit` and `emit_output` API of Relax blockbuilder. The argument exists in the C++ side but not exposed to Python side (So user who use the Python bb.emit will let `name_hint` be `\"\"` by default).\r\n\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>",
    "author": "SiriusNEO",
    "date": "2023-02-25T06:08:12Z",
    "jobs": []
  },
  {
    "sha": "02b3a1f2ff16916e0738f6e59daf3b3a9970bf48",
    "headline": "[Unity][Fix] Fix bug in MergeCompositeFunctions (#14117)",
    "body": "Currently `MergeCompositeFunctions` will modify the map while iterating over it, and that makes tests/python/relax/test_transform_merge_composite_functions.py does not pass. This PR fixes this bug.",
    "author": "Ubospica",
    "date": "2023-02-24T15:27:25Z",
    "jobs": []
  },
  {
    "sha": "89bb68b0a00aee62f86146102aafc900240deb75",
    "headline": "[Unity] Update tests again to adapt to latest TVMScript syntax (#14115)",
    "body": "* finished\n\n* fix\n\n* rollback merge_composite_functions",
    "author": "Ubospica",
    "date": "2023-02-24T13:23:36Z",
    "jobs": []
  },
  {
    "sha": "eaaa1fbdcbe59794bb4891d6ec8c3f0da93ccce5",
    "headline": "[Unity][BYOC]Add relax backend pattern registry (#14106)",
    "body": "* Add relax backend pattern registry\r\n\r\n* Add doc",
    "author": "yelite",
    "date": "2023-02-24T09:16:47Z",
    "jobs": []
  },
  {
    "sha": "b755a6f004b1246ae2438b5336371656d554556c",
    "headline": "[Unity] Remove attributes of relax.print, assert and unique (#14101)",
    "body": "Remove the attributes of operators assert, print and unique.\r\nUse PrimValue as substitute.\r\n\r\nCo-authored-by: Steven S. Lyubomirsky [slyubomirsky@gmail.com](mailto:slyubomirsky@gmail.com)\r\nCo-authored-by: Prakalp Srivastava [prakalp@octoml.ai](mailto:prakalp@octoml.ai)",
    "author": "yongwww",
    "date": "2023-02-23T15:32:21Z",
    "jobs": []
  },
  {
    "sha": "98d0a01bc945b8f0994c2bbefb2f72aa2a7998b8",
    "headline": "[Unity][Layout] Add layout transformation analysis for PrimFunc (#14066)",
    "body": "* [Layout] Add layout transformation analysis for PrimFunc.\r\n\r\nThis change adds a PrimFunc level analysis to suggest layout transformations to block and buffers in the PrimFunc based on the layout transformations to PrimFunc outputs.\r\n\r\n* Add support for multiple blocks such as split op.\r\n\r\n* Add negative tests and increase coverage.\r\n\r\n* fix warning message\r\n\r\n* fix lint\r\n\r\n* remove unused header\r\n\r\n* Address comments.\r\nMoved some utility functions to support/array.h\r\nimprove doc\r\n\r\n* fix deprecation warn T.var(\"int64\") to T.int64()\r\n\r\n* address comments",
    "author": "psrivas2",
    "date": "2023-02-23T10:21:20Z",
    "jobs": []
  },
  {
    "sha": "74f3007c81ae3250aab09ac37995e4a03f67c300",
    "headline": "[Unity] Relax Recursive function (#14092)",
    "body": "This PR adds TVMScript local recursive function support. It also update lambda lifting pass. Removed CalledGlobalVars, it was not used anymore. It also updates well-form pass to allow un-defined vars for recursive call",
    "author": "yongwww",
    "date": "2023-02-23T00:00:06Z",
    "jobs": []
  },
  {
    "sha": "a8338e6b6903f0a1f58461925491b8663c95b8a7",
    "headline": "[Unity] Lower `shape_of` to a builtin (#14093)",
    "body": "This PR lowers shape_of op to a Relax VM builtin, and changes a utility function to take StructInfo as input.\r\n\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>",
    "author": "YuchenJin",
    "date": "2023-02-22T23:57:49Z",
    "jobs": []
  },
  {
    "sha": "b1f2d530fce5ca28b7415ba76fb7ef5d4384343f",
    "headline": "[Unity] Fix typo in the comment (#14096)",
    "body": "",
    "author": "vinx13",
    "date": "2023-02-22T23:45:03Z",
    "jobs": []
  },
  {
    "sha": "cf36b7bdace70fb24ef3c918d70790df38de8dfc",
    "headline": "[Unity][Relax] Set Shape Function to Be Host Function (#14090)",
    "body": "Set shape function to be host func.",
    "author": "zxybazh",
    "date": "2023-02-22T20:50:15Z",
    "jobs": []
  },
  {
    "sha": "19509408b4929b4ab47816ba9290b3815d77b350",
    "headline": "[Unity] Refactor Relax Build JIT UX (#14088)",
    "body": "This PR refactors relax build so it get exposed at the opt-level.\r\nWe also introduces an explicit jit functionality to handle\r\nlive loading of compiled artifacts from cutlass.\r\n\r\nWe also move relax vm to runtime so it can be clearly isolated\r\nfrom the rest of the compiler stack.",
    "author": "tqchen",
    "date": "2023-02-22T19:47:11Z",
    "jobs": []
  },
  {
    "sha": "acd0e0b999df0bb4803a3d53fde8ad651513f6a9",
    "headline": "[Unity][Fix][Pass] FoldConstant with DCE in dataflow block (#14087)",
    "body": "The current FoldConstant pass does not support removing unused bindings\r\nin the post-folding function. Therefore, for large real-world models,\r\nthe built executable will be overlarge because of the redundant unused\r\nconstants.\r\n\r\nThis PR removes the redundant unused constant bindings in FoldConstant\r\nby using the analysis function \"RemoveAllUnused\".\r\n\r\nNote that \"RemoveAllUnused\" only works at dataflow block level.\r\nTherefore FoldConstant will not remove unused bindings outside of\r\ndataflow block as well.",
    "author": "MasterJH5574",
    "date": "2023-02-22T19:44:00Z",
    "jobs": []
  },
  {
    "sha": "6e2d7bbfd45b9b9f3e0a05d1e631ad80588b4e08",
    "headline": "[Unity][Analysis] TIR pattern kind analysis for multi-buffer write bl\u2026",
    "body": "\u2026ock (#14075)\n\nThis PR supports TIR pattern kind analysis for TIR blocks which write\r\nto multiple buffers, which is helpful for normalization operators like\r\nlayernorm, groupnorm, etc.\r\n\r\nPrior to this PR, the analyzer does not support a blocks which write to\r\nmultiple buffers. On seeing such a block, the analyzer simply sets the\r\nanalysis result to \"opaque\". With this PR, on seeing a block which\r\nwrites multiple buffers, the analyzer will check if all the BufferStores\r\nhave the same indices. And it will only set the result to \"opaque\" when\r\nthe BufferStores have different indices.\r\n\r\nBy doing this, the analysis works for common cases where a block may\r\nwrite to multiple buffers, like layernorm or groupnorm.\r\n\r\nBesides the unit test for the analysis itself, this PR also adds a unit\r\ntest for FuseOps pass, make sure that a \"layernorm + relu\" pattern can\r\nbe fused together.",
    "author": "MasterJH5574",
    "date": "2023-02-22T12:56:45Z",
    "jobs": []
  },
  {
    "sha": "7645aa7688266c47713f5522e2916fa3a6bf4ab8",
    "headline": "[Unity][Op] `log_softmax` and `cross_entropy_with_logits` (#14083)",
    "body": "This PR introduces two high-level operators log_softmax and cross_entropy_with_logits, which are important when we are calculating CrossEntropyLoss (in torch).\r\n\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>",
    "author": "SiriusNEO",
    "date": "2023-02-22T12:56:24Z",
    "jobs": []
  },
  {
    "sha": "defc15b6f24091c7958d4507e35d4c7887dca13f",
    "headline": "[Unity][BYOC] Add DNNL backend (#14082)",
    "body": "This PR adds dnnl backend to the unity flow.",
    "author": "masahi",
    "date": "2023-02-22T12:55:32Z",
    "jobs": []
  },
  {
    "sha": "b8460ebabccdc75e4f462551fde53bc7886f7e69",
    "headline": "[Unity][BYOC] Add CUTLASS backend (#14081)",
    "body": "\r\n\r\nCo-authored-by: Lite Ye  <yelite958@gmail.com>",
    "author": "masahi",
    "date": "2023-02-22T12:55:01Z",
    "jobs": []
  },
  {
    "sha": "3a64963901302faa070f6e9f7af4d9867f295d7f",
    "headline": "[Unity] Add testcases for `expr_args_converter` (#14080)",
    "body": "This is a missing test file when we added the `expr_args_converter`. This\r\nPR adds it back.",
    "author": "Hzfengsy",
    "date": "2023-02-22T12:51:10Z",
    "jobs": []
  },
  {
    "sha": "4ad8d6415554837ec2225b28d590365c46e4d0b9",
    "headline": "[Unity][Pass] Canonicalize Bindings (#14079)",
    "body": "It may be useful for some passes to collapse chains of definitions, particularly after other compiler transformations that may reduce or simplify some expressions.\r\n\r\nThis pass will take chains of definitions and replace references to later definitions to the original one. It works by checking `LookupBinding` for each var use-site and replacing the var with its definition if the definition was another var. Additionally, `MatchCast` bindings where the LHS and the RHS are guaranteed to match at compile time are canonicalized into ordinary `VarBinding`s.\r\n\r\nExample:\r\n```python\r\ny = x\r\nz = y\r\nw = z\r\no = w\r\np = o\r\n```\r\nWill be replaced with\r\n```python\r\ny = x\r\nz = x\r\nw = x\r\no = x\r\np = x\r\n```\r\n\r\nOriginal PR: https://github.com/tlc-pack/relax/pull/233\r\n\r\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>",
    "author": "YuchenJin",
    "date": "2023-02-22T05:31:52Z",
    "jobs": []
  },
  {
    "sha": "e8a0c4d01f67dfd7627bc66bd6805b5de9dd9822",
    "headline": "[Unity][BYOC][Pass] RunCodegen and TensorRT  (#14078)",
    "body": "This PR introduces the fundamental workflow for BYOC and integrate TensorRT as a demonstration.",
    "author": "sunggg",
    "date": "2023-02-22T03:14:52Z",
    "jobs": []
  },
  {
    "sha": "246c4c13b84eac2d9c5322f1d15a5c7c2268987d",
    "headline": "[Unity][Transform] Add LiftTransformParams pass (#14069)",
    "body": "This PR added a pass `LiftTransformParams`. It allows to compile the\r\nend-to-end model without weights provided. The idea is annotate the\r\ninput parameters that are weights, and identify and lift the\r\ntransformations to weights, and compile it to a separate function\r\n`transform_params` that can be executed in runtime. Users can run\r\n`transform_params` with weights to get the weights for the optimized\r\nmodel as a prep step before the deployment. In this way, we perform the\r\nsame optimizations and defer the weight transformations to the user\r\nside, while the overhead of the deferred weight transformation can be\r\nignored as it only need to be run once.\r\n\r\nThis pass is integrated with the default `vm.build`. It is optional and\r\nonly necessary when the parameters are kept as inputs when importing the\r\nmodel from the frontend.",
    "author": "vinx13",
    "date": "2023-02-21T20:21:56Z",
    "jobs": []
  },
  {
    "sha": "0d5883539d76cbaecc333f5a630c0f137213fe96",
    "headline": "[Unity][Frontend] Annotate number of non-static input of FX function \u2026",
    "body": "\u2026(#14067)",
    "author": "vinx13",
    "date": "2023-02-21T18:18:09Z",
    "jobs": []
  },
  {
    "sha": "ed2696a595342be49f9ab68c62fdaa67877ad476",
    "headline": "[Unity][BYOC] Add pass to merge composite functions to offload large \u2026",
    "body": "\u2026subgraphs (#14062)\n\nThis PR adds a pass that merges neighboring calls to composite functions offloaded to the same external backend into one function. This is important for backends that want to receive as large subgraph as possible, for example TensorRT. It plays the same role as the MergeCompilerRegion pass in Relay BYOC does, and the algorithm follows the same idea described in https://discuss.tvm.apache.org/t/relay-improved-graph-partitioning-algorithm/5830. \r\n\r\nOriginal PR\r\nhttps://github.com/tlc-pack/relax/pull/372\r\n\r\nSubstantial improvement by @yelite \r\nhttps://github.com/tlc-pack/relax/pull/411\r\n\r\nRelated fix PR by @yelite \r\nhttps://github.com/tlc-pack/relax/pull/406\r\n\r\nCo-authored-by: Lite Ye  <yelite958@gmail.com>",
    "author": "masahi",
    "date": "2023-02-21T07:13:58Z",
    "jobs": []
  },
  {
    "sha": "a9032d98e6256d01666b884a12f98ff763737811",
    "headline": "[Unity][Pass] Remove Unused Function (#14061)",
    "body": "This PR implements a pass to clean up unused functions. \r\n\r\nCo-authored-by: masahi <masahi129@gmail.com>",
    "author": "sunggg",
    "date": "2023-02-21T05:44:11Z",
    "jobs": []
  },
  {
    "sha": "06de35ec74f04189d856723a4f1ef2f51a607b95",
    "headline": "[Unity][Fix][Pass] Fix FuseOps for lack graph edges (#14058)",
    "body": "This PR fixes a mistake of #14044. In #14044, in VisitLeaf of graph\r\nconstruction of FuseOps, we first check if the input node is Leaf and\r\nthen check if it is Tuple. This is not right: as Tuple is not\r\ncategorized as one leaf node, when the input node is a Tuple, the\r\nfunction will return since the input is not a LeafNode. And the check\r\nfor Tuple will thereby never holds.\r\n\r\nIt is quite interesting that our existing unit tests fail to filter this\r\nmistake out. I add a regression test for this case, which can ensure\r\nthat the tuple is always visited.",
    "author": "MasterJH5574",
    "date": "2023-02-21T04:37:22Z",
    "jobs": []
  },
  {
    "sha": "fada70939489f496ef5afac52cacc95b016f30ef",
    "headline": "[Unity] Relax op: collapse sum (#14059)",
    "body": "This PR brings high-level operators `relax.collapse_sum_like` and `relax.collapse_sum_to` which is useful when doing AD in Relax. To achieve this, it exposes the interface of `topi.collapse_sum`. Moreover, this PR also implements the legalization of these op and adds corresponding tests.",
    "author": "SiriusNEO",
    "date": "2023-02-21T03:52:29Z",
    "jobs": []
  },
  {
    "sha": "aa55c05560de46462d223a6a01561b226c283abe",
    "headline": "[Unity][BYOC] Add pattern-based partitioning pass (#14054)",
    "body": "This adds a new pass, FuseOpsByPattern, which applies pattern matching to each function in the given module, and groups matched expressions into a new function. The end result is similar to FuseOps, but fusion is driven completely by\r\nthe provided patterns. The implementation also reuses OperatorFusor used by FuseOps to create grouped functions from partitioned groups, further illustrating the similarity between the two passes.\r\n\r\nThe new pass will serve the same role the MergeComposite pass plays in Relay BYOC - grouped functions are annotated with the \"composite\" attribute to denote what operations a given function consists of, and offloaded to external backends. But it can be also useful in non-BYOC settings, for example to support advanced fusion that the op-kind based one doesn't handle (fused MHA, conv2d / gemm + reduction fusion, etc).\r\n\r\nThe original PR: https://github.com/tlc-pack/relax/pull/366",
    "author": "masahi",
    "date": "2023-02-20T08:08:44Z",
    "jobs": []
  },
  {
    "sha": "fe528f647c4f89c6e17857c5c23c4bf65ad2ff0e",
    "headline": "[Unity][VM] Add per-op profiling support  (#14053)",
    "body": "Adds per-op profiling support to Relax VM, in a way similar to how Relay VM is instrumented via the common profiling infra in the runtime. Profiling over RPC is supported.\r\n\r\nExample output:\r\n```\r\nName                          Duration (us)  Percent    Device  Count                                 Argument Shapes  \r\nconv2d1                          705,779.00    51.22  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 54, 54]  \r\nconv2d                           669,589.00    48.60  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 56, 56]  \r\nrelu                                 683.00     0.05  hexagon0      1  float32[1, 64, 56, 56], float32[1, 64, 56, 56]  \r\nrelu1                                679.00     0.05  hexagon0      1  float32[1, 64, 54, 54], float32[1, 64, 54, 54]  \r\nvm.builtin.check_tensor_info          28.00     0.00  hexagon0      1                          float32[1, 64, 56, 56]  \r\nvm.builtin.match_shape                25.00     0.00  hexagon0      1                          float32[1, 64, 56, 56]  \r\n----------                                                                                                             \r\nSum                            1,376,783.00    99.93                6                                                  \r\nTotal                                  0.00               cpu0      1                                                  \r\nTotal                          1,377,809.00           hexagon0      1                                                  \r\n\r\nConfiguration\r\n-------------\r\nNumber of threads: 4\r\nExecutor: VM\r\n```\r\n\r\n\r\nThe original PR: https://github.com/tlc-pack/relax/pull/422",
    "author": "masahi",
    "date": "2023-02-20T07:47:56Z",
    "jobs": []
  },
  {
    "sha": "180bead06bd35ae0ef258121f6b9ec11ab860103",
    "headline": "[Unity][TVMScript] Overload `__neg__` for relax expr (#14045)",
    "body": "This PR overloads `__neg__` given that `relax.negative` is now supported. Besides, it adds `test_op_misc.py` and brings tests for calling overloaded operators.",
    "author": "SiriusNEO",
    "date": "2023-02-19T04:29:53Z",
    "jobs": []
  },
  {
    "sha": "c1439b3adb29609f2110d79dddf776b985c127cb",
    "headline": "[Unity][Pass] FuseOps FuseTIR fixes (#14044)",
    "body": "This PR fixes two bugs of FuseOps and FuseTIR:\r\n\r\nIt fixes FuseOps who only rewrites the \"main\" function of the\r\nIRModule. After the fix, FuseOps now goes through each non-primitive\r\nRelax function. Test cases for both FuseOps and FuseTIR sides are added\r\nso ensure that both of the two passes work for cases of multiple Relax\r\nfunctions.\r\n\r\nIt also fixes FuseOps and FuseTIR who did not take \"call_dps_packed\" style\r\n\"call_tir\" into account. The previous behavior will directly downcast\r\nthe first argument of \"call_tir\" to GlobalVar, which is not right when\r\nthe \"call_tir\" is in \"call_dps_packed\" stype and the first argument is\r\na PackedFunc. With this fix, FuseOps and FuseTIR will skip such\r\n\"call_tir\"s. Tests for both CallTIR and CallOps are added accordingly.",
    "author": "MasterJH5574",
    "date": "2023-02-19T03:19:54Z",
    "jobs": []
  },
  {
    "sha": "1b85765d5c3f4966efb0da5d9859941a03326e34",
    "headline": "[Unity] Statement rewriter for DataflowBlock (#14043)",
    "body": "This PR implements a few APIs to quickly perform statement-level mutation:\n`add`/`remove_unused`/`remove_all_unused`/`replace_all_uses`.\nIt also implements `remove_all_unused` to remove dead statements inside `DataflowBlock`.",
    "author": "ganler",
    "date": "2023-02-19T00:13:57Z",
    "jobs": []
  },
  {
    "sha": "782c632604564ea7648b9d874ce702c3705ca55b",
    "headline": "[Unity] Relax dataflow pattern language (matching) (#14041)",
    "body": "The dataflow pattern language for Relax (originally from https://github.com/tlc-pack/relax/pull/163).\n\nThe implementation splits patterns into two parts:\n\n- Match an Expression: match an expression syntactically (MatchExprPattern, i.e., DFPatternMatcher);\n- Match a Graph: match a graph (cross multiple VarBinding) topologically (MatchGraphPattern);",
    "author": "ganler",
    "date": "2023-02-18T21:57:02Z",
    "jobs": []
  },
  {
    "sha": "8039f6a75e5eb2020d400c96b28ec10f78933caa",
    "headline": "[Unity] Update tests to adapt to latest TVMScript syntax (#14039)",
    "body": "Given that some latest changes of TVMScript syntax have been merged,\r\nsome test files are now containing deprecated uses of TVMScript syntax.\r\nThis PR updates the test files with latest TVMScript syntax so that\r\nrunning the tests will not trigger deprecation warnings.\r\n\r\nCo-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>",
    "author": "MasterJH5574",
    "date": "2023-02-18T21:56:36Z",
    "jobs": []
  },
  {
    "sha": "d8fdd5cdb6a83f0ec07966045bbb081822049436",
    "headline": "[Unity] Disallow inline prim_func in relax IR (#14040)",
    "body": "Disallow inline prim_func in relax IR",
    "author": "yongwww",
    "date": "2023-02-18T19:41:10Z",
    "jobs": []
  },
  {
    "sha": "fd35d1ef5e6c8c3fdca9f3f5b3ae0db8f2625557",
    "headline": "[Unity][Pass] Block-level static memory planning (#14038)",
    "body": "This PR introduces the static memory planning pass on binding block level, as well as an analysis function that estimate the memory usage after the memory planning pass. It supports the following features: nested-tuples,  reuse memory of the input of reshape ops, an estimator that returns total memory size needed to be allocated before and after memory planning, as well as the number of tensors / memory blocks to be allocated before and after memory planning.\r\n\r\nThe estimation is static -- it does not consider control flows (such as \u201cif\u201d and cross-function calls). It simply accumulates the size of every alloc_tensor and alloc_storage.\r\n\r\nWe will produce \u201c`relax.memory.alloc_tensor/storage`\u201d as the results produced by memory planning.",
    "author": "MasterJH5574",
    "date": "2023-02-18T16:38:32Z",
    "jobs": []
  },
  {
    "sha": "9b5f2148fbd1e626dbb6ebb38fac6cafc6481178",
    "headline": "[Unity] Initial PyTorch Frontend (#14037)",
    "body": "[Unity] Initial PyTorch Frontend\r\n\r\nThis PR introduces initial pytorch frontend components of Relax, including\r\n- a FX translator that translates a Torch FX graph module to an TVM IRModule,\r\n- a Relax-backend of Torch Dynamo, which brings the mechanism to build PyTorch model using Relax compilation pipeline,\r\n- a pipeline prototype that contains the collection of pre-defined pipelines that optimizes and lower IRModule before passing to minimum build.\r\n\r\nCo-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>\r\nCo-authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "MasterJH5574",
    "date": "2023-02-18T16:19:48Z",
    "jobs": []
  },
  {
    "sha": "449e094e80261561f7eb8802a104569c54e101f0",
    "headline": "[Unity][Op] Add ShapeExpr Tests for Reshape Op (#14035)",
    "body": "This PR specially checks the relax.reshape operator when the input is a ShapeExpr.",
    "author": "Ubospica",
    "date": "2023-02-18T13:14:34Z",
    "jobs": []
  },
  {
    "sha": "b150b1a6ac80cb527df5ee71030995da2069b2c9",
    "headline": "[Unity][Pass] Operator legalization (#14029)",
    "body": "This PR is the operator legalization pass, which transforms high-level\r\noperator calls to `call_tir`s of corresponding low-level TIR PrimFuncs.\r\n\r\n- The legalization pass provides customizability, which enables people\r\nto pass in a customized legalization map to override the default\r\nlegalization method.\r\n\r\n- The legalization supports symbolic shape. (At this moment only pooling\r\ndoes not support symbolic shape, as TOPI pooling does not support. This\r\nneeds to be fixed in followup PRs.)\r\n\r\n\r\nCo-authored-by: Chaofan Lin <siriusneo@sjtu.edu.cn>\r\nCo-authored-by: Yixin Dong <ubospica@gmail.com>\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "MasterJH5574",
    "date": "2023-02-18T04:16:45Z",
    "jobs": []
  },
  {
    "sha": "596d472a4fc8927630f5216e5a1432283faf9d0f",
    "headline": "[Unity][TVMScript] Move tir/relax import in script out of __init__.py\u2026",
    "body": "\u2026 (#14033)\n\nPrior to this PR, `python/tvm/script/__init__.py` imports both tir and relax\r\nsubmodules. This leads to the phenomenum that when people does\r\n```python\r\nfrom tvm.script import tir as T\r\n```\r\n, the relax submodule will be implicitly visited by `__init__.py` as well.\r\n\r\nSince TIR does not rely on Relax, it is good not to import both of them\r\nat the same time. (This can prevent cyclic imports sometimes.)\r\n\r\nThis PR does this decoupling by introducing two files\r\n\r\n* `python/tvm/script/relax.py`\r\n* `python/tvm/script/tir.py`\r\n\r\nand removing the imports from `python/tvm/script/__init__.py` and\r\n`python/tvm/script/parser/__init__.py`. With this change, we force people to\r\nmanually do `from tvm.script import tir` and `from tvm.script import relax`\r\nto use TVMScript parser, which is right our conventional way.",
    "author": "MasterJH5574",
    "date": "2023-02-18T04:06:52Z",
    "jobs": []
  },
  {
    "sha": "53f800d32ff9ecb74379387f3089562cdfa63c12",
    "headline": "[Unity][Pass] Wellformed Analysis (#14032)",
    "body": "This PR implements relax wellformed analysis, which checks if the IRModule is well-formed. (tests and examples are added).\n\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>\nCo-authored-by: Steven S. Lyubomirsky <slyubomirsky@gmail.com>\nCo-authored-by: Yong Wu <yongcale@gmail.com>\nCo-Authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\nCo-Authored-by: Yixin Dong <ubospica@gmail.com>\nCo-Authored-by: Chaofan Lin <siriusneo@sjtu.edu.cn>\nCo-Authored-by: Prakalp Srivastava <prakalp@octoml.ai>\nCo-Authored-by: Junru Shao <junrushao1994@gmail.com>",
    "author": "LeshengJin",
    "date": "2023-02-18T02:11:08Z",
    "jobs": []
  },
  {
    "sha": "91adf7b0a4daf120e323075dded6e2322dcaae2f",
    "headline": "[Unity][BlockBuilder] CallTE convert PrimValue args  (#14028)",
    "body": "Prior to this PR, the `call_te` of BlockBuilder is not capable of converting PrimValue arguments and directly rejects PrimValues instead. This PR fixes this behavior with PrimValue conversion support and one regression test.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "MasterJH5574",
    "date": "2023-02-18T00:26:37Z",
    "jobs": []
  },
  {
    "sha": "fc0540cf11df9a5a3c5de58f725f8c703d8e0061",
    "headline": "[Unity][Pass] Normalize Pass (#14031)",
    "body": "This PR implements relax `Normalize` Pass, which allows users to transform Relax IR to normal form, i.e., the expressions are normalized (no nesting and hence the AST is in ANF), and all `checked_type_` and `shape_` of expressions are available. (tests are added).\r\n\r\nCo-Authored-by: Yuchen Jin <yuchenj@cs.washington.edu>\r\nCo-Authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\nCo-Authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-Authored-by: Tianqi Chen <tianqi.tchen@gmail.com>",
    "author": "LeshengJin",
    "date": "2023-02-18T00:25:37Z",
    "jobs": []
  },
  {
    "sha": "24470c95d7c1d4180e5a6ad8299d6276fe50b037",
    "headline": "[Unity] Relay -> Relax translator  (#14026)",
    "body": "This PR implements a Relay to Relax translator, which allows us to import Relay workloads to Relax for benchmarking and development purposes (tests and examples are added).",
    "author": "YuchenJin",
    "date": "2023-02-17T19:37:12Z",
    "jobs": []
  },
  {
    "sha": "88852c1e1695db95d1d28504de46d1895f00feee",
    "headline": "[Unity][Pass][TuningAPI] Introduce TuningAPI and MetaSchedule pass (#\u2026",
    "body": "\u202614014)\n\nAdd TuningAPI and MetaSchedule tuning pass",
    "author": "sunggg",
    "date": "2023-02-17T08:20:44Z",
    "jobs": []
  }
]