[
  {
    "sha": "d85dda9b3cc9f4f3a1f0850a8f06609e946d96cd",
    "headline": "[TVMScript] Relax Printer (#416)",
    "body": "This PR migrates the relax printer to use the latest printer infrastructure",
    "author": "junrushao",
    "date": "2023-02-08T13:57:16Z",
    "jobs": [
      {
        "name": "continuous-integration/jenkins/branch",
        "status": "success",
        "url": "https://jenkins.tvm.octoml.ai/job/tlcpack-relax/job/auto-backup%252F2023-02-08/5/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124927784/jobs/7124807435"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124954836/jobs/7124868266"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125094642/jobs/7125191656"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125103968/jobs/7125212512"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125115374/jobs/7125239373"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125173646/jobs/7125372715"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125201187/jobs/7125435570"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125297806/jobs/7125663845"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125311439/jobs/7125695958"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125477144/jobs/7126087939"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125510293/jobs/7126164642"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125667079/jobs/7126533534"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125675923/jobs/7126555695"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125742955/jobs/7126718091"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125766111/jobs/7126769571"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125854783/jobs/7126970288"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4125869785/jobs/7127004995"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126054069/jobs/7127454296"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126097927/jobs/7127560522"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126294213/jobs/7128027659"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126315921/jobs/7128080610"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126443574/jobs/7128371385"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126450771/jobs/7128389215"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126565207/jobs/7128659516"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126597171/jobs/7128734583"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126732465/jobs/7129036176"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126741831/jobs/7129059809"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126792453/jobs/7129177575"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126812611/jobs/7129223226"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126907284/jobs/7129441910"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4126919286/jobs/7129466908"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127075680/jobs/7129829626"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127110769/jobs/7129908222"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127249405/jobs/7130223982"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127260616/jobs/7130249363"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127328214/jobs/7130402354"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127378675/jobs/7130510301"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127388383/jobs/7130533067"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127509413/jobs/7130805170"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127539217/jobs/7130868815"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127632311/jobs/7131075470"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127638326/jobs/7131088563"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127711763/jobs/7131254942"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127727713/jobs/7131289611"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127821862/jobs/7131497082"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127833002/jobs/7131523214"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127947499/jobs/7131788478"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127966780/jobs/7131833629"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127967998/jobs/7131836586"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127968437/jobs/7131837567"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4127993973/jobs/7131894883"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128107598/jobs/7132148475"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128113898/jobs/7132162824"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128155969/jobs/7132253141"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128177199/jobs/7132298627"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128254473/jobs/7132467903"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128265776/jobs/7132494721"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128393798/jobs/7132780324"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128418054/jobs/7132834619"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128510765/jobs/7133041123"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128510973/jobs/7133041552"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128519337/jobs/7133059866"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128574394/jobs/7133185004"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128589929/jobs/7133217473"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128675889/jobs/7133409362"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128686531/jobs/7133433969"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128809003/jobs/7133706528"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128832488/jobs/7133757422"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128949420/jobs/7134009155"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128955587/jobs/7134023910"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4128997201/jobs/7134115518"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129015989/jobs/7134153564"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129016931/jobs/7134155776"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129056081/jobs/7134237377"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129082982/jobs/7134298378"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129091754/jobs/7134318178"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129133794/jobs/7134410583"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129204095/jobs/7134562167"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129229621/jobs/7134611958"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129255825/jobs/7134666613"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129322836/jobs/7134800593"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129327360/jobs/7134810424"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129366592/jobs/7134890076"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129379635/jobs/7134914358"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129447570/jobs/7135053105"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129456785/jobs/7135071646"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129725404/jobs/7135650012"
      },
      {
        "name": "Nightly Docker Update / open_update_pr",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129736564/jobs/7135674985"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4129820401/jobs/7135850755"
      }
    ],
    "updated_at": 1675905152.1647
  },
  {
    "sha": "13f08fac325e187b3cda70f73d595c414315c1d6",
    "headline": "[BYOC] Fix problems in MergeCompositeFunctions (#411)",
    "body": "* Fix problems in merge_composite_functions\r\n\r\n* Update doc\r\n\r\n* Unify private methods and update code",
    "author": "yelite",
    "date": "2023-02-08T02:57:15Z",
    "jobs": [
      {
        "name": "continuous-integration/jenkins/branch",
        "status": "error",
        "url": "https://jenkins.tvm.octoml.ai/job/tlcpack-relax/job/relax/254/display/redirect"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122038449/jobs/7118348221"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122066770/jobs/7118410072"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122196205/jobs/7118685414"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122209410/jobs/7118715220"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122322546/jobs/7118962368"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122333906/jobs/7118987981"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122477375/jobs/7119308781"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122504723/jobs/7119369848"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122639204/jobs/7119660645"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122648427/jobs/7119681462"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122709730/jobs/7119819891"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122729162/jobs/7119862816"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122802205/jobs/7120026223"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122817142/jobs/7120059394"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4122973324/jobs/7120422378"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123001632/jobs/7120487103"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123162441/jobs/7120841174"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123174397/jobs/7120867525"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123248434/jobs/7121029973"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123297948/jobs/7121138955"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123306468/jobs/7121158383"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123425333/jobs/7121428309"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123466689/jobs/7121520935"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123573902/jobs/7121755338"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123583703/jobs/7121777254"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123650195/jobs/7121924125"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123668498/jobs/7121963608"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123759891/jobs/7122167596"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123771699/jobs/7122193966"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4123955968/jobs/7122613001"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124008273/jobs/7122731800"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124236830/jobs/7123243315"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124308261/jobs/7123396965"
      },
      {
        "name": "tvm-bot / run-tvm-bot",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124454304/jobs/7123725634"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124494095/jobs/7123812090"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124518888/jobs/7123867800"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124671535/jobs/7124210214"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124679039/jobs/7124226980"
      },
      {
        "name": "Update last-successful branch / update-last-successful-branch",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124754596/jobs/7124401642"
      },
      {
        "name": "Ping Reviewers / ping",
        "status": "neutral",
        "url": "https://github.com/tlc-pack/relax/actions/runs/4124768168/jobs/7124434218"
      }
    ]
  },
  {
    "sha": "b0ab38a7799d38c7798208be2388152d680e683c",
    "headline": "[Util] NestedMsg: MapNestedMsg (#410)",
    "body": "This PR brings a new util function (`MapNestedMsg`) for NestedMsg:\r\n\r\n* `MapNestedMsg` recurses into an input NestedMsg and maps the leaves\r\naccording to the provided mapping function.\r\n\r\nOne corresponding unit test is provided.",
    "author": "MasterJH5574",
    "date": "2023-02-07T23:58:58Z",
    "jobs": []
  },
  {
    "sha": "889a2ff1538494417f1c9313afd8d3d87525f503",
    "headline": "[BYOC] Update TensorRT backend for the new BYOC flow and offloading w\u2026",
    "body": "\u2026ith constants (#400)\n\n* Update TensorRT backend for the new BYOC flow and offloading with constant\n\n* update cutlass codegen for the new signature\n\n* add comment\n\n* fix pattern partitioning for residual block\n\n* update cutlass rev and enable disabled test",
    "author": "masahi",
    "date": "2023-02-07T21:41:43Z",
    "jobs": []
  },
  {
    "sha": "6d102aa92c83b394a01712857ebad63e3130acdb",
    "headline": "[Op][Layout] Add layout_transform operator in Relax. (#403)",
    "body": "Adds layout_transform operator in Relax as part of Relax layout planning.\r\n\r\nlayout_transform takes an input tensor x and an attribute index_map of tir::IndexMap type. It also has an optional pad_value attribute. It transforms x as per the index_map attribute and returns the transformed tensor.\r\n\r\nThis operator for now allows layout transformations that introduce implicit padding. For example, transforming a tensor of shape (10,) using the lambda i: (i//4, i%4). The output shape will be (3, 4) with two elements padded. The optional pad_value is used to pad if specified, otherwise the compiler is free to choose any value to pad.",
    "author": "psrivas2",
    "date": "2023-02-07T18:51:23Z",
    "jobs": []
  },
  {
    "sha": "76c6483ade8347fc88e42dbfb03d3c072328b9fe",
    "headline": "[OP] Add Linear Op Interface at Python Side (#409)",
    "body": "As discussed before, we won't introduce a new Linear Op at IR level.\r\nHowever, this PR adds a user interface at the python side, which is composed of transpose, matmul and a bias add.",
    "author": "Hzfengsy",
    "date": "2023-02-07T18:23:31Z",
    "jobs": []
  },
  {
    "sha": "e8101271bbe46a306a449562c3cbc94005f19794",
    "headline": "[Op] Add `relax.clip` Op (#408)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-02-07T17:55:41Z",
    "jobs": []
  },
  {
    "sha": "e4ae04e50a87ae0d9150e1f9ed450383e58bf1dd",
    "headline": "Replace CopyWithNewParams with CopyWithNewVars (#406)",
    "body": "This PR adds a CopyWithNewVars function to replace CopyWithNewParams. CopyWithNewVars will copy all variables defined in a function, rather than just copy function parameters like what CopyWithNewParams does.\r\n\r\nWhen the copy of a function needs to be added to the same IRModule of original function, it's important that the copy doesn't use the same variable as the original function does. Otherwise it's not possible to assert structural equal between the result and an IRModule created through TVMScript, which is a common pattern used in tests.",
    "author": "yelite",
    "date": "2023-02-06T19:20:55Z",
    "jobs": []
  },
  {
    "sha": "ca3464eb3d1a4652ed6a36e5cb810e6f0b54e254",
    "headline": "[Fix][Arith] Analyzer simplification starts with canonical (#13875) (\u2026",
    "body": "\u2026#404)\n\nThis PR updates the order of arithmetic analyzer simplification, by\nadding a stage of canonical simplification at the very beginning so\nthat every simplification always starts with a canonical round. This\nis because the rewrite simplification may destroy some PrimExpr property\nthat the canonical simplification can make use of. Therefore, adding\nthe canonical one in the front can maximize the use of canonical\nsimplification.",
    "author": "MasterJH5574",
    "date": "2023-02-03T18:59:31Z",
    "jobs": []
  },
  {
    "sha": "8a8d138205e0ee76e56c122ab20cacdb2077f89e",
    "headline": "Add back the missing optional header (#401)",
    "body": "",
    "author": "yelite",
    "date": "2023-02-03T00:17:44Z",
    "jobs": []
  },
  {
    "sha": "bd0f318a3039495904eb69c20c9de357e4bacc6a",
    "headline": "[BYOC] Add CUTLASS backend (#380)",
    "body": "* Add CUTLASS backend\n\n* fix\n\n* Wrap and annotate in FuseOpsByPattern optionally\n\n* fix\n\n* black\n\n* add test for FuseOpsByPattern change\n\n* black\n\n* ignore 3rd party in pylint\n\n* fix test\n\n* another unused var warning\n\n* Update include/tvm/relax/transform.h\n\nCo-authored-by: Wuwei Lin <vincentl13x@gmail.com>\n\n* fix for v3\n\n* fix for int8 test in relay byoc\n\n* more fix for cutlass update\n\n* fix residual block fusion offload\n\n* fix test\n\n---------\n\nCo-authored-by: Wuwei Lin <vincentl13x@gmail.com>",
    "author": "masahi",
    "date": "2023-02-02T21:20:45Z",
    "jobs": []
  },
  {
    "sha": "cdc73ec9dbe77eb450d136c106712f6ba01be53d",
    "headline": "[BYOC] Fix MergeCompositeFunctions when some callees are not a compos\u2026",
    "body": "\u2026ite function (#385)",
    "author": "masahi",
    "date": "2023-02-02T21:05:42Z",
    "jobs": []
  },
  {
    "sha": "3447f4bc8a10b2c7a379bb4d4507a6f2697d02da",
    "headline": "Move PyVisitor/Mutator into cc file (#398)",
    "body": "",
    "author": "LeshengJin",
    "date": "2023-02-02T20:57:09Z",
    "jobs": []
  },
  {
    "sha": "ebaaf42394c473d70acec4db4eb5b5e715f0a30e",
    "headline": "[Fix][Pass] TIR op pattern kind analysis with int var in signature (#\u2026",
    "body": "\u2026399)\n\nThis PR fixes a bug in TIR pattern kind analyzer.\r\n\r\nPreviously the analyzer requires the input TIR function signature\r\nnot to have any symbolic var other than Buffer var. This behavior\r\nwill throw exception whenever the input TIR function signature contains\r\ninteger var or other var, while the expected behavior is to ignore\r\nthese vars instead of throwing error. This PR fixes this issue.",
    "author": "MasterJH5574",
    "date": "2023-02-02T18:07:15Z",
    "jobs": []
  },
  {
    "sha": "167cd7742e34e271f3cdfe6009c4d303cd6851d8",
    "headline": "[Pass] Rewrite dataflow reshape (#393)",
    "body": "This PR introduces the dataflow reshape rewrite pass, which transform all\r\ndataflow TIR reshape bindings inside a Relax function into a call of\r\nruntime packed function `relax.vm.builtin.reshape`. Here \u201cdataflow TIR\r\nreshape bindings\u201d means\r\n1. the binding value is a `call_tir` of any PrimFunc that is essentially\r\ndoing a reshape operation,\r\n2. the binding var is a DataflowVar, or in other words, the binding is\r\ninside a DataflowBlock and the binding var is not a block output var.\r\n\r\nThe `relax.vm.builtin.reshape` packed function creates a view of the input\r\nNDArray with the target shape, instead of doing data copy.\r\n\r\nIn order to fulfill this pass, this PR contains the following parts.\r\n1. An analysis function that detects the reshape pattern of PrimFuncs.\r\n2. The dataflow reshape rewrite pass itself.\r\n3. The implementation of `relax.vm.builtin.reshape` as a PackedFunc.\r\n\r\nThis PR contains unit tests for each part.",
    "author": "MasterJH5574",
    "date": "2023-02-02T18:06:48Z",
    "jobs": []
  },
  {
    "sha": "027b1df26d5f3f36932bb1d54bcdafc87c55d5f1",
    "headline": "Allow keeping bound constants in OperatorFusor (#397)",
    "body": "",
    "author": "masahi",
    "date": "2023-02-02T07:09:26Z",
    "jobs": []
  },
  {
    "sha": "b0a928185d7be0242dc517b0933d21f5e11f25de",
    "headline": "[Debugging] Support PrimValue, StringImm, and DataTypeImm in the AST \u2026",
    "body": "\u2026printer (#396)",
    "author": "slyubomirsky",
    "date": "2023-02-01T06:10:26Z",
    "jobs": []
  },
  {
    "sha": "33d73e007dd270eb459a1461427355b029509b35",
    "headline": "[Fix] Type comparison in auto arg converter (#394)",
    "body": "Previously when running all relax unit tests on my machine using\r\n`pytest test_*`, one auto argument converter tests always fail.\r\n(And when I only run that single test, it passes very well.)\r\n\r\nAfter inspection, I noted that in the failed test, though `anno`\r\nis printed as `typing.Optional[tvm.ir.expr.RelayExpr]`, the comparison\r\nbelow `anno is Optional[Expr]` still results false.\r\nhttps://github.com/tlc-pack/relax/blob/2e5e47962238be7385486241203d1a8146f38a0e/python/tvm/relax/utils.py#L252-L253\r\n\r\nI tweaked the comparison to `in` and all tests seem to pass very\r\nsuccessfully. I guess the issue might relate to some address issue (?)\r\nbut I\u2019m not 100% sure about this.",
    "author": "MasterJH5574",
    "date": "2023-02-01T04:11:21Z",
    "jobs": []
  },
  {
    "sha": "c783ef174e443b489c0987d9e0e49b419c1b29cc",
    "headline": "[Fix] Printer support for PrimValue, StringImm, DataTypeImm (#395)",
    "body": "This PR supports printing out PrimValue, StringImm, DataTypeImm\r\nusing PrettyPrint, which will be used on Python side printing\r\nand sometimes C++ side printing.",
    "author": "MasterJH5574",
    "date": "2023-01-31T23:51:00Z",
    "jobs": []
  },
  {
    "sha": "3b98a0829dc9caa7c25926d27bae6b499c9f624c",
    "headline": "[BYOC] Refactor and bugfix on `run_codegen` (#382)",
    "body": "* Simplify the codegen behavior. For simplicity, run_codegen pass will now target any function with codegen annotation.\r\n* Update test script to match with the latest TVMScript.\r\n* Minor bug fix for test failure",
    "author": "sunggg",
    "date": "2023-01-31T13:39:17Z",
    "jobs": []
  },
  {
    "sha": "c5e14e6144bb5ee37cfc3c2e9f479ba51a3ce1cc",
    "headline": "[REFACTOR] Simplify Builtin Ops with PrimValue. (#392)",
    "body": "This PR simplifies CallBuiltin by using PrimValue/StringImm/DataTypeImm\r\nto directly represent the positional argument instead of using customized\r\ntranslation of Attrs.\r\n\r\n- Remove BuiltinFuncAttrs\r\n- Use directly call_packed instead for most cases.\r\n- Introduce call_builtin_with_ctx to cover the remaining usecase of call_builtin\r\n  that requires ctx.\r\n- Update the testcases accordingly.\r\n\r\nThis PR also serves as an example on how can we further simplify other\r\nspecial lowering logics through PrimValue, which can be done in future PRs.",
    "author": "tqchen",
    "date": "2023-01-31T01:26:17Z",
    "jobs": []
  },
  {
    "sha": "f495802417b1c65c8b42d52279ebf612d9512098",
    "headline": "[FIX][Utils] Add CopyWithNewParams and Check repeated parameters (#389)",
    "body": "This PR adds:\r\n1. A check for any variable used as parameters in different functions of the same IRModule\r\n2. A util to copy function while copying parameters in the new function, so the new function satisfies 1.",
    "author": "Ubospica",
    "date": "2023-01-29T21:53:15Z",
    "jobs": []
  },
  {
    "sha": "03b22c33cf350848809c2aa2d3303bde4a7bc31c",
    "headline": "[Op] Completing the unary operators and refactor test (#391)",
    "body": "This PR includes:\r\n- Registering most of the unary operators in [DataAPI](https://data-apis.org/array-api/draft/API_specification/elementwise_functions.html)\r\n- Split unary arith oprators and check operators (e.g. `isnan`)\r\n- Refactor `test_tvmscript_parser`, `test_op_unary` and `test_op_binary` using `tvm.testing.parameters()`.",
    "author": "SiriusNEO",
    "date": "2023-01-29T18:47:25Z",
    "jobs": []
  },
  {
    "sha": "f037252acfd0c3f3470a91ba1a8ed749bdb4a86d",
    "headline": "[ARCH] NestedMsg util functions update (#390)",
    "body": "Added two util functions in `nested_msg.h`:\r\n- `MapToNestedMsgBySInfo`: map Expr to NestedMsg according to StructInfo. If the Expr is not a TupleNode but its StructInfo is TupleStructInfo (for example, Expr is a Var assigned to by a Tuple), it will add TupleGetItem nodes\r\n- `NestedMsgToExpr`: map NestedMsg back to Expr. Tuple nodes will be created.",
    "author": "Ubospica",
    "date": "2023-01-29T16:52:53Z",
    "jobs": []
  },
  {
    "sha": "45734c5f6f1dfcbb16d9fd2c6eb29f5d1b704644",
    "headline": "[Refactor][AST] `sinfo_args` A3: Well-formed check (#388)",
    "body": "This PR is the last part of the `sinfo_args` switch tracked by #377,\r\nwhich adds the StructInfo check in well-formed check, to ensure that\r\nthe StructInfo in `sinfo_args` does not refer to any undefined\r\nsymbolic variables.",
    "author": "MasterJH5574",
    "date": "2023-01-28T16:01:58Z",
    "jobs": []
  },
  {
    "sha": "701995572ab5b1cee19ad3e81ea1eca114d14c2e",
    "headline": "[Refactor][AST] `sinfo_args` A1: Update API of call_tir, call_packed,\u2026",
    "body": "\u2026 etc. (#386)\n\n* [Refactor][AST] `sinfo_args` A1: Update API of call_tir, call_packed, etc\r\n\r\nFollowing #377 and #379, this PR followups to update the API of `call_tir`,\r\n`call_packed`, `call_builtin` and `invoke_closure`.\r\n\r\n* The API of `call_tir` is changed to\r\n  ```python\r\n  def call_tir(\r\n      func: Union[str, Expr],\r\n      args: Expr,\r\n      out_sinfo: Union[TensorStructInfo, TupleStructInfo],\r\n      tir_vars: Optional[Union[ShapeExpr, Tuple[PrimExpr], List[PrimExpr]]] = None,\r\n  ) -> Call:\r\n      ...\r\n  ```\r\n  where we combine the `shape` and `dtype` parameters into `out_sinfo`. In\r\n  the concrete CallNode of `call_tir`, the output shape is no longer passed\r\n  as an CallNode argument and passed in the `sinfo_args` instead.\r\n\r\n* For `call_packed`, `call_builtin` and `invoke_closure`, we change the\r\n  `type_args` parameter to `sinfo_args`. For example, the API of `call_packed`\r\n  is updated to\r\n  ```python\r\n  def call_packed(\r\n      func: str,\r\n      *args: Expr,\r\n      sinfo_args: Union[StructInfo, List[StructInfo]],\r\n      **kwargs: Any,\r\n  ) -> Call:\r\n      ...\r\n  ```\r\n\r\n---\r\n\r\nOne thing specific to note is about our existing dataflow pattern language.\r\nPreviously we have a sugar function for `call_tir`:\r\n```python\r\ndef is_call_tir(\r\n    func_name: str,\r\n    args: Union[List, Tuple, TuplePattern] = None,\r\n    shape: Union[Tuple, List[tvm.ir.PrimExpr], DFPattern] = None,\r\n) -> CallPattern:\r\n    ...\r\n```\r\nSince we changed the API of `call_tir` - the CallNode does not contain the\r\nshape as one argument, - together with the fact that the dataflow pattern\r\nlanguage does not yet support matching StructInfo, we have no approach to\r\nmatch the shape anymore. Therefore, the `shape` parameter is removed from\r\n`is_call_tir`. I left some Todo items there for future `sinfo_args` matching\r\nsupport.\r\n\r\n* Update call_tir API and address comments\r\n\r\nNow the expected type of `out_sinfo` is:\r\n```python\r\nout_sinfo: Union[TensorStructInfo, List[TensorStructInfo]]\r\n```",
    "author": "MasterJH5574",
    "date": "2023-01-28T09:39:33Z",
    "jobs": []
  },
  {
    "sha": "5d062bcfaf6cf55688e3ed3ed47cd36dc21c683e",
    "headline": "[Refactor][AST] `sinfo_args` A2: Remove VisitType (#387)",
    "body": "This PR is part of the `sinfo_args` switch, as tracked by #377.\r\n\r\nThis PR removes VisitType from ExprFunctor in Relax, as Type is no\r\nlonger a standalone construct in any Relax AST, with the switch of\r\n`sinfo_args` introduced by #379.",
    "author": "MasterJH5574",
    "date": "2023-01-28T03:51:14Z",
    "jobs": []
  },
  {
    "sha": "80c46e799e4e2b1263a588022e04b3aa003bcd08",
    "headline": "[Utils] Introduce Auto Arg Converter for Relax Ops and Functions (#381)",
    "body": "This PR introduce a new decorator to automatically convert the arguments\r\nto the expr according to the Relax Expr, including:\r\n\r\n1. convert `PrimExpr` to `relax.PrimValue`;\r\n2. convert `tvm.String` or `str` to `relax.StringImm`;\r\n3. convert tuple/list of `PrimExpr` to `relax.ShapeExpr`;\r\n4. convert tuple/list of `Expr` to `relax.Tuple`.",
    "author": "Hzfengsy",
    "date": "2023-01-27T17:30:34Z",
    "jobs": []
  },
  {
    "sha": "fdde473557e6f918e0ef046db17b0c94005a59a4",
    "headline": "[Refacror][AST] `sinfo_args` A0: Introduce `sinfo_args` (#379)",
    "body": "This PR is the kickoff action of our switch towards `sinfo_args` in\r\nCallNode, as discussed in #356 and tracked by #377.\r\n\r\n* CallNode field `type_args` is changed to `sinfo_args`, with type\r\n`Array<StructInfo>`.\r\n\r\n* For intrinsic ops like `call_tir`/`call_packed`, this PR keeps the\r\n`sinfo_args` value as **the plain StructInfo generated from the static\r\ntype**, even if those op calls were provided with richer StructInfo at\r\nthe time of creation. The API changes, creations and structure info\r\ndeductions of these intrinsic ops will be left to the next PR, as the\r\ntracking issue #377. Since that PR, our APIs and structure info\r\ndeductions of these ops will no longer rely on types.",
    "author": "MasterJH5574",
    "date": "2023-01-27T02:24:57Z",
    "jobs": []
  },
  {
    "sha": "ed6c439283c6bc336e4f0be94ad744169db965a2",
    "headline": "[BYOC] Add DNNL backend (#376)",
    "body": "* Add DNNL backend\r\n\r\n* cpplint\r\n\r\n* skip dnnl test if not enabled\r\n\r\n* fix unused variable warning",
    "author": "masahi",
    "date": "2023-01-26T11:23:18Z",
    "jobs": []
  },
  {
    "sha": "7c30af5cb4f3a184a5cfbd03260ab82d07d8036c",
    "headline": "[TVMScript] Fix py_print direction in IR builder (#378)",
    "body": "Prior to this PR, in `ir.py` of IR builder, the `py_print` directs to the operator `print` instead of Python builtin print.\r\n\r\nThis PR fixes this issue, with a regression test in `tests/python/relax/test_tvmscript_ir_builder.py`.",
    "author": "MasterJH5574",
    "date": "2023-01-26T04:12:56Z",
    "jobs": []
  },
  {
    "sha": "876ce86996e76d78cb499e7e8dc4dde5463e982d",
    "headline": "[Analysis][Tweak] Simplify dataflow block tracking in inner functions\u2026",
    "body": "\u2026 for the well-formed analysis (#374)\n\nThis PR makes a small tweak on the changes in #370. #370 keeps an explicit stack to handle the case of a local function being defined inside a dataflow block. However, this is more complicated than it needs to be: it suffices to keep a single flag for whether the visitor is inside a dataflow block and to save the value of the flag before recursing into a local function definition, similarly to how it handles the var sets.",
    "author": "slyubomirsky",
    "date": "2023-01-26T02:04:58Z",
    "jobs": []
  },
  {
    "sha": "f1f939af13674fc3fbd9055064e9d77bdce291b1",
    "headline": "[BYOC] Add pass to merge composite functions to offload large subgrap\u2026",
    "body": "\u2026hs (#372)\n\n* Add FuseCompositeFunctions pass\r\n\r\n* clean up and add doc / comments\r\n\r\n* cpplint\r\n\r\n* fix trt build\r\n\r\n* FuseCompositeFunctions -> MergeCompositeFunctions\r\n\r\n* rename\r\n\r\n* add algo explanation\r\n\r\n* Drop requirement on group being always a root in OperatorFusor",
    "author": "masahi",
    "date": "2023-01-25T22:01:31Z",
    "jobs": []
  },
  {
    "sha": "6daec22cbcadb1773220c5bbfb5c9df54bdd5413",
    "headline": "[TVMScript] Fix Return Type for Functions w/o Annotation (#375)",
    "body": "This PR fixes the incorrect function return struct info during declaration info when it's not be annotated.",
    "author": "Hzfengsy",
    "date": "2023-01-25T16:12:31Z",
    "jobs": []
  },
  {
    "sha": "594660394fa59b04e4d439335636f19950e2d25d",
    "headline": "[Analysis][Bugfix] Correctly handle dataflow blocks in local function\u2026",
    "body": "\u2026s defined inside a dataflow block (#370)\n\n* Correctly track dataflow block status for nested funcs\r\n\r\n* Similarly update the dataflow var set\r\n\r\n* Use dataflow vars in test case",
    "author": "slyubomirsky",
    "date": "2023-01-23T23:20:17Z",
    "jobs": []
  },
  {
    "sha": "b7b2f8fdc34fb90ddfe18c7764ab5c9adcd4fed7",
    "headline": "[IR] Initial PrimValue Support (#368)",
    "body": "This PR introduces PrimValue, StringImm and DataTypeImm.\r\n\r\nThese constructs are only used in low-level builtin functions for now.\r\nThey will enable us to effectively represent POD, string and dtype\r\narguments to builtin functions.\r\n\r\nFollowup PRs can be introduced to move some of the BuiltinAttrs\r\nto directly using these values. We can also simplify the handling\r\nof unique and print.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "tqchen",
    "date": "2023-01-21T23:46:27Z",
    "jobs": []
  },
  {
    "sha": "aac41f1c2edba306bc659af178f553edde1a3fe3",
    "headline": "Fix AnnotateTIROpPattern fail on cumsum (#369)",
    "body": "Fallback to kOpaque pattern in presence\r\nof multiple buffer stores in a block.",
    "author": "psrivas2",
    "date": "2023-01-21T13:36:30Z",
    "jobs": []
  },
  {
    "sha": "a069ccb558936d6ed0c10d6977cca1b857be2c6a",
    "headline": "[VM][TVMScript] Shorten VM op names and add TVMScript support (#367)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-21T13:25:38Z",
    "jobs": []
  },
  {
    "sha": "f56557e9016b7fb1aaf81821bc4c7d0967f36bf1",
    "headline": "[BYOC] Refactor and update `RunCodegen` API (#365)",
    "body": "* Update RunCodegen pass\r\n\r\n* update TensorRT codegen for the new interface\r\n\r\n* typo fix\r\n\r\n* fix unused var warning\r\n\r\n* leave todo comment on dep on RemoveUnusedfunctions\r\n\r\n* introduce src/tranform/utils.h\r\n\r\n* also move GetExtSymbol to transform/utils.h\r\n\r\n* build fix\r\n\r\n* add missing file",
    "author": "masahi",
    "date": "2023-01-21T07:24:21Z",
    "jobs": []
  },
  {
    "sha": "f83d08bdbb537d6a3daeedc518427979188d53ab",
    "headline": "[BYOC] Add pattern-based partitioning pass (#366)",
    "body": "* Add pattern-based partitioning pass\r\n\r\n* add doc\r\n\r\n* add comment\r\n\r\n* changed Python API slightly\r\n\r\n* add more tests\r\n\r\n* remove unused var\r\n\r\n* remove unused import\r\n\r\n* make_conv_pattern -> make_fused_bias_activation_pattern\r\n\r\n* wrap composite_name in Group with std::optional, add doc\r\n\r\n* add optional header\r\n\r\n* Correctly handle tuple output\r\n\r\n* clean test\r\n\r\n* add comment\r\n\r\n* remove unused variable\r\n\r\n* review comments addressed\r\n\r\n* detect cyclic dep\r\n\r\n* clean up test\r\n\r\n* relax.op.nn -> R.nn",
    "author": "masahi",
    "date": "2023-01-21T00:13:13Z",
    "jobs": []
  },
  {
    "sha": "ba7a7b8a29024693e09213e8884261dcf6130519",
    "headline": "[OP] Unary tensor operator `R.exp` (#363)",
    "body": "This PR adds `R.exp`. Besides, it also brings a more comprehensive test for `test_tvmscript_parser_op_arith_cmp`.",
    "author": "SiriusNEO",
    "date": "2023-01-18T13:50:48Z",
    "jobs": []
  },
  {
    "sha": "1c8ad47412fa2194b286f58f61f7540ad006bb97",
    "headline": "[Fix][TVMScript] Parse and print `tir_vars` of `call_tir` properly (#\u2026",
    "body": "\u2026361)",
    "author": "MasterJH5574",
    "date": "2023-01-18T00:32:57Z",
    "jobs": []
  },
  {
    "sha": "8117094c6b592b59a5e002577da3c6b01c9e4a59",
    "headline": "[FIX] fix warning for the latest clang (#362)",
    "body": "This PR fixes compilation warnings from the latest clang compiler.",
    "author": "Hzfengsy",
    "date": "2023-01-17T19:09:04Z",
    "jobs": []
  },
  {
    "sha": "08a1c80a86924e2a6e86aa2a68fcba3387dac8c3",
    "headline": "[Op] Change shape-related op attributes to arguments (#360)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-15T21:13:44Z",
    "jobs": []
  },
  {
    "sha": "014ff99798bc461da286b802c330ac29dc14899f",
    "headline": "[Op] Use int64 IntImms as static shape-related attributes (#359)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-14T23:34:01Z",
    "jobs": []
  },
  {
    "sha": "e37143f2e0d256944d28dc35a00622439303b232",
    "headline": "fix after rebase",
    "body": "",
    "author": "YuchenJin",
    "date": "2023-01-13T21:59:14Z",
    "jobs": []
  },
  {
    "sha": "aac47d13af006e707c140f5be4be68b486f23ed5",
    "headline": "[Op] Group for conv2d, ceil mode for max_pool2d (#358)",
    "body": "This PR adds the parameter group for conv2d, as well as the option ceil_mode for max_pool2d. They were omitted in the previous round of PR mainly for simplicity, and are introduced now due to their uses in ML frameworks.",
    "author": "MasterJH5574",
    "date": "2023-01-14T00:35:03Z",
    "jobs": []
  },
  {
    "sha": "5cdde9bc09d6c6ee6a37477f03b9bfe113d9eb6f",
    "headline": "[FIX] Fix ShapeExpr/Tuple getitem (#357)",
    "body": "Currently ShapeExpr checks index should be non-negative in `__getitem__`, which is unnecessary and effects the lowering process of several Ops that receives negative index. This PR removes this check.",
    "author": "Ubospica",
    "date": "2023-01-13T18:08:44Z",
    "jobs": []
  },
  {
    "sha": "15141c8168cded6f9af8ae0816b6a5371cd28945",
    "headline": "[BlockBuilder] CallTE with PrimExpr support (#353)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-12T00:30:21Z",
    "jobs": []
  },
  {
    "sha": "0d7f874651fa76fa34687f3bacaecc000e41c061",
    "headline": "[Fix][Op] Fix CallTIR about wrapping args with Tuple (#354)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-11T21:45:58Z",
    "jobs": []
  },
  {
    "sha": "65e6c4611f9f2b96a222964bbe8f7369a01c73b9",
    "headline": "[BlockBuilder] Fix argument conversion for Shape in CallTE (#352)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-11T21:44:13Z",
    "jobs": []
  },
  {
    "sha": "faf5b1c7e5cbb60aa8140b6bd79e32f968de98a6",
    "headline": "[Fix][Printer] Fix PrintFinal dispatch for Relax dedicated Expr (#351)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-11T02:13:39Z",
    "jobs": []
  },
  {
    "sha": "1390cb204fa78648a35ef89d3a42d3e7a94d928a",
    "headline": "[UX][TVMScript] Enable relax arithmetic operators (#350)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-11T01:01:30Z",
    "jobs": []
  },
  {
    "sha": "162377c1f93d1c3ddb92f283830772405d7029ac",
    "headline": "[TVMScript][Bugfix] Minor fix for `type_args` and constant printing (\u2026",
    "body": "\u2026#349)\n\n* [TVMScript][Bugfix] Minor fix for `type_args` and constant printing",
    "author": "Hzfengsy",
    "date": "2023-01-10T16:27:13Z",
    "jobs": []
  },
  {
    "sha": "72bc6968e2fb4d7ec07f033222a4227482b5ab78",
    "headline": "[ARCH] NestedMsg util functions (#347)",
    "body": "Add two utility functions of NestedMsg for robust and easy tuple handling.",
    "author": "spectrometerHBH",
    "date": "2023-01-10T15:17:16Z",
    "jobs": []
  },
  {
    "sha": "0ee11cfbcf46f3b2ab5b35c05416906dd6d4fbe6",
    "headline": "[Fix] Concurrent modification in RemoveUnusedVars (#348)",
    "body": "\r\nWhen running RemoveUnusedVars (i.e. remove_all_unused), in some cases the map users will raise Concurrent modification error. This commit fixed it by changing the logic to \"iterate the map first and update it later\".\r\n\r\n\r\nCo-authored-by: Chaosfan <siriusneo@sjtu.edu.cn>",
    "author": "MasterJH5574",
    "date": "2023-01-10T03:22:39Z",
    "jobs": []
  },
  {
    "sha": "1cddea45919ab5f243613080b69ae5146f871061",
    "headline": "[Op][O2e] Indexing and datatype operators (#338)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-09T22:20:05Z",
    "jobs": []
  },
  {
    "sha": "2844c27581aab551c78ac8a3902e45b2597a1dc6",
    "headline": "[VM] Supporting \"compiled\" exec mode. (#331)",
    "body": "* [VM] Supporting \"compiled\" exec mode.\r\n\r\nThis PR adds support of \"compiled\" mode to the VM.\r\nThe compiled mode translate the relax function into TIR function\r\nand drive it through the TIR function.\r\n\r\nIt is different from the micro AOT codegen, which generate TIR code\r\nthat targets the micro C runtime environment and useful for resource\r\nlimited settings with smaller set of features. Both leverages the\r\nlow-level TIR build that is also shared with TensorIR.\r\n\r\nThe current implementation targets full TVM (VM) runtime, that\r\ncomes with PackedFunc, object, tuple, closure and all kinds of rich structure\r\nsupport. This also mean that we can leverage the full runtime support\r\nto handle things like allocation, dynamic shape, easy plugins and python\r\ninteraction, which are not available in more limited runtime.\r\n\r\nThe user directly use the same API to load the generated code regardless\r\nof compiled mode or bytecode. And just need to change one line\r\n\r\n```python\r\nex = relax.vm.build(mod, target, exec_mode=\"compiled\")\r\n```\r\n\r\nMost of the codegen features are lifted before the codegen phase,\r\nso the overall implementation would be around 500 loc for each exec mode\r\nand can be further cut down with future introduction of PrimValue.\r\n\r\nThe simplicity is thanks to the TVM runtime archiecture that allows us\r\nto compose things together in objects. The only difference is how\r\nthe PackedFunc of high-level driving is being provided.\r\nIn the case of bytecode it is normal interpretation and in the\r\ncase of compiled mode it is TIR.\r\n\r\nIt is a complete implementation Unit-testcases are added. All codegen\r\nbuild tests are updated to include two exec_modes and have passed locally.\r\nThe only exception that we skipped some special packedfunc handling(printing)\r\nbecause can be further simplified after we introduce PrimValue.\r\n\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>\r\n\r\n* Address review comments\r\n\r\nCo-authored-by: Junru Shao <junrushao1994@gmail.com>",
    "author": "tqchen",
    "date": "2023-01-09T19:59:26Z",
    "jobs": []
  },
  {
    "sha": "a6c6a85a08fba69f21722bc3635367ac62961819",
    "headline": "[Op][O2d] Manipulation operators (#337)",
    "body": "As tracked by #332, this PR is the O2d milestone of the high-level operator introduction plan.\r\n\r\nThis PR introduces a few manipulation operators:\r\n* broadcast_to\r\n* concat\r\n* expand_dims\r\n* flatten\r\n* permute_dims\r\n* reshape\r\n* split\r\n* squeeze\r\nThese operators are all well-tested.",
    "author": "MasterJH5574",
    "date": "2023-01-09T18:45:14Z",
    "jobs": []
  },
  {
    "sha": "e6e61c2c4f4676f362a52283c53f74acbdb4471e",
    "headline": "[O2h] Neural network and linear algebra operators (#343)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-09T15:57:19Z",
    "jobs": []
  },
  {
    "sha": "54eeb9df3d25437ee0f14ba9c4566a152142cb1d",
    "headline": "[O2g] Convolution, pooling and image operators (#341)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-09T01:21:50Z",
    "jobs": []
  },
  {
    "sha": "7c94193f430d862152206839310aa43a2955b535",
    "headline": "[Op][O2f] Set and searching operators (#339)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-08T21:53:10Z",
    "jobs": []
  },
  {
    "sha": "2c9b8df667f3a0766fb3ffa749b76ac6f90019fb",
    "headline": "simple fix jupyter error reporting (#345)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-08T19:38:20Z",
    "jobs": []
  },
  {
    "sha": "9deea7422b283c9c31d67e641efe420a02bb34cf",
    "headline": "[TVMScript] Symbolic shape computing (#342)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-08T15:09:22Z",
    "jobs": []
  },
  {
    "sha": "f4da41c43996b587479e25b6720ccea0ab4103a8",
    "headline": "[Op][O2c] Creation operators (#336)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-07T23:31:00Z",
    "jobs": []
  },
  {
    "sha": "ae8951805e37e7a5b23b7ecae65473206f3c9141",
    "headline": "[Op][O2b] Statistical operators (#334)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2023-01-06T21:41:18Z",
    "jobs": []
  },
  {
    "sha": "763bec099cff42d8f17909d03bc14656db384ecb",
    "headline": "[Op][O1][O2a] Utility, arithmetic and comparison operators (#333)",
    "body": "As tracked by #332, this PR is the kickoff part of high-level operator introduction in Relax.\r\n\r\nThis PR is about the milestone O1 and O2a. Specifically, this PR\r\n* introduces some of common utility functions that the registration and StructInfo inference of each operator will often use.\r\n* introduces unary arithmetic operators: cos, log, negative, sigmoid, sin, sqrt, tanh.\r\n* refactors and introduces binary arithmetic operators: add, divide, floor_divide, multiply, subtract.\r\n* introduces binary comparative operators: equal, greater, greater_equal, less, less_equal, not_equal.\r\n\r\nThese operators are well tested from three perspective:\r\nP1. the op getter can get correct op by name\r\nP2. their StructInfo inference result are as expected under all kinds of cases\r\nP3. Relax TVMScript parser can parse the scripts with the op inside\r\n\r\nFor operators in O2a, most operators share almost the same StructInfo inference logic. Therefore, for tests in P2, in each category, not every op is tested in every case. For each case, it is good to have only part of op in this category tested. This is intended not to make overlarge testing file.",
    "author": "MasterJH5574",
    "date": "2023-01-05T23:31:48Z",
    "jobs": []
  },
  {
    "sha": "751f958f8597fac57e40454db237f26cebe9aae5",
    "headline": "[TVMScript] Ensure consistent struct info between assign lhs and rhs \u2026",
    "body": "\u2026with sinfo annotation (#328)\n\n* [TVMScript] Ensure consistent struct info between assign lhs and rhs with sinfo annotation\n\n* fix\n\n* fix",
    "author": "Hzfengsy",
    "date": "2023-01-05T12:43:28Z",
    "jobs": []
  },
  {
    "sha": "1098d33605a8311da32aef1e86fd849758f98d5d",
    "headline": "[REFACTOR] Hide VM Impl, Improve execution logic. (#326)",
    "body": "* [REFACTOR] Hide VM Impl, Improve execution logic.\r\n\r\nThis PR refactors VM by hiding most of the VM implementations\r\nand improve the overall execution logic.\r\n\r\n- Unifies PackedFunc and Closure Table.\r\n- Update Closure mechanism to no longer depend on string.\r\n- Update VMMemoryLower to VMBuiltinLower to incorporate more VM intrinsic lowering,\r\n  move some of the codegen intrinsic to this phase.\r\n- Allow directly pass in function index as VM instruction.\r\n\r\n* Address comment",
    "author": "tqchen",
    "date": "2023-01-04T15:13:08Z",
    "jobs": []
  },
  {
    "sha": "497d556ae71ca5d4a8ca78c32882a0589d44df62",
    "headline": "[IR][ASTPrinter] Tweaks to AST printer's handling of struct info (#330)",
    "body": "",
    "author": "slyubomirsky",
    "date": "2023-01-04T03:04:16Z",
    "jobs": []
  },
  {
    "sha": "920649a8d21852164341309be1ff9e2ad840c019",
    "headline": "[TVMScript] Enforce `I.DeclareFunc` to have function signature (#329)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-03T15:20:47Z",
    "jobs": []
  },
  {
    "sha": "68a46617a967f21dc7648d8a02900c0db680bd91",
    "headline": "[BACKEND] Refactor and introduce full match-cast support. (#324)",
    "body": "* [BACKEND] Refactor and introduce full match-cast support.\r\n\r\nThis PR refactors VMShapeLower to introduce full match-cast support\r\nthat enables nested tuples, type checks at argument boundary\r\nand symbolic shape computation.\r\n\r\nAlong the way we also refactors cleans up some of vm codegen logic\r\nand adding unit-tests for different stages.\r\n\r\n* address comments",
    "author": "tqchen",
    "date": "2023-01-02T20:21:49Z",
    "jobs": []
  },
  {
    "sha": "077ad08155ea2263657b4cf40ce2d8ead555c98c",
    "headline": "[TVMScript] Fix empty TupleStructInfo (#327)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2023-01-02T15:31:04Z",
    "jobs": []
  },
  {
    "sha": "330c9fa1161fef5907d702a93d7fce8eadc0c78f",
    "headline": "[REFACTOR] StructInfo M3: MatchShape=>MatchCast (#323)",
    "body": "* Introduce match cast, and code changes along\r\n\r\n* add match_cast parser support (#9)\r\n\r\n* Match cast support for VMShapeLower CanonicalizeBinding\r\n\r\n* Remove `match_shape` (#12)\r\n\r\n* Refactor ExprVisitor/Mutator to consider Expr in StructInfo.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>",
    "author": "tqchen",
    "date": "2022-12-29T23:33:17Z",
    "jobs": []
  },
  {
    "sha": "baea09a994915844645badbd60321ab18b73a94b",
    "headline": "[REFACTOR] StructInfo M2: Cleanups on legacy shape related items  (#320)",
    "body": "* [REFACTOR] Remove shape function\r\n\r\n* [WIP] Remove shape_, runtime_dep shape\r\n\r\n* Remove shape_ pass Compile\r\n\r\n* Remove RuntimeDepShape (#11)\r\n\r\n* BlockBuilder: remove CanProveShapeEqual, consolidate binding emit to EmitNormalize\r\n\r\n* Remove DimType, make get_shape_of API different from op.shape_of\r\n\r\nChanges the init importing to direct import so the VSCode nagivator\r\ncan directly jump to the defintion point.\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\n\r\n* Clarify cases where struct info can be determinstically derived\r\n\r\n* Fix remaining testcases\r\n\r\n* Remove InferShape/Type per comment.\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "tqchen",
    "date": "2022-12-29T06:28:09Z",
    "jobs": []
  },
  {
    "sha": "8e957dd7d3ff05761a9c42a8d758feb35408c7fe",
    "headline": "[Analysis] Optionally check structure info in well-formedness check (\u2026",
    "body": "\u2026#321)\n\nWith the introduction of structure info in #314, the well-formedness check will report malformed whenever an Expr doesn\u2019t have defined structure info.\r\n\r\nHowever, when writing tests for well-formedness check and normalizer, usually we will manually construct the Exprs, which means their structure info are not defined most of the time. As a consequence, the well-formedness check will always complain \u201cthe Expr xxx doesn\u2019t have structure info populated.\u201d Therefore, when the checker fails to complain about the original reason of malformed, which means the checker is not working, the tests will still pass and we won\u2019t be able to realize there is something wrong with the checker.\r\n\r\nThus, in this PR we add an optional flag to the well-formedness check. In well-formedness tests, we will turn off the structure info check so that the original reason of being malformed will be revealed correctly.\r\n\r\n---\r\n\r\nThis PR also cleans up the DiagnosticContext parameter in the WellFormed API - the diag_ctx has been unused since the merge of #99.",
    "author": "MasterJH5574",
    "date": "2022-12-23T19:46:07Z",
    "jobs": []
  },
  {
    "sha": "03afc40f01310ea1543579fc56e6ef0fce6889b8",
    "headline": "[Op] Enforce int64 output shape in CallTIR (#322)",
    "body": "",
    "author": "MasterJH5574",
    "date": "2022-12-23T12:33:25Z",
    "jobs": []
  },
  {
    "sha": "0774958f369e333960b673a1582a8738de81e400",
    "headline": "[Bugfix] Handle function name properly in Relax TVMScript printer (#317)",
    "body": "* remove relax_func_name_ and change logic\r\n\r\n* well_formed check for globalvar and gsymbol consistency\r\n\r\n* revise the logic in well_formed and update test\r\n\r\n* Remove `global_symbol` in test_function_attr.py\r\n\r\n* Update docs\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "SiriusNEO",
    "date": "2022-12-23T00:03:48Z",
    "jobs": []
  },
  {
    "sha": "40fd2ef725728ad6572ce5804a34d505c69c0f75",
    "headline": "[REFACTOR] M1: Change parser/printer to only depend on struct info (#\u2026",
    "body": "\u2026319)\n\n* [REFACTOR] StructInfo M1: Parser/printer/Var/Function to only depend on struct info field\r\n\r\n* Update src/relax/backend/vm/vm_shape_lower.cc\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\n\r\n* Address comments\r\n\r\n* Allow function to have default value\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "tqchen",
    "date": "2022-12-22T01:21:57Z",
    "jobs": []
  },
  {
    "sha": "053312f06487326fb935f8a7f7cee09e03b645c7",
    "headline": "[REFACTOR][ARCH] Introduce StructInfo M0 (#314)",
    "body": "* [IR] Introduce StructInfo\r\n\r\n* StructInfoFunctor and Analysis Support\r\n\r\n* [TVMScript] Parse type/shape annotation with StructInfo\r\n\r\n* remove runtime type assign\r\n\r\n* Remove type/shape during parsing (#2)\r\n\r\n* Normalizer prep: simple checks and legacy function renaming.\r\n\r\n* Struct info deduction in BlockBuilder.\r\n\r\n* Two TODOs\r\n\r\n* StructInfo Normalizer Fixes (#3)\r\n\r\n* StructInfo AST Fix\r\n\r\n* Fix Extern Func Deduction and shape mutator.\r\n\r\n* Update VoidStructInfo & globalvar (#4)\r\n\r\n* Fix passes and proper sinfo propagation.\r\n\r\n* Refactor EraseToWellDefined to Enable Remapping\r\n\r\n* [WIP] First stab at symbolic param tracking\r\n\r\n* Update EraseToWellDefined to support symbolic shape return (#5)\r\n\r\n* fix R.shape with ndim (#6)\r\n\r\n* Remove update shape/type\r\n\r\n* Address review comment, AnnotateTypeShape=>AnnotateStructInfo\r\n\r\n* Update include/tvm/script/ir_builder/relax/frame.h\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\n\r\n* Address comments\r\n\r\n* Update printer to use structinfo (#7)\r\n\r\n* Update Error mechanism to prep for obj loc based reporting\r\n\r\n* Symbolic shape aware function call return value derivation.\r\n\r\nThe main flow works as follows:\r\n- Match and populate shape_var_map and var_map by visit each pair of\r\n  param and call arguments.\r\n- Call EraseToWellDefined to map the ret parameter to new result.\r\n\r\n* [ANALYSIS] Refactor well-form to only look at struct info.\r\n\r\n* Update comments according to reviews.\r\n\r\n* Update include/tvm/relax/struct_info.h\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>\r\n\r\nCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>\r\nCo-authored-by: Tianqi Chen <tqchen>\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "tqchen",
    "date": "2022-12-21T05:42:29Z",
    "jobs": []
  },
  {
    "sha": "54d86e1135d56bee9a25791472d2c5885707a4f0",
    "headline": "Update relay_translator.py",
    "body": "",
    "author": "tqchen",
    "date": "2022-12-16T22:48:26Z",
    "jobs": []
  },
  {
    "sha": "e566dc2d3344abb74ec869be7de5c29bacb3d943",
    "headline": "[Translator] Remove global symbol and follow-up fix for #262 (#316)",
    "body": "This PR removes the `global_symbol` linkage added by Relay Translator. It also fixes unaddressed comments of #262.\r\n\r\nAll tests can pass locally and I believe it is safe to merge this PR directly.",
    "author": "MasterJH5574",
    "date": "2022-12-16T22:37:00Z",
    "jobs": []
  },
  {
    "sha": "2e9516f8c19cfd40119632d68c977a2b88782e32",
    "headline": "[Translator] Support translating op calls with Tuple input (#262)",
    "body": "Previously, when a Relay function contains a Call which directly uses Tuples as arguments (the example below),\r\n```\r\n%25 = (%23, %24) /* ty=(Tensor[(1, 160), float32], Tensor[(1, 160), float32]) */;\r\n%26 = concatenate(%25, axis=-1) /* ty=Tensor[(1, 320), float32] */;\r\n```\r\nour Relay-translator is unable to generate corresponding CallTIR, because the translator always assumes a argument of a Call is mapped to a single tensor (see the code snippet below: the translator directly passes the Relax variable `new_args[-1]` to function `te_tensors`, which translate a Var to a single tensor).\r\nhttps://github.com/tlc-pack/relax/blob/60e9a01cdfdd013945790fc03d5abad29b8a7c0b/python/tvm/relax/testing/relay_translator.py#L124\r\nhttps://github.com/tlc-pack/relax/blob/60e9a01cdfdd013945790fc03d5abad29b8a7c0b/src/relax/ir/emit_te.h#L56-L61\r\n\r\nBut in fact, the Relax variable may correspond to a Tuple of tensors, which wasn\u2019t taken into consideration before. And such case can lead to error in `TETensor`, when creating tensors.\r\n\r\nTherefore, this PR fixes the issue by examine the Relax variable before the tensor creation of Relay Call arguments. If an argument has shape Tuple and type TupleType, we break down the tuple Variable and emit a TupleGetItem for each field, and meanwhile create a tensor for each field.",
    "author": "MasterJH5574",
    "date": "2022-12-16T21:19:48Z",
    "jobs": []
  },
  {
    "sha": "63c5ae2a1ef1e9f5f193cfa6fc440a58a522ea61",
    "headline": "Remove relax parser_v1 (#313)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2022-12-16T13:02:13Z",
    "jobs": []
  },
  {
    "sha": "3ec249f2597310efc604202d87b490a5a62260dd",
    "headline": "[Debugging][Arch] Expose `shape_` fields for `TupleGetItem` and `If` \u2026",
    "body": "\u2026nodes, fix AST printer accordingly (#311)\n\n* Make the shape of If and TupleGetItem nodes accessible in Python\r\n\r\n* Remove order-dependency from AST printer tests\r\n\r\n* Trailing whitespace",
    "author": "slyubomirsky",
    "date": "2022-12-15T03:51:38Z",
    "jobs": []
  },
  {
    "sha": "3dec0a31336948604bf83ac2250a295b569be7f0",
    "headline": "[IR] Dedicated Relax Call, Constant, Tuple, TupleGetItem, If (#306)",
    "body": "* relax.Constant.\r\n\r\n* Add callnode;\r\n\r\n* Tuple, tuplegetitem, If\r\n\r\n* mypy.\r\n\r\n* lint\r\n\r\n* rebase & fix printer.\r\n\r\n* rebase & remove virtual_device_\r\n\r\n* address comments & leave todos.\r\n\r\n* address comments.\r\n\r\n* address comments.\r\n\r\n* tuple index.\r\n\r\n* type anno.",
    "author": "YuchenJin",
    "date": "2022-12-14T16:11:47Z",
    "jobs": []
  },
  {
    "sha": "11915aee0b5c773c513c06c125a4287c03acad02",
    "headline": "[BlockBuilder][Refactor] Normalize nested `SeqExpr`s (#310)",
    "body": "\r\n\r\nCo-authored-by: Ruihang Lai <ruihangl@cs.cmu.edu>",
    "author": "slyubomirsky",
    "date": "2022-12-14T14:09:03Z",
    "jobs": []
  },
  {
    "sha": "fc8d6d9a3a0c2e181bb8e0815767186f9ad472ba",
    "headline": "[ExprMutator] No prologue in VisitWithNewScope when input is SeqExpr \u2026",
    "body": "\u2026(#305)",
    "author": "MasterJH5574",
    "date": "2022-12-13T22:06:06Z",
    "jobs": []
  },
  {
    "sha": "a9ac833ed14767c66a94d0984c4f9d7f5d52cf7f",
    "headline": "[REFACTOR] Refactor BlockBuilder (#308)",
    "body": "",
    "author": "tqchen",
    "date": "2022-12-13T20:27:05Z",
    "jobs": []
  },
  {
    "sha": "4d0792d6750f1fff9fb84aa611c4e364a6031577",
    "headline": "[Normalizer] Combine Nearby Blocks in SeqExprs (#298)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2022-12-10T17:28:56Z",
    "jobs": []
  },
  {
    "sha": "6a8732d6c0888733cfe3e8ac0d5db81d84b029eb",
    "headline": "[ARCH] Add VisitBinding second-level dispatcher in Expr type. (#301)",
    "body": "",
    "author": "tqchen",
    "date": "2022-12-09T00:33:18Z",
    "jobs": []
  },
  {
    "sha": "076735c1f0a46a5dc146a8358f72fe544c3b224b",
    "headline": "[Linkage] Cleanup global_symbol attachment and linkage. (#300)",
    "body": "* Cleanup global_symbol attachment and linkage.\r\n\r\n* lint\r\n\r\n* Add global_symbol to the main function in translation.",
    "author": "YuchenJin",
    "date": "2022-12-08T00:55:40Z",
    "jobs": []
  },
  {
    "sha": "21aa3f6ef533e0dd6d20a4773465917cad315653",
    "headline": "[ARCH] Introduce NestedMsg to robustly handle nested-tuple analysis (\u2026",
    "body": "\u2026#295)",
    "author": "tqchen",
    "date": "2022-12-07T02:35:20Z",
    "jobs": []
  },
  {
    "sha": "92add75c814c0cf133ff7821b31cfa0dcd6ce491",
    "headline": "[TVMScript] Update sccript printer to enable roundtrip tests (#291)",
    "body": "",
    "author": "Hzfengsy",
    "date": "2022-12-05T13:57:21Z",
    "jobs": []
  },
  {
    "sha": "dfd813dda99bea111ab076ecfc7192a058330a13",
    "headline": "[Debugging] Support PackedFuncType in the AST Printer (#289)",
    "body": "",
    "author": "slyubomirsky",
    "date": "2022-12-02T23:33:50Z",
    "jobs": []
  },
  {
    "sha": "1fdeac530c46bcf1b0e2d9fe075095cf548a5302",
    "headline": "[IR][Bugfix] Improvements to the normalizer and well-formed checker (\u2026",
    "body": "\u2026#288)",
    "author": "slyubomirsky",
    "date": "2022-12-02T23:31:39Z",
    "jobs": []
  },
  {
    "sha": "a486d683e6f58f7cece6b5191b16d06833cd0d2b",
    "headline": "Enforce i64 index in ShapeExpr (#281)",
    "body": "",
    "author": "yongwww",
    "date": "2022-12-02T04:00:38Z",
    "jobs": []
  },
  {
    "sha": "85356fa212b065541ad25630eeeb477bca48045e",
    "headline": "[Parser] Register memory operators to new parser. (#279)",
    "body": "",
    "author": "YuchenJin",
    "date": "2022-12-01T19:00:47Z",
    "jobs": []
  },
  {
    "sha": "9fcc73da0a44e640b28db551958d73c620aee8ae",
    "headline": "[TVMScript] enable the closure test (#280)",
    "body": "* [TVMScript] enable the closure tests.",
    "author": "yongwww",
    "date": "2022-12-01T16:55:31Z",
    "jobs": []
  },
  {
    "sha": "2a15c8b4f320cdd029ffe9e8686fe6fbf3b90ac2",
    "headline": "[Normalizer] Enforce all Expr have checked_type_ invariance after nor\u2026",
    "body": "\u2026malization. (#287)",
    "author": "YuchenJin",
    "date": "2022-12-01T13:47:05Z",
    "jobs": []
  }
]